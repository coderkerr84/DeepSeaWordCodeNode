{"version":3,"sources":["logo.svg","serviceWorker.js","Chris.js","Timer.js","UserGuess.js","ClueScore.js","TimerCircle.js","ClueOuter.js","ClueOuterList.js","GameBoard.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Chris","Timer","UserGuess","className","style","width","type","onChange","event","props","changeUserGuess","target","value","clueId","React","Component","fontFamily","margin","padding","scoreStyle","ClueScore","color","COLOR_CODES","info","warning","threshold","alert","timePassed","timeLeft","timerInterval","Array","fill","remainingPathColor","oxygenBottlesApplied","Init","uniqueKey","onTimesUp","console","log","document","getElementById","innerHTML","formatTime","setInterval","circleDasharray","rawTimeFraction","calculateTimeFraction","toFixed","setAttribute","setCircleDasharray","classList","remove","add","setRemainingPathColor","startTimer","clearInterval","time","minutes","Math","floor","seconds","TimerCircle","sec","this","initializeTimers","haltTimer","oxygenBottlesUsed","currentRoundBeingPlayed","id","ClueOuter","clue","thisRoundId","clueOuterClassName","userGuess","diverClassName","diver2ndStyle","roundStyle","inlineBlock","name","floatLeft","textAlignLeft","map","e","i","key","ClueInner","display","src","height","diverStyle","onClick","onDiverClick","floatRight","buttonPadding","backgroundColor","onClickOxygen","textAlign","textAlignLast","left","float","GameBoard","handleSubmitAndDiveClick","thisRoundNumber","setState","currentRound","handleDiverClick","initializeTimersCopy","state","slice","handleOxygenClick","oxygenBottlesUsedNew","handleChangeUserGuess","userGuessesCopy","userGuesses","clues","obj","table","push","JSON","stringify","GetJson","parsedClues","parse","titleStyle","creditStyle","instructionsStyle","renderClues","rows","length","renderClue","fontSize","top","Book","title","author","pages","freeBookmark","createElement","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b0029a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\n\nfunction Chris(){\n    const [count, setCount] = useState(0);\n\n    return (\n        <div>\n            <p>You clicked {count} times</p>\n            <button onClick={() => setCount(count + 1)}>\n            Click me\n            </button>\n        </div>\n    )\n}\n\nexport default Chris;\n","import React, { Component } from 'react';\nimport { View,Text,Button,StyleSheet } from 'react';\nimport  { useEffect, useState } from \"react\";\n/*\n borrowed from here:\n https://www.digitalocean.com/community/tutorials/react-countdown-timer-react-hooks\n and consider wapping to this more beautiful one:\n https://css-tricks.com/how-to-create-an-animated-countdown-timer-with-html-css-and-javascript/\n \n*/\nfunction Timer() {\n    const calculateTimeLeft = () => {\n      let year = new Date().getFullYear();\n      const difference = +new Date(`${year}-10-1`) - +new Date();\n      let timeLeft = {};\n      const countdownFromSeconds = 60;\n      if (difference > 0) {\n        timeLeft = {\n          seconds: Math.floor((difference / 1000) % countdownFromSeconds),\n        };\n      }\n  \n      return timeLeft;\n    };\n    //readme: hooks?\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n    // readme: this next line appears to be not needed\n    const [year] = useState(new Date().getFullYear());\n  \n    useEffect(() => {\n      setTimeout(() => {\n        setTimeLeft(calculateTimeLeft());\n      }, 1000);\n    });\n  \n    const timerComponents = [];\n  \n    Object.keys(timeLeft).forEach((interval) => {\n      if (!timeLeft[interval]) {\n        return;\n      }\n  \n      timerComponents.push(\n        <span>\n          {timeLeft[interval]} {\"s \"}\n        </span>\n      );\n    });\n    return (\n      <span>\n        {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n      </span>\n    );\n  }\n  \n  export default Timer;","import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\n\nclass UserGuess extends React.Component\n{\n    //const [count, setCount] = useState(0);\nrender()\n{\n    return (\n        \n        <div className='UserGuess' style={style}>\n            <input style={{width:'80px'}} type='text' onChange={(event) => this.props.changeUserGuess(event.target.value, this.props.clueId)}>\n            </input>\n        </div>  \n    )\n    }\n}\nvar style = {\n    fontFamily: 'Arial',\n    margin: '5px 5px 0px 0px',\n    padding: '1px'\n  }\nexport default UserGuess;\n","import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\n\nfunction ClueScore(){\n\n    return (\n        \n            <input type='Radio' color='lime' style={scoreStyle}/>\n        \n    )\n}\nvar scoreStyle = {\n    fontFamily: 'Arial',\n    margin: '5px 5px 0px 0px',\n    padding: '1px'\n  }\nexport default ClueScore;\n","// Credit: Mateusz Rybczonec\nimport React, {useState, Component} from 'react';\nimport './TimerCircle.css';\n\nconst FULL_DASH_ARRAY = 283;\nconst WARNING_THRESHOLD = 10;\nconst ALERT_THRESHOLD = 5;\nconst TIMER_NEEDS_INITIALIZING = 1;\nconst TIMER_HAS_BEEN_INITIALIZED = 2;\n\n\nconst COLOR_CODES = {\n  info: {\n    color: \"green\"\n  },\n  warning: {\n    color: \"orange\",\n    threshold: WARNING_THRESHOLD\n  },\n  alert: {\n    color: \"red\",\n    threshold: ALERT_THRESHOLD\n  }\n};\n\n//readme: these variables are shared by all TimerCircles (unlike State which they each have their own)\nconst TIME_LIMIT = 90;\nlet timePassed = 0;\nlet timeLeft = TIME_LIMIT;\nlet timerInterval =  Array(7).fill(null);\nlet remainingPathColor = COLOR_CODES.info.color;\nlet oxygenBottlesApplied = 0;\n\nfunction Init(uniqueKey)\n{\n        onTimesUp();\n\n        /*\n        * readme: bring these two back in if you want the timer to NOT be shared across all rounds\n        timePassed = 0;\n        timeLeft = TIME_LIMIT;\n        */\n        timerInterval[uniqueKey] = null;\n        remainingPathColor = COLOR_CODES.info.color;\n    \n        console.log('Timer started' + uniqueKey);\n        document.getElementById(\"TimerCircle\" + uniqueKey).innerHTML = '<div class=\"base-timer\"><svg class=\"base-timer__svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">   <g class=\"base-timer__circle\">    <circle class=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\"></circle>    <path      id=\"base-timer-path-remaining'+uniqueKey+'\"      stroke-dasharray=\"283\"       class=\"base-timer__path-remaining '+remainingPathColor+'\"      d=\"        M 50, 50        m -45, 0        a 45,45 0 1,0 90,0        a 45,45 0 1,0 -90,0      \"    ></path>  </g></svg><span id=\"base-timer-label'+uniqueKey+'\" class=\"base-timer__label\">'+formatTime(timeLeft)+'</span></div>';\n        startTimer(uniqueKey);\n}\n\nfunction AddToTimer(sec)\n{\n    console.log('timePassed'+ timePassed);\n    timePassed -= sec;\n}\n\nfunction onTimesUp(uniqueKey) {\n  clearInterval(timerInterval[uniqueKey]);\n}\n\nfunction startTimer(uniqueKey) {\n    timerInterval[uniqueKey] = setInterval(() => {\n    timePassed = timePassed += 1;\n    timeLeft = TIME_LIMIT - timePassed;\n    document.getElementById(\"base-timer-label\" + uniqueKey).innerHTML = formatTime(\n      timeLeft\n    );\n    setCircleDasharray(uniqueKey);\n    setRemainingPathColor(timeLeft,uniqueKey);\n\n    if (timeLeft === 0) {\n      onTimesUp(uniqueKey);\n    }\n  }, 1000);\n}\n\nfunction formatTime(time) {\n  const minutes = Math.floor(time / 60);\n  let seconds = time % 60;\n\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n\n  return `${minutes}:${seconds}`;\n}\n\nfunction setRemainingPathColor(timeLeft,uniqueKey) {\n  const { alert, warning, info } = COLOR_CODES;\n  if (timeLeft <= alert.threshold) {\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.remove(warning.color);\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.add(alert.color);\n  } else if (timeLeft <= warning.threshold) {\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.remove(info.color);\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.add(warning.color);\n  }\n}\n\nfunction calculateTimeFraction() {\n  const rawTimeFraction = timeLeft / TIME_LIMIT;\n  return rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);\n}\n\nfunction setCircleDasharray(uniqueKey) {\n  const circleDasharray = `${(\n    calculateTimeFraction() * FULL_DASH_ARRAY\n  ).toFixed(0)} 283`;\n  document\n    .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n    .setAttribute(\"stroke-dasharray\", circleDasharray);\n}\n\nclass TimerCircle extends React.Component\n{ \n    // readme: dont appear to need each Timer to have their own state.\n    // am happy sharing the timer variables globally across all Timers (e.g. TimePassed and oxygenBottlesApplied are used by all 7)\nrender()\n    {\n        //console.log('Got here' + this.props.initializeTimers[this.props.uniqueKey - 1] + ' ' + this.props.uniqueKey);\n        \n        // readme: '1' means the timer's div is ready and the timer can be initialized. '2' means it's all setup, dont reinit it as that would reset it.\n        if(this.props.initializeTimers[this.props.uniqueKey - 1] == TIMER_NEEDS_INITIALIZING)\n        {\n            Init(this.props.uniqueKey);\n            //readme: to my surprise changing this array prop seems to change the STATE (possibly am breaking a pattern)\n            //readme: will leave for now, but could change later to a callback to the GameBoard and change the state in there instead.\n            this.props.initializeTimers[this.props.uniqueKey - 1] = TIMER_HAS_BEEN_INITIALIZED;\n        }\n\n        // readme: haltTimer will be true for any rounds that aren't the current round.\n        if(this.props.haltTimer)\n        {   \n            onTimesUp(this.props.uniqueKey);          \n        }\n\n        if(oxygenBottlesApplied < this.props.oxygenBottlesUsed &&\n            this.props.currentRoundBeingPlayed == this.props.uniqueKey)\n        {\n            //readme: 11 because it takes about 1s for the 10 to be added!\n            //readme: note the condition checking what round we are on, necessary or ALL 7 timers would think they needed to update the timer.\n            AddToTimer(11);\n            oxygenBottlesApplied++;\n        }\n\n        return(\n            <div id={\"TimerCircle\" + this.props.uniqueKey} style={this.props.style}></div>\n        );\n    }\n    //readme: putting this here solved a problem of a red warning the browser dev console when setting state inside Render()\n    componentDidUpdate()\n    {\n        //readme: have no longer got a reason to use this...\n    }\n}\n\nexport default TimerCircle;\n\n\n\n","import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\nimport Timer from './Timer';\nimport './ClueOuter.css';\nimport UserGuess from './UserGuess'; \nimport ClueScore from './ClueScore';\nimport TimerCircle from './TimerCircle.js';\n\nclass ClueOuter extends React.Component\n{\n    render(){\n        let clue = this.props.clue;\n        let thisRoundId = clue.id;\n        let userGuess = this.props.userGuess;\n        let clueOuterClassName = this.props.currentRoundBeingPlayed >= thisRoundId ? \"clueOuterInPlay clueOuter\" : \"clueOuterNotInPlay clueOuter\";\n        let diverClassName = this.props.currentRoundBeingPlayed == thisRoundId ? \"showBlock\" : \"hideBlock\";\n        let diver2ndStyle = this.props.initializeTimers[clue.id - 1] != null ? 'none' : '';\n        //console.log(clue.clue);\n        return(\n        <div className={clueOuterClassName}>\n            <div style={roundStyle}>\n                {clue.id}\n            </div>\n  \n            {/* readme: this below probably should be another Component */}\n            <div style={inlineBlock} name={\"ClueOuterDiv\" + clue.id}>\n                <div style={floatLeft}>\n                    {ClueInner(clue, this.props.changeUserGuess)}\n                </div>\n                <TimerCircle \n                    initializeTimers={this.props.initializeTimers} \n                    style={floatLeft} \n                    uniqueKey={clue.id}\n                    haltTimer={clue.id < this.props.currentRoundBeingPlayed}\n                    oxygenBottlesUsed={this.props.oxygenBottlesUsed}\n                    currentRoundBeingPlayed={this.props.currentRoundBeingPlayed}\n                    /> \n                <div style={floatLeft} className={diverClassName}>\n                    <span style={{display:diver2ndStyle}}>{clue.id == 1 ? \"Click To Start\" : \"\"}</span>\n                    <img src=\"images/diver2.png\" height=\"80px\" style={{...diverStyle,...{display:diver2ndStyle}}} onClick={(event) => this.props.onDiverClick(clue.id)}>\n                    </img>                    \n                </div>\n                <div style={floatRight}>\n                    <div style={buttonPadding}>\n                        <button className=\"button\" style={{backgroundColor:\"coral\"}} onClick={(event) => this.props.onClick(clue.id)}>\n                            {clue.id == 7 ? \"Complete!\" : \"Submit And Dive\"}\n                        </button>\n                    </div>\n                    <div style={buttonPadding}>\n                        <button className=\"button\" style={{backgroundColor:\"antiquewhite\"}} onClick={function() { alert('Resurface'); }}>\n                                Resurface\n                        </button>\n                    </div>\n                    <div style={buttonPadding}>\n                        <button className=\"button\" onClick={(event) => this.props.onClickOxygen(clue.id)}>\n                                Refill O<sub>2</sub> (+10s)\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\n// readme: this was once a separate component but I was having to pass from parent to child to child and it felt messy\nfunction ClueInner(clue, onChange){\n    // console.log(clue.id);\n    return (\n        <div className='ClueInner' style={style}>\n            <label className='ClueInnerLabel'>{clue.clue}</label>\n            \n            <UserGuess changeUserGuess={onChange} clueId={clue.id}/>  \n\n            {/* consider making this ClueScores into another component?    */}\n            <div className='ClueScores' style={textAlignLeft}>                \n                {[...Array(clue.id)].map((e, i) =>  <ClueScore key={i}/>)}\n            </div>\n         \n        </div>\n    );\n}\nvar textAlignLeft ={\n    textAlign: 'left'\n}\n\nvar diverStyle ={\n    display: 'block',\n    margin: 'auto'\n}\nvar style = {\n    fontFamily: 'Arial',\n    margin: '10px',\n    padding: '10px',\n    textAlignLast: 'center'\n  }\nvar roundStyle = {\n    backgroundColor: 'steelblue',\n    color: 'white',\n    fontFamily: 'Arial',\n    left: '10px',\n    width: '20px',\n    textAlign: 'center'\n  }\n\n  var styleTimer = {\n    textAlign: 'center',\n    backgroundColor : 'skyblue',\n    width: '80px',\n    padding: '5px',\n    margin: 'auto',\n    borderRadius: '25px'\n  }\n\n  var inlineBlock = {\n    display: 'inline-block',\n    width: '100%'\n  }\n\nvar buttonPadding = {\n    padding: '5px'\n}\n\n  var floatRight = {\n    float: 'right',\n    width: '33%',\n    textAlign: 'center'\n  }\n\n  var floatNone = {\n      float: 'none',\n      width: '33%'\n  }\n\n  var floatLeft = {\n    float: 'left',\n    width: '33%'\n  }\n\nexport default ClueOuter;\n","import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\nimport ClueInner from './ClueInner';\nimport ClueOuter from './ClueOuter';\n\n// readme: hoping to abandon this class\n\nclass ClueOuterList extends React.Component\n{\n    render(){\n        //console.log(this.props.clues);\n        let parsedClues = JSON.parse(this.props.clues);\n        //console.log(parsedClues.table);\n        let d = CreateOuters(parsedClues.table, this.props.userGuesses);\n        return(\n        <div className='ClueOuterList' style={style}>\n            {/* here we print out all the contents of the d object */}\n            {d.map(x => x)}\n        </div>\n        );\n    }\n}\n\nfunction CreateOuters(clues, userGuesses)\n{\n    console.log(clues.length); \n    let rows = [];\n    for(var i = 1; i < clues.length + 1; i++){\n      //console.log('x' + clues.table);  \n      rows.push(<ClueOuter roundNum={i} clue={clues[i-1]} key={i} userGuess={userGuesses[i-1]}/>);\n    }\n    return rows;\n}\n\nvar style = {\n    margin: 'auto',\n    width: '90%',\n    padding: '10px'\n  }\n\nexport default ClueOuterList;   \n","import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\nimport ClueOuterList from './ClueOuterList';\nimport './GameBoard.css';\nimport ClueOuter from './ClueOuter';\n\nclass GameBoard extends React.Component\n{ \n    // const [currentRoundBeingPlayed, setCount] = useState(1);\n    constructor(props) {\n        super(props);\n        this.state = {\n          userGuesses: Array(7).fill(null),\n          currentRound: 1,\n          oxygenBottlesUsed: 0,\n          initializeTimers: Array(7).fill(null)\n        };\n      }\n      handleSubmitAndDiveClick = (thisRoundNumber) => {\n        this.setState({currentRound: thisRoundNumber+1});\n        this.handleDiverClick(thisRoundNumber+1);\n      };\n\n      handleDiverClick = (thisRoundNumber) =>{\n          //alert('Clicked on diver' + thisRoundNumber);\n          const initializeTimersCopy = this.state.initializeTimers.slice();\n          initializeTimersCopy[thisRoundNumber-1] = 1;\n          this.setState({initializeTimers : initializeTimersCopy})\n      }\n\n      handleOxygenClick = (thisRoundNumber) => {\n        //readme: not sure if I'll want to count which round the oxygen was used in, might leave param there til i decide\n          let oxygenBottlesUsedNew = this.state.oxygenBottlesUsed + 1;\n        this.setState({oxygenBottlesUsed: oxygenBottlesUsedNew});\n      };\n      \n    //   readme: this is an example of 2 pieces of info being returned to the parent from a child so we can update the state\n       handleChangeUserGuess = (userGuess,i) => {\n        const userGuessesCopy = this.state.userGuesses.slice();\n        userGuessesCopy[i-1] = userGuess;\n        this.setState({userGuesses: userGuessesCopy});\n     }\n\n      render()\n      {\n        let clues = GetJson();\n        let parsedClues = JSON.parse(clues);\n\n        return (\n            <div className=\"background center-screen\">\n                <div className='TitleBar' style={titleStyle}>\n                    DeepSeaWord                    \n                </div>\n                <div style={creditStyle}>\n                    by Chris Kerr                     \n                </div>\n                <div className='GameBoard' style={instructionsStyle}>\n                    In every round submit a word that meets that clue and all previous clues. <br/> \n                    Dont run out of oxygen! If the timer expires so do you! <br/> \n                    High scores require: speed, valid words, limited oxygen refills \n                    and finding that treasure!\n                    {this.renderClues(parsedClues)}\n                </div>\n            </div>\n            )\n        }\n\n        renderClues(parsedClues)\n        {\n            let rows = [];\n            for(var i = 1; i < parsedClues.table.length + 1; i++){\n                rows.push(this.renderClue(i, parsedClues.table[i-1]));  \n            }\n            return rows;\n        }\n\n        renderClue(i, clue)\n        {\n            return (\n                //readme: wonder at what point its an antipattern to pass so much down.\n                <ClueOuter \n                    style={style} \n                    clue={clue} \n                    key={i} \n                    userGuess={this.state.userGuesses[i-1]} \n                    onClick={this.handleSubmitAndDiveClick} \n                    onClickOxygen={this.handleOxygenClick} \n                    changeUserGuess={this.handleChangeUserGuess} \n                    currentRoundBeingPlayed={this.state.currentRound}\n                    initializeTimers={this.state.initializeTimers}\n                    onDiverClick={this.handleDiverClick}\n                    oxygenBottlesUsed={this.state.oxygenBottlesUsed}                    \n                    />   \n            );\n        }\n}\n\nfunction GetJson()\n{\n    var obj = {\n        table: []\n    }\n    // PIPE\n    obj.table.push({id: 1, clue: \"Contains letter 'i'.\"});\n    obj.table.push({id: 2, clue: \"Has fewer than 5 letters.\"});\n    obj.table.push({id: 3, clue: \"Ends with 'e'\"});\n    obj.table.push({id: 4, clue: \"Syallable count : 1\"});\n    obj.table.push({id: 5, clue: \"Vowel count : 2\"});\n    obj.table.push({id: 6, clue: \"First letter 'P'\"});\n    obj.table.push({id: 7, clue: \"A cask usually containing two hogsheads or 126 gallons\"});\n\n    var json = JSON.stringify(obj);\n    \n    return json;\n}\n\nvar instructionsStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'white',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Arial',\n    fontSize: '12px',\n    // margin: '20px 200px 40px 200px',\n    padding: '20px',\n    textAlign: 'center'\n}\n\nvar style = {\n    backgroundColor: 'lightblue',\n    color: 'darkblue',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Arial',\n    fontSize: '12px',\n    // margin: '20px 200px 40px 200px',\n    padding: '20px',\n    textAlign: 'left'\n  }\n\n  var creditStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'gold',\n    fontFamily: 'Cochin',\n    fontSize: '11px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nvar titleStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'yellow',\n    fontFamily: 'Phosphate',\n    fontSize: '45px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nexport default GameBoard;\n","import React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Chris from './Chris';\nimport GameBoard from './GameBoard';\n\nlet bookList = [\n  {\"title\" : \"the sun also rises\", \"author\" : \"Orson Welles\", \"pages\": 222},\n  {\"title\" : \"Harry Potter\", \"author\" : \"JK Rowling\", \"pages\": 333} \n]\n\nconst Book = ({title, author, pages, freeBookmark}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      <p>by: {author}</p>\n      <p>Pages: {pages} pages</p>\n      <p>Free Bookmark Today {freeBookmark ? 'yes!' : 'no!'}</p>\n    </section>\n  )\n}\n\n class Library extends React.Component{\n   state = {  \n     open: true,\n     freeBookmark: true \n    }\n\n   toggleOpenClosed = () => {\n      this.setState( prevState => ({\n        open: !prevState.open\n      }))\n  }         \n  render() {\n     const { books } = this.props\n    return (\n    <div>\n      <h1>The library is {this.state.open ? 'open' : 'closed'}</h1>\n      <button onClick={this.toggleOpenClosed}>Change</button>\n      {books.map(\n          (book, i) => \n            <Book \n              key={i}\n              title={book.title} \n              author={book.author} \n              pages={book.pages}\n              freeBookmark={this.state.freeBookmark}/>\n    )}\n    </div>\n  )\n  }\n}\n\n\nconst title = React.createElement(\n  'h1',\n  {id: 'title', className: 'header'},\n  'Hello Chris'\n);\n\nlet skiData = {\n  total: 50,\n  powder: 20,\n  backCountry: 10,\n  goal: 100\n}\n\nconst getPercent = decimal => {\n  return decimal * 100 + '%'\n}\nconst calcGoalProgress = (total, goal) => {\n  return getPercent(total/goal)\n}\n\nclass Message extends Component{\n  render(){\n    console.log(this.props)\n    return (\n      <div>\n        <h1 style={{color: this.props.color}}>\n    {this.props.msg}\n        </h1>\n        <p>\n          I'll check back in {this.props.minutes} minutes\n        </p>\n      </div>\n    )\n  }\n}\n\nconst SkiDayCounter = ({total,powder,backCountry, goal}) => {\n    return (\n      <section>\n        <div>\n          <p>\n            Total Days : {total}\n          </p>\n        </div>\n        <div>\n          <p>\n            Powder Days : {powder}\n          </p>\n        </div>\n        <div>\n          <p>\n            BackCountry Days : {backCountry}\n          </p>\n        </div>\n        <div>\n          <p>\n            Goal Progress : {calcGoalProgress(total,goal)}\n          </p>\n        </div>\n      </section>\n    )\n}\n\nvar style = {\n  backgroundColor: 'orange',\n  color: 'white',\n  fontFamily: 'Arial'\n}\n\n// ReactDOM.render(\n//   <Message color=\"blue\" minutes={50} msg=\"how are you?\"/>,\n//   document.getElementById('root')\n// );\n\n\n// render(\n//   <SkiDayCounter \n//   total={skiData.total}\n//   powder = {skiData.powder}\n//   backCountry = {skiData.backCountry}\n//   goal = {skiData.goal}\n//   />,\n//   document.getElementById('root')\n// );\n\n// render(\n//   <Library books={bookList}/>,\n//   document.getElementById('root')  \n// )\n\nrender(\n  <GameBoard/>,\n  document.getElementById('root') \n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}