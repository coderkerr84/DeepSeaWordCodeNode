{"ast":null,"code":"import _classCallCheck from\"/Users/JMKerr/Code/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/JMKerr/Code/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/JMKerr/Code/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/JMKerr/Code/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// Credit: Mateusz Rybczonec\nimport React,{useState,Component}from'react';import'./TimerCircle.css';var FULL_DASH_ARRAY=283;var WARNING_THRESHOLD=10;var ALERT_THRESHOLD=5;var TIMER_NEEDS_INITIALIZING=1;var TIMER_HAS_BEEN_INITIALIZED=2;var COLOR_CODES={info:{color:\"green\"},warning:{color:\"orange\",threshold:WARNING_THRESHOLD},alert:{color:\"red\",threshold:ALERT_THRESHOLD}};//readme: these variables are shared by all TimerCircles (unlike State which they each have their own)\nvar TIME_LIMIT=90;var timePassed=0;var timeLeft=TIME_LIMIT;var timerInterval=Array(7).fill(null);var remainingPathColor=COLOR_CODES.info.color;var oxygenBottlesApplied=0;function Init(uniqueKey){onTimesUp();/*\n        * readme: bring these two back in if you want the timer to NOT be shared across all rounds\n        timePassed = 0;\n        timeLeft = TIME_LIMIT;\n        */timerInterval[uniqueKey]=null;remainingPathColor=COLOR_CODES.info.color;console.log('Timer started'+uniqueKey);document.getElementById(\"TimerCircle\"+uniqueKey).innerHTML='<div class=\"base-timer\"><svg class=\"base-timer__svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">   <g class=\"base-timer__circle\">    <circle class=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\"></circle>    <path      id=\"base-timer-path-remaining'+uniqueKey+'\"      stroke-dasharray=\"283\"       class=\"base-timer__path-remaining '+remainingPathColor+'\"      d=\"        M 50, 50        m -45, 0        a 45,45 0 1,0 90,0        a 45,45 0 1,0 -90,0      \"    ></path>  </g></svg><span id=\"base-timer-label'+uniqueKey+'\" class=\"base-timer__label\">'+formatTime(timeLeft)+'</span></div>';startTimer(uniqueKey);}function AddToTimer(sec){console.log('timePassed'+timePassed);timePassed-=sec;}function onTimesUp(uniqueKey){clearInterval(timerInterval[uniqueKey]);}function startTimer(uniqueKey){timerInterval[uniqueKey]=setInterval(function(){timePassed=timePassed+=1;timeLeft=TIME_LIMIT-timePassed;document.getElementById(\"base-timer-label\"+uniqueKey).innerHTML=formatTime(timeLeft);setCircleDasharray(uniqueKey);setRemainingPathColor(timeLeft,uniqueKey);if(timeLeft===0){onTimesUp(uniqueKey);}},1000);}function formatTime(time){var minutes=Math.floor(time/60);var seconds=time%60;if(seconds<10){seconds=\"0\".concat(seconds);}return\"\".concat(minutes,\":\").concat(seconds);}function setRemainingPathColor(timeLeft,uniqueKey){var alert=COLOR_CODES.alert,warning=COLOR_CODES.warning,info=COLOR_CODES.info;if(timeLeft<=alert.threshold){document.getElementById(\"base-timer-path-remaining\"+uniqueKey).classList.remove(warning.color);document.getElementById(\"base-timer-path-remaining\"+uniqueKey).classList.add(alert.color);}else if(timeLeft<=warning.threshold){document.getElementById(\"base-timer-path-remaining\"+uniqueKey).classList.remove(info.color);document.getElementById(\"base-timer-path-remaining\"+uniqueKey).classList.add(warning.color);}}function calculateTimeFraction(){var rawTimeFraction=timeLeft/TIME_LIMIT;return rawTimeFraction-1/TIME_LIMIT*(1-rawTimeFraction);}function setCircleDasharray(uniqueKey){var circleDasharray=\"\".concat((calculateTimeFraction()*FULL_DASH_ARRAY).toFixed(0),\" 283\");document.getElementById(\"base-timer-path-remaining\"+uniqueKey).setAttribute(\"stroke-dasharray\",circleDasharray);}var TimerCircle=/*#__PURE__*/function(_React$Component){_inherits(TimerCircle,_React$Component);var _super=_createSuper(TimerCircle);function TimerCircle(){_classCallCheck(this,TimerCircle);return _super.apply(this,arguments);}_createClass(TimerCircle,[{key:\"render\",// readme: dont appear to need each Timer to have their own state.\n// am happy sharing the timer variables globally across all Timers (e.g. TimePassed and oxygenBottlesApplied are used by all 7)\nvalue:function render(){//console.log('Got here' + this.props.initializeTimers[this.props.uniqueKey - 1] + ' ' + this.props.uniqueKey);\n// readme: '1' means the timer's div is ready and the timer can be initialized. '2' means it's all setup, dont reinit it as that would reset it.\nif(this.props.initializeTimers[this.props.uniqueKey-1]==TIMER_NEEDS_INITIALIZING){Init(this.props.uniqueKey);//readme: to my surprise changing this array prop seems to change the STATE (possibly am breaking a pattern)\n//readme: will leave for now, but could change later to a callback to the GameBoard and change the state in there instead.\nthis.props.initializeTimers[this.props.uniqueKey-1]=TIMER_HAS_BEEN_INITIALIZED;}// readme: haltTimer will be true for any rounds that aren't the current round.\nif(this.props.haltTimer){onTimesUp(this.props.uniqueKey);}if(oxygenBottlesApplied<this.props.oxygenBottlesUsed&&this.props.currentRoundBeingPlayed==this.props.uniqueKey){//readme: 11 because it takes about 1s for the 10 to be added!\n//readme: note the condition checking what round we are on, necessary or ALL 7 timers would think they needed to update the timer.\nAddToTimer(11);oxygenBottlesApplied++;}return/*#__PURE__*/React.createElement(\"div\",{id:\"TimerCircle\"+this.props.uniqueKey,style:this.props.style});}//readme: putting this here solved a problem of a red warning the browser dev console when setting state inside Render()\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(){//readme: have no longer got a reason to use this...\n}}]);return TimerCircle;}(React.Component);export default TimerCircle;","map":{"version":3,"sources":["/Users/JMKerr/Code/react-is-fun/src/TimerCircle.js"],"names":["React","useState","Component","FULL_DASH_ARRAY","WARNING_THRESHOLD","ALERT_THRESHOLD","TIMER_NEEDS_INITIALIZING","TIMER_HAS_BEEN_INITIALIZED","COLOR_CODES","info","color","warning","threshold","alert","TIME_LIMIT","timePassed","timeLeft","timerInterval","Array","fill","remainingPathColor","oxygenBottlesApplied","Init","uniqueKey","onTimesUp","console","log","document","getElementById","innerHTML","formatTime","startTimer","AddToTimer","sec","clearInterval","setInterval","setCircleDasharray","setRemainingPathColor","time","minutes","Math","floor","seconds","classList","remove","add","calculateTimeFraction","rawTimeFraction","circleDasharray","toFixed","setAttribute","TimerCircle","props","initializeTimers","haltTimer","oxygenBottlesUsed","currentRoundBeingPlayed","style"],"mappings":"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","sourcesContent":["// Credit: Mateusz Rybczonec\nimport React, {useState, Component} from 'react';\nimport './TimerCircle.css';\n\nconst FULL_DASH_ARRAY = 283;\nconst WARNING_THRESHOLD = 10;\nconst ALERT_THRESHOLD = 5;\nconst TIMER_NEEDS_INITIALIZING = 1;\nconst TIMER_HAS_BEEN_INITIALIZED = 2;\n\n\nconst COLOR_CODES = {\n  info: {\n    color: \"green\"\n  },\n  warning: {\n    color: \"orange\",\n    threshold: WARNING_THRESHOLD\n  },\n  alert: {\n    color: \"red\",\n    threshold: ALERT_THRESHOLD\n  }\n};\n\n//readme: these variables are shared by all TimerCircles (unlike State which they each have their own)\nconst TIME_LIMIT = 90;\nlet timePassed = 0;\nlet timeLeft = TIME_LIMIT;\nlet timerInterval =  Array(7).fill(null);\nlet remainingPathColor = COLOR_CODES.info.color;\nlet oxygenBottlesApplied = 0;\n\nfunction Init(uniqueKey)\n{\n        onTimesUp();\n\n        /*\n        * readme: bring these two back in if you want the timer to NOT be shared across all rounds\n        timePassed = 0;\n        timeLeft = TIME_LIMIT;\n        */\n        timerInterval[uniqueKey] = null;\n        remainingPathColor = COLOR_CODES.info.color;\n    \n        console.log('Timer started' + uniqueKey);\n        document.getElementById(\"TimerCircle\" + uniqueKey).innerHTML = '<div class=\"base-timer\"><svg class=\"base-timer__svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">   <g class=\"base-timer__circle\">    <circle class=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\"></circle>    <path      id=\"base-timer-path-remaining'+uniqueKey+'\"      stroke-dasharray=\"283\"       class=\"base-timer__path-remaining '+remainingPathColor+'\"      d=\"        M 50, 50        m -45, 0        a 45,45 0 1,0 90,0        a 45,45 0 1,0 -90,0      \"    ></path>  </g></svg><span id=\"base-timer-label'+uniqueKey+'\" class=\"base-timer__label\">'+formatTime(timeLeft)+'</span></div>';\n        startTimer(uniqueKey);\n}\n\nfunction AddToTimer(sec)\n{\n    console.log('timePassed'+ timePassed);\n    timePassed -= sec;\n}\n\nfunction onTimesUp(uniqueKey) {\n  clearInterval(timerInterval[uniqueKey]);\n}\n\nfunction startTimer(uniqueKey) {\n    timerInterval[uniqueKey] = setInterval(() => {\n    timePassed = timePassed += 1;\n    timeLeft = TIME_LIMIT - timePassed;\n    document.getElementById(\"base-timer-label\" + uniqueKey).innerHTML = formatTime(\n      timeLeft\n    );\n    setCircleDasharray(uniqueKey);\n    setRemainingPathColor(timeLeft,uniqueKey);\n\n    if (timeLeft === 0) {\n      onTimesUp(uniqueKey);\n    }\n  }, 1000);\n}\n\nfunction formatTime(time) {\n  const minutes = Math.floor(time / 60);\n  let seconds = time % 60;\n\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n\n  return `${minutes}:${seconds}`;\n}\n\nfunction setRemainingPathColor(timeLeft,uniqueKey) {\n  const { alert, warning, info } = COLOR_CODES;\n  if (timeLeft <= alert.threshold) {\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.remove(warning.color);\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.add(alert.color);\n  } else if (timeLeft <= warning.threshold) {\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.remove(info.color);\n    document\n      .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n      .classList.add(warning.color);\n  }\n}\n\nfunction calculateTimeFraction() {\n  const rawTimeFraction = timeLeft / TIME_LIMIT;\n  return rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);\n}\n\nfunction setCircleDasharray(uniqueKey) {\n  const circleDasharray = `${(\n    calculateTimeFraction() * FULL_DASH_ARRAY\n  ).toFixed(0)} 283`;\n  document\n    .getElementById(\"base-timer-path-remaining\" + uniqueKey)\n    .setAttribute(\"stroke-dasharray\", circleDasharray);\n}\n\nclass TimerCircle extends React.Component\n{ \n    // readme: dont appear to need each Timer to have their own state.\n    // am happy sharing the timer variables globally across all Timers (e.g. TimePassed and oxygenBottlesApplied are used by all 7)\nrender()\n    {\n        //console.log('Got here' + this.props.initializeTimers[this.props.uniqueKey - 1] + ' ' + this.props.uniqueKey);\n        \n        // readme: '1' means the timer's div is ready and the timer can be initialized. '2' means it's all setup, dont reinit it as that would reset it.\n        if(this.props.initializeTimers[this.props.uniqueKey - 1] == TIMER_NEEDS_INITIALIZING)\n        {\n            Init(this.props.uniqueKey);\n            //readme: to my surprise changing this array prop seems to change the STATE (possibly am breaking a pattern)\n            //readme: will leave for now, but could change later to a callback to the GameBoard and change the state in there instead.\n            this.props.initializeTimers[this.props.uniqueKey - 1] = TIMER_HAS_BEEN_INITIALIZED;\n        }\n\n        // readme: haltTimer will be true for any rounds that aren't the current round.\n        if(this.props.haltTimer)\n        {   \n            onTimesUp(this.props.uniqueKey);          \n        }\n\n        if(oxygenBottlesApplied < this.props.oxygenBottlesUsed &&\n            this.props.currentRoundBeingPlayed == this.props.uniqueKey)\n        {\n            //readme: 11 because it takes about 1s for the 10 to be added!\n            //readme: note the condition checking what round we are on, necessary or ALL 7 timers would think they needed to update the timer.\n            AddToTimer(11);\n            oxygenBottlesApplied++;\n        }\n\n        return(\n            <div id={\"TimerCircle\" + this.props.uniqueKey} style={this.props.style}></div>\n        );\n    }\n    //readme: putting this here solved a problem of a red warning the browser dev console when setting state inside Render()\n    componentDidUpdate()\n    {\n        //readme: have no longer got a reason to use this...\n    }\n}\n\nexport default TimerCircle;\n\n\n\n"]},"metadata":{},"sourceType":"module"}