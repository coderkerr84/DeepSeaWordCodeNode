{"ast":null,"code":"var _jsxFileName = \"/Users/JMKerr/CodeNode2/react-is-fun/src/ResultsModal.js\";\nimport ReactModal from 'react-modal';\nimport React, { useState, Component } from 'react';\nimport Spinner from './Loader';\nimport './ResultsModal.css';\nimport ReactTooltip from 'react-tooltip';\n\nclass ResultsModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  } //scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n\n\n  render() {\n    console.log(\"ResultsModal\" + this.props.showModal);\n\n    if (this.props.showModal == false) {\n      return \"\";\n    }\n\n    if (this.props.scoreData == null) {\n      return /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.props.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        appElement: document.getElementById(\"root\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: spinnerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }\n      })));\n    }\n\n    const clueScoringRows = [];\n\n    for (let index = 0; index < 7; index++) {\n      const element = this.props.scoreData.clueScores[index];\n      clueScoringRows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, this.props.userGuesses[index]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[0] > 0 ? SuccessImage() : FailImage(index, 0)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[1] > 0 ? SuccessImage() : FailImage(index, 1)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[2] > 0 ? SuccessImage() : FailImage(index, 2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[3] > 0 ? SuccessImage() : FailImage(index, 3)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[4] > 0 ? SuccessImage() : FailImage(index, 4)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[5] > 0 ? SuccessImage() : FailImage(index, 5)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, \"N/A\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactModal, {\n      isOpen: this.props.showModal,\n      contentLabel: \"Minimal Modal Example\",\n      appElement: document.getElementById(\"root\"),\n      style: {\n        content: {\n          color: 'darkblue',\n          // backgroundImage: 'url(/images/treasure.jpg)',\n          // backgroundSize: 'auto'\n          backgroundColor: 'aliceblue',\n          overflow: 'scroll',\n          filter: 'drop-shadow(2px 4px 6px black)'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"You were searching for : \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 38\n      }\n    }, this.props.scoreData.wordBeingSought), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), \"You consumed oxygen bottles : \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 43\n      }\n    }, this.props.oxygenBottlesUsed), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), \"Total Score: \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }\n    }, this.props.scoreData.totalScore), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), \"Top Three Scores for \", \"'\" + this.props.scoreData.wordBeingSought + \"'\", \" :\", /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"ChrisKerr84 - \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, \"80pts\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"AlanCrowe81 - \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, \"78pts\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"BonnieK13 - \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }\n    }, \"62pts\"))), \"Did your answers meet all clues' requirements?\", /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[0].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Clue 1\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[1].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Clue 2\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[2].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Clue 3\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[3].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Clue 4\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[4].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Clue 5\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[5].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Clue 6\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[6].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Clue 7\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, clueScoringRows)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.handleReplay,\n      className: \"button\",\n      value: \"Replay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Dive Again!\"), /*#__PURE__*/React.createElement(ReactTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })));\n\n    function SuccessImage() {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/images/Coin.png\",\n        width: \"25px\",\n        height: \"25px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      });\n    }\n\n    function FailImage(answerIndex, clueIndex) {\n      console.log(\"aI: \" + answerIndex + \" cI:\" + clueIndex);\n      let isThisRelevant = parseInt(clueIndex) <= parseInt(answerIndex);\n\n      if (!isThisRelevant) {\n        console.log(\"display N/A for aI: \" + answerIndex + \" cI:\" + clueIndex);\n        return \"N/A\";\n      } //readme: otherwise it was relevant - a clue they knew about and didn't meet so FAILED\n\n\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/images/Skull.jpg\",\n        width: \"25px\",\n        height: \"25px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      });\n    }\n  }\n\n}\n\nvar resultStyle = {\n  color: 'coral',\n  fontFamily: 'Arial',\n  fontSize: 'larger',\n  textAlign: 'left'\n};\nvar spinnerStyle = {\n  margin: \"0 auto\"\n};\nexport default ResultsModal;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/ResultsModal.js"],"names":["ReactModal","React","useState","Component","Spinner","ReactTooltip","ResultsModal","constructor","state","render","console","log","props","showModal","scoreData","document","getElementById","spinnerStyle","clueScoringRows","index","element","clueScores","push","userGuesses","scorePerClue","SuccessImage","FailImage","content","color","backgroundColor","overflow","filter","resultStyle","wordBeingSought","oxygenBottlesUsed","totalScore","clues","clueText","handleReplay","answerIndex","clueIndex","isThisRelevant","parseInt","fontFamily","fontSize","textAlign","margin"],"mappings":"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","sourcesContent":["import ReactModal from 'react-modal';\nimport React, {useState, Component} from 'react';\nimport Spinner from './Loader';\nimport './ResultsModal.css';\nimport ReactTooltip from 'react-tooltip';\n\nclass ResultsModal extends React.Component {\n    constructor () {\n      super();\n      this.state = {\n      };\n\n    }\n    //scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n\n    render () {\n      console.log(\"ResultsModal\" + this.props.showModal);\n      \n      if(this.props.showModal == false)\n      {\n        return \"\";\n      }\n\n      if(this.props.scoreData == null)\n      {\n        return (\n              <ReactModal \n              isOpen={this.props.showModal}\n              contentLabel=\"Minimal Modal Example\"\n              appElement={document.getElementById(\"root\")}\n              >\n              <div style={spinnerStyle}><Spinner/></div>\n              </ReactModal>\n        );\n      }\n\n      const clueScoringRows = []\n\n      for (let index = 0; index < 7; index++) {\n        const element = this.props.scoreData.clueScores[index];\n        clueScoringRows.push(\n        <tr>\n          <td>{this.props.userGuesses[index]}</td>\n          <td>{element.scorePerClue[0] > 0 ? SuccessImage() : FailImage(index, 0)}</td>\n          <td>{element.scorePerClue[1] > 0 ? SuccessImage() : FailImage(index, 1)}</td>\n          <td>{element.scorePerClue[2] > 0 ? SuccessImage() : FailImage(index, 2)}</td>\n          <td>{element.scorePerClue[3] > 0 ? SuccessImage() : FailImage(index, 3)}</td>\n          <td>{element.scorePerClue[4] > 0 ? SuccessImage() : FailImage(index, 4)}</td>\n          <td>{element.scorePerClue[5] > 0 ? SuccessImage() : FailImage(index, 5)}</td>\n          <td>{\"N/A\"}</td>\n        </tr>)\n      }\n\n      return (\n        <div>\n          \n          <ReactModal \n             isOpen={this.props.showModal}\n             contentLabel=\"Minimal Modal Example\"\n             appElement={document.getElementById(\"root\")}\n             style={{\n              content: {\n                color: 'darkblue',\n                // backgroundImage: 'url(/images/treasure.jpg)',\n                // backgroundSize: 'auto'\n                backgroundColor: 'aliceblue',\n                overflow: 'scroll',\n                filter: 'drop-shadow(2px 4px 6px black)'\n              }\n            }}\n            \n          >\n            You were searching for : <span style={resultStyle}>{this.props.scoreData.wordBeingSought}</span>\n            <br/>\n            You consumed oxygen bottles : <span style={resultStyle}>{this.props.oxygenBottlesUsed}</span>\n            <br/>\n            Total Score: <span style={resultStyle}>{this.props.scoreData.totalScore}</span>\n            <br/>\n            Top Three Scores for {\"'\"+ this.props.scoreData.wordBeingSought + \"'\"} : \n            <ol>\n              <li>ChrisKerr84 - <span style={resultStyle}>80pts</span></li>\n              <li>AlanCrowe81 - <span style={resultStyle}>78pts</span></li>\n              <li>BonnieK13 - <span style={resultStyle}>62pts</span></li>\n            </ol>\n\n            Did your answers meet all clues' requirements?\n            <table>\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th data-tip={\"'\" + this.props.clues[0].clueText + \"'\"}>Clue 1</th>\n                    <th data-tip={\"'\" + this.props.clues[1].clueText + \"'\"}>Clue 2</th>\n                    <th data-tip={\"'\" + this.props.clues[2].clueText + \"'\"}>Clue 3</th>\n                    <th data-tip={\"'\" + this.props.clues[3].clueText + \"'\"}>Clue 4</th>\n                    <th data-tip={\"'\" + this.props.clues[4].clueText + \"'\"}>Clue 5</th>\n                    <th data-tip={\"'\" + this.props.clues[5].clueText + \"'\"}>Clue 6</th>\n                    <th data-tip={\"'\" + this.props.clues[6].clueText + \"'\"}>Clue 7</th>\n                  </tr>\n                </thead>\n              <tbody>\n                {clueScoringRows}\n              </tbody>\n            </table>\n            <br/>\n\n            <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n            <ReactTooltip />\n          </ReactModal>\n        </div>\n      );\n\n      function SuccessImage()\n      {\n        return(\n            <img src=\"/images/Coin.png\" width=\"25px\" height=\"25px\"/>\n        );\n      }\n\n      function FailImage(answerIndex,clueIndex)\n      {\n        console.log(\"aI: \" + answerIndex + \" cI:\" +clueIndex);\n        let isThisRelevant = (parseInt(clueIndex) <= parseInt(answerIndex));\n        if(!isThisRelevant)\n        {\n          console.log(\"display N/A for aI: \" + answerIndex + \" cI:\" +clueIndex);\n          return \"N/A\";\n        }\n        //readme: otherwise it was relevant - a clue they knew about and didn't meet so FAILED\n        return(\n\n            <img src=\"/images/Skull.jpg\" width=\"25px\" height=\"25px\"/>\n          \n        );\n      }\n\n    }\n  }\n\n  var resultStyle = {\n    color: 'coral',\n    fontFamily: 'Arial',\n    fontSize: 'larger',\n    textAlign: 'left'\n  }\n\n  var spinnerStyle = {\n    margin: \"0 auto\"\n  }\n\n  export default ResultsModal;"]},"metadata":{},"sourceType":"module"}