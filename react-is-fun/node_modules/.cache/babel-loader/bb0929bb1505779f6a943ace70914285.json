{"ast":null,"code":"import _classCallCheck from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import ReactModal from'react-modal';import React,{useState,Component}from'react';import Spinner from'./Loader';var ResultsModal=/*#__PURE__*/function(_React$Component){_inherits(ResultsModal,_React$Component);var _super=_createSuper(ResultsModal);function ResultsModal(){var _this;_classCallCheck(this,ResultsModal);_this=_super.call(this);_this.state={};return _this;}//scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n_createClass(ResultsModal,[{key:\"render\",value:function render(){console.log(\"ResultsModal\"+this.props.showModal);if(this.props.showModal==false){return\"\";}if(this.props.scoreData==null){return/*#__PURE__*/React.createElement(ReactModal,{isOpen:this.props.showModal,contentLabel:\"Minimal Modal Example\",appElement:document.getElementById(\"root\")},/*#__PURE__*/React.createElement(Spinner,null));}var clueScoringRows=[];for(var index=0;index<7;index++){var element=this.props.scoreData.clueScores[index];clueScoringRows.push(/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,this.props.userGuesses[index]),/*#__PURE__*/React.createElement(\"td\",null,element[index].scorePerClue[0]),/*#__PURE__*/React.createElement(\"td\",null,element[index].scorePerClue[1]),/*#__PURE__*/React.createElement(\"td\",null,element[index].scorePerClue[2]),/*#__PURE__*/React.createElement(\"td\",null,element[index].scorePerClue[3]),/*#__PURE__*/React.createElement(\"td\",null,element[index].scorePerClue[4]),/*#__PURE__*/React.createElement(\"td\",null,element[index].scorePerClue[5]),/*#__PURE__*/React.createElement(\"td\",null,element[index].scorePerClue[6])));}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ReactModal,{isOpen:this.props.showModal,contentLabel:\"Minimal Modal Example\",appElement:document.getElementById(\"root\")},\"You were searching for : \",this.props.scoreData.wordBeingSought,/*#__PURE__*/React.createElement(\"br\",null),\"And used oxygen bottles : \",this.props.oxygenBottlesUsed,/*#__PURE__*/React.createElement(\"br\",null),\"Total Score: \",this.props.scoreData.totalScore,/*#__PURE__*/React.createElement(\"br\",null),\"Did your answers meet all clues requirements?\",/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"Clue 1\"),/*#__PURE__*/React.createElement(\"th\",null,\"Clue 2\"),/*#__PURE__*/React.createElement(\"th\",null,\"Clue 3\"),/*#__PURE__*/React.createElement(\"th\",null,\"Clue 4\"),/*#__PURE__*/React.createElement(\"th\",null,\"Clue 5\"),/*#__PURE__*/React.createElement(\"th\",null,\"Clue 6\")),/*#__PURE__*/React.createElement(\"tbody\",null,clueScoringRows)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.handleReplay,value:\"Replay\"},\"Replay\")));}}]);return ResultsModal;}(React.Component);export default ResultsModal;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/ResultsModal.js"],"names":["ReactModal","React","useState","Component","Spinner","ResultsModal","state","console","log","props","showModal","scoreData","document","getElementById","clueScoringRows","index","element","clueScores","push","userGuesses","scorePerClue","wordBeingSought","oxygenBottlesUsed","totalScore","handleReplay"],"mappings":"4lBAAA,MAAOA,CAAAA,UAAP,KAAuB,aAAvB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,C,GAEMC,CAAAA,Y,wHACF,uBAAe,8CACb,wBACA,MAAKC,KAAL,CAAa,EAAb,CAFa,aAKd,CACD;gEAEU,CACRC,OAAO,CAACC,GAAR,CAAY,eAAiB,KAAKC,KAAL,CAAWC,SAAxC,EAEA,GAAG,KAAKD,KAAL,CAAWC,SAAX,EAAwB,KAA3B,CACA,CACE,MAAO,EAAP,CACD,CAED,GAAG,KAAKD,KAAL,CAAWE,SAAX,EAAwB,IAA3B,CACA,CACE,mBACM,oBAAC,UAAD,EACA,MAAM,CAAE,KAAKF,KAAL,CAAWC,SADnB,CAEA,YAAY,CAAC,uBAFb,CAGA,UAAU,CAAEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHZ,eAKE,oBAAC,OAAD,MALF,CADN,CASD,CAED,GAAMC,CAAAA,eAAe,CAAG,EAAxB,CAEA,IAAK,GAAIC,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAG,CAA5B,CAA+BA,KAAK,EAApC,CAAwC,CACtC,GAAMC,CAAAA,OAAO,CAAG,KAAKP,KAAL,CAAWE,SAAX,CAAqBM,UAArB,CAAgCF,KAAhC,CAAhB,CACAD,eAAe,CAACI,IAAhB,cACA,2CACE,8BAAK,KAAKT,KAAL,CAAWU,WAAX,CAAuBJ,KAAvB,CAAL,CADF,cAEE,8BAAKC,OAAO,CAACD,KAAD,CAAP,CAAeK,YAAf,CAA4B,CAA5B,CAAL,CAFF,cAGE,8BAAKJ,OAAO,CAACD,KAAD,CAAP,CAAeK,YAAf,CAA4B,CAA5B,CAAL,CAHF,cAIE,8BAAKJ,OAAO,CAACD,KAAD,CAAP,CAAeK,YAAf,CAA4B,CAA5B,CAAL,CAJF,cAKE,8BAAKJ,OAAO,CAACD,KAAD,CAAP,CAAeK,YAAf,CAA4B,CAA5B,CAAL,CALF,cAME,8BAAKJ,OAAO,CAACD,KAAD,CAAP,CAAeK,YAAf,CAA4B,CAA5B,CAAL,CANF,cAOE,8BAAKJ,OAAO,CAACD,KAAD,CAAP,CAAeK,YAAf,CAA4B,CAA5B,CAAL,CAPF,cAQE,8BAAKJ,OAAO,CAACD,KAAD,CAAP,CAAeK,YAAf,CAA4B,CAA5B,CAAL,CARF,CADA,EAWD,CAED,mBACE,4CAEE,oBAAC,UAAD,EACG,MAAM,CAAE,KAAKX,KAAL,CAAWC,SADtB,CAEG,YAAY,CAAC,uBAFhB,CAGG,UAAU,CAAEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHf,8BAK4B,KAAKJ,KAAL,CAAWE,SAAX,CAAqBU,eALjD,cAME,8BANF,8BAO6B,KAAKZ,KAAL,CAAWa,iBAPxC,cAQE,8BARF,iBASgB,KAAKb,KAAL,CAAWE,SAAX,CAAqBY,UATrC,cAUE,8BAVF,8DAYE,8CACE,8CACE,8BADF,cAEE,uCAFF,cAGE,uCAHF,cAIE,uCAJF,cAKE,uCALF,cAME,uCANF,cAOE,uCAPF,CADF,cAUE,iCACGT,eADH,CAVF,CAZF,cA0BE,8BA1BF,cA4BE,8BAAQ,OAAO,CAAE,KAAKL,KAAL,CAAWe,YAA5B,CAA0C,KAAK,CAAC,QAAhD,WA5BF,CAFF,CADF,CAmCD,C,0BAlFsBvB,KAAK,CAACE,S,EAqF/B,cAAeE,CAAAA,YAAf","sourcesContent":["import ReactModal from 'react-modal';\nimport React, {useState, Component} from 'react';\nimport Spinner from './Loader';\n\nclass ResultsModal extends React.Component {\n    constructor () {\n      super();\n      this.state = {\n      };\n\n    }\n    //scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n\n    render () {\n      console.log(\"ResultsModal\" + this.props.showModal);\n      \n      if(this.props.showModal == false)\n      {\n        return \"\";\n      }\n\n      if(this.props.scoreData == null)\n      {\n        return (\n              <ReactModal \n              isOpen={this.props.showModal}\n              contentLabel=\"Minimal Modal Example\"\n              appElement={document.getElementById(\"root\")}\n              >\n                <Spinner/>\n              </ReactModal>\n        );\n      }\n\n      const clueScoringRows = []\n\n      for (let index = 0; index < 7; index++) {\n        const element = this.props.scoreData.clueScores[index];\n        clueScoringRows.push(\n        <tr>\n          <td>{this.props.userGuesses[index]}</td>\n          <td>{element[index].scorePerClue[0]}</td>\n          <td>{element[index].scorePerClue[1]}</td>\n          <td>{element[index].scorePerClue[2]}</td>\n          <td>{element[index].scorePerClue[3]}</td>\n          <td>{element[index].scorePerClue[4]}</td>\n          <td>{element[index].scorePerClue[5]}</td>\n          <td>{element[index].scorePerClue[6]}</td>\n        </tr>)\n      }\n\n      return (\n        <div>\n\n          <ReactModal \n             isOpen={this.props.showModal}\n             contentLabel=\"Minimal Modal Example\"\n             appElement={document.getElementById(\"root\")}\n          >\n            You were searching for : {this.props.scoreData.wordBeingSought}\n            <br/>\n            And used oxygen bottles : {this.props.oxygenBottlesUsed}\n            <br/>\n            Total Score: {this.props.scoreData.totalScore}\n            <br/>\n            Did your answers meet all clues requirements?\n            <table>\n              <thead>\n                <th></th>\n                <th>Clue 1</th>\n                <th>Clue 2</th>\n                <th>Clue 3</th>\n                <th>Clue 4</th>\n                <th>Clue 5</th>\n                <th>Clue 6</th>\n              </thead>\n              <tbody>\n                {clueScoringRows}\n              </tbody>\n            </table>\n            <br/>\n\n            <button onClick={this.props.handleReplay} value=\"Replay\">Replay</button>\n          </ReactModal>\n        </div>\n      );\n    }\n  }\n\n  export default ResultsModal;"]},"metadata":{},"sourceType":"module"}