{"ast":null,"code":"import _classCallCheck from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useState,Component}from'react';import{render}from'react-dom';import ClueOuterList from'./ClueOuterList';import'./GameBoard.css';import ClueOuter from'./ClueOuter';import Spinner from'./Loader';import UserName from'./UserName';import ResultsModal from'./ResultsModal';var GameBoard=/*#__PURE__*/function(_React$Component){_inherits(GameBoard,_React$Component);var _super=_createSuper(GameBoard);// const [currentRoundBeingPlayed, setCount] = useState(1);\nfunction GameBoard(props){var _this;_classCallCheck(this,GameBoard);_this=_super.call(this,props);_this.SendToScoringService=function(){// gather up their state data\n// do a fetch/Post of their data \n// Simple POST request with a JSON body using fetch\n// const requestOptions = {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify({ \n//       userName: this.state.userName,\n//       userGuesses: this.state.userGuesses,\n//       clues: this.state.clues,\n//       oxygenUsed: this.state.oxygenBottlesUsed,\n//    })\n// };\nvar formData=new FormData();formData.append('userName',_this.state.userName);formData.append('userGuesses',JSON.stringify(_this.state.userGuesses));formData.append('GUID',JSON.stringify(_this.state.clues.GUID));formData.append('clues',JSON.stringify(_this.state.clues.clues));formData.append('oxygenUsed',JSON.stringify(_this.state.oxygenBottlesUsed));fetch('http://localhost:5000/Entries/SubmitForScoring/',{method:'POST',body:formData}).then(function(response){return response.json();}).then(function(data){_this.setState({scoringData:data});});// throw up a light box with a spinner while they wait\n// display their results\n};_this.handleReplay=function(){_this.componentDidMount();//this.render();\n};_this.handleSubmitAndDiveClick=function(thisRoundNumber){//readme: checking the word is good before advancing\nif(_this.state.initializeTimers[0]==null){alert(\"Please click the diver image to start the timer \\n  \");}else{_this.checkWord(thisRoundNumber,_this.state.userGuesses[thisRoundNumber-1]);}};_this.handleDiverClick=function(thisRoundNumber){//alert('Clicked on diver' + thisRoundNumber);\nvar initializeTimersCopy=_this.state.initializeTimers.slice();// readme: timer has been initialized\ninitializeTimersCopy[thisRoundNumber-1]=1;_this.setState({initializeTimers:initializeTimersCopy});};_this.handleOxygenClick=function(thisRoundNumber){//readme: not sure if I'll want to count which round the oxygen was used in, might leave param there til i decide\nvar oxygenBottlesUsedNew=_this.state.oxygenBottlesUsed+1;_this.setState({oxygenBottlesUsed:oxygenBottlesUsedNew});};_this.handleChangeUserGuess=function(userGuess,i){var userGuessesCopy=_this.state.userGuesses.slice();userGuessesCopy[i-1]=userGuess;_this.setState({userGuesses:userGuessesCopy});};_this.handleEnterUserName=function(theirUserName){_this.setState({userName:theirUserName});};_this.handleTimerRanOut=function(i){_this.setState({roundTheyWereOnWhenTimerExpired:i});//todo: drown him!\n};_this.state={userGuesses:Array(7).fill(null),currentRound:1,oxygenBottlesUsed:0,initializeTimers:Array(7).fill(null),clues:null,roundTheyWereOnWhenTimerExpired:null,isLoadingPage:true,wordLookupFeedbackMessages:Array(7).fill(null),userName:\"\",showModal:false,dictionaryCheckInProgress:false,scoringData:null};return _this;}_createClass(GameBoard,[{key:\"updateWordFeedback\",value:function updateWordFeedback(thisRoundNumber,message){var wordLookupFeedbackMessagesCopy=this.state.wordLookupFeedbackMessages.slice();wordLookupFeedbackMessagesCopy[thisRoundNumber-1]=message;this.setState({wordLookupFeedbackMessages:wordLookupFeedbackMessagesCopy});}},{key:\"checkWord\",value:function checkWord(thisRoundNumber,userGuess){var _this2=this;console.log(thisRoundNumber+\" checkWord : \"+userGuess);this.updateWordFeedback(thisRoundNumber,'Checking dictionary...');if(userGuess==\"\"||userGuess==null){this.updateWordFeedback(thisRoundNumber,'Enter word then Submit and Dive');return false;}if(this.state.dictionaryCheckInProgress){this.updateWordFeedback(thisRoundNumber,'Double-clickers will be left behind!');return false;}this.setState({dictionaryCheckInProgress:true});fetch('https://deepseaworddotnetservice.azurewebsites.net/Entries/LookupWord?word='+userGuess).then(function(res){return res.json();}).then(function(data){//this.setState({ clues: data })\nif(data!=null){//console.log('word def:' + data.definition);\n// readme: word was a real word.\n_this2.updateWordFeedback(thisRoundNumber,'Found in dictionary.');_this2.setState({currentRound:thisRoundNumber+1});if(thisRoundNumber<7){_this2.handleDiverClick(thisRoundNumber+1);}else{//readme: kick-off the completion code.\n//perform scoring and open lightbox to display response to that?\n_this2.setState({showModal:true});_this2.SendToScoringService();}}else{_this2.updateWordFeedback(thisRoundNumber,'NOT found - try another!');}_this2.setState({dictionaryCheckInProgress:false});}).catch(function(){_this2.updateWordFeedback(thisRoundNumber,'Apparatus failure. Try again');});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;// readme: resets all state except username and then fetch a new word\nthis.setState({userGuesses:Array(7).fill(null),currentRound:1,oxygenBottlesUsed:0,initializeTimers:Array(7).fill(null),clues:null,roundTheyWereOnWhenTimerExpired:null,isLoadingPage:true,wordLookupFeedbackMessages:Array(7).fill(null),showModal:false,dictionaryCheckInProgress:false,scoringData:null//userName: \"\"\n});fetch('https://deepseaworddotnetservice.azurewebsites.net/Entries/GetWordWithClues').then(function(res){return res.json();}).then(function(data){_this3.setState({clues:data,isLoadingPage:false});}).catch(console.log);}},{key:\"render\",value:function render(){// let clues = GetJson();\n// let parsedClues = JSON.parse(clues);\nvar parsedClues2=this.state.clues;// console.log(parsedClues);\n// console.log(\" and \")\n// console.log(parsedClues2);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"background center-screen\"},/*#__PURE__*/React.createElement(\"div\",{className:\"TitleBar\",style:titleStyle},\"DeepSeaWord\"),/*#__PURE__*/React.createElement(\"div\",{style:creditStyle},\"by Chris Kerr\"),/*#__PURE__*/React.createElement(\"div\",{className:\"GameBoard\",style:instructionsStyle},\"In every round submit a word that meets that clue and all previous clues. \",/*#__PURE__*/React.createElement(\"br\",null),\"Dont run out of oxygen! If the timer expires so do you! \",/*#__PURE__*/React.createElement(\"br\",null),\"High scores require: speed, valid words, limited oxygen refills and finding that treasure!\",this.state.isLoadingPage||this.state.userName==\"\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Spinner,null),/*#__PURE__*/React.createElement(UserName,{changeUserName:this.handleEnterUserName})):this.renderClues(parsedClues2)),this.state.clues!=null?/*#__PURE__*/React.createElement(ResultsModal,{temporaryWord:this.state.clues.temporaryWord,oxygenBottlesUsed:this.state.oxygenBottlesUsed,showModal:this.state.showModal,handleReplay:this.handleReplay}):/*#__PURE__*/React.createElement(\"br\",null));}},{key:\"renderClues\",value:function renderClues(parsedClues){var rows=[];var x=parsedClues;if(x!=null){//console.log(x.clues[0]);\nfor(var i=1;i<parsedClues.clues.length+1;i++){rows.push(this.renderClue(i,parsedClues.clues[i-1]));}}return rows;}},{key:\"renderClue\",value:function renderClue(i,clue){return/*#__PURE__*/ (//readme: wonder at what point its an antipattern to pass so much down.\nReact.createElement(ClueOuter,{style:style,clue:clue,key:i,userGuess:this.state.userGuesses[i-1],onClick:this.handleSubmitAndDiveClick,onClickOxygen:this.handleOxygenClick,changeUserGuess:this.handleChangeUserGuess,currentRoundBeingPlayed:this.state.currentRound,initializeTimers:this.state.initializeTimers,onDiverClick:this.handleDiverClick,oxygenBottlesUsed:this.state.oxygenBottlesUsed,timerRanOut:this.handleTimerRanOut,roundTheyWereOnWhenTimerExpired:this.state.roundTheyWereOnWhenTimerExpired,wordLookupFeedbackMessages:this.state.wordLookupFeedbackMessages}));}}]);return GameBoard;}(React.Component);function GetJson2(){fetch('https://deepseaworddotnetcore.azurewebsites.net/Entries/GetWordWithClues').then(function(response){if(response.status!==200){console.log('Looks like there was a problem. Status Code: '+response.status);return;}// Examine the text in the response\nresponse.json().then(function(data){console.log(data);return data;});}).catch(function(err){console.log('Fetch Error :-S',err);});}function GetJson(){var obj={table:[]};// PIPE\nobj.table.push({id:1,clue:\"Contains letter 'i'.\"});obj.table.push({id:2,clue:\"Has fewer than 5 letters.\"});obj.table.push({id:3,clue:\"Ends with 'e'\"});obj.table.push({id:4,clue:\"Syallable count : 1\"});obj.table.push({id:5,clue:\"Vowel count : 2\"});obj.table.push({id:6,clue:\"First letter 'P'\"});obj.table.push({id:7,clue:\"A cask usually containing two hogsheads or 126 gallons\"});var json=JSON.stringify(obj);return json;}var instructionsStyle={//backgroundColor: 'lightblue',\ncolor:'white',// readme: hehe 'Arial', get it?\nfontFamily:'Arial',fontSize:'12px',// margin: '20px 200px 40px 200px',\npadding:'20px',textAlign:'center'// readme: better on mobile if no % here\n// width: '60%'\n};var style={backgroundColor:'lightblue',color:'darkblue',// readme: hehe 'Arial', get it?\nfontFamily:'Arial',fontSize:'12px',// margin: '20px 200px 40px 200px',\npadding:'20px',textAlign:'left'};var creditStyle={//backgroundColor: 'lightblue',\ncolor:'gold',fontFamily:'Cochin',fontSize:'11px',textAlign:'Center',top:'0px'};var titleStyle={//backgroundColor: 'lightblue',\ncolor:'yellow',fontFamily:'Phosphate,Futura,Rockwell',fontSize:'45px',textAlign:'Center',top:'0px'};export default GameBoard;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/GameBoard.js"],"names":["React","useState","Component","render","ClueOuterList","ClueOuter","Spinner","UserName","ResultsModal","GameBoard","props","SendToScoringService","formData","FormData","append","state","userName","JSON","stringify","userGuesses","clues","GUID","oxygenBottlesUsed","fetch","method","body","then","response","json","data","setState","scoringData","handleReplay","componentDidMount","handleSubmitAndDiveClick","thisRoundNumber","initializeTimers","alert","checkWord","handleDiverClick","initializeTimersCopy","slice","handleOxygenClick","oxygenBottlesUsedNew","handleChangeUserGuess","userGuess","i","userGuessesCopy","handleEnterUserName","theirUserName","handleTimerRanOut","roundTheyWereOnWhenTimerExpired","Array","fill","currentRound","isLoadingPage","wordLookupFeedbackMessages","showModal","dictionaryCheckInProgress","message","wordLookupFeedbackMessagesCopy","console","log","updateWordFeedback","res","catch","parsedClues2","titleStyle","creditStyle","instructionsStyle","renderClues","temporaryWord","parsedClues","rows","x","length","push","renderClue","clue","style","GetJson2","status","err","GetJson","obj","table","id","color","fontFamily","fontSize","padding","textAlign","backgroundColor","top"],"mappings":"4lBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,MAAR,KAAqB,WAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAO,iBAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,GAEMC,CAAAA,S,kHAEF;AACA,mBAAYC,KAAZ,CAAmB,2CACf,uBAAMA,KAAN,EADe,MA2EnBC,oBA3EmB,CA2EI,UAAM,CACnB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACAD,QAAQ,CAACE,MAAT,CAAgB,UAAhB,CAA4B,MAAKC,KAAL,CAAWC,QAAvC,EACAJ,QAAQ,CAACE,MAAT,CAAgB,aAAhB,CAA+BG,IAAI,CAACC,SAAL,CAAe,MAAKH,KAAL,CAAWI,WAA1B,CAA/B,EACAP,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAwBG,IAAI,CAACC,SAAL,CAAe,MAAKH,KAAL,CAAWK,KAAX,CAAiBC,IAAhC,CAAxB,EACAT,QAAQ,CAACE,MAAT,CAAgB,OAAhB,CAAyBG,IAAI,CAACC,SAAL,CAAe,MAAKH,KAAL,CAAWK,KAAX,CAAiBA,KAAhC,CAAzB,EACAR,QAAQ,CAACE,MAAT,CAAgB,YAAhB,CAA8BG,IAAI,CAACC,SAAL,CAAe,MAAKH,KAAL,CAAWO,iBAA1B,CAA9B,EAGAC,KAAK,CAAC,iDAAD,CAAoD,CACnDC,MAAM,CAAE,MAD2C,CAEnDC,IAAI,CAAEb,QAF6C,CAApD,CAAL,CAIKc,IAJL,CAIU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAJlB,EAKKF,IALL,CAKU,SAAAG,IAAI,CAAI,CACZ,MAAKC,QAAL,CAAc,CAACC,WAAW,CAAEF,IAAd,CAAd,EACD,CAPL,EASA;AACA;AACT,CA9GkB,OAgHnBG,YAhHmB,CAgHJ,UAAM,CACnB,MAAKC,iBAAL,GACA;AACD,CAnHkB,OAqHjBC,wBArHiB,CAqHU,SAACC,eAAD,CAAqB,CAC9C;AAEE,GAAG,MAAKpB,KAAL,CAAWqB,gBAAX,CAA4B,CAA5B,GAAkC,IAArC,CACA,CACEC,KAAK,CAAC,sDAAD,CAAL,CACD,CAHD,IAKA,CACE,MAAKC,SAAL,CAAeH,eAAf,CAAgC,MAAKpB,KAAL,CAAWI,WAAX,CAAuBgB,eAAe,CAAC,CAAvC,CAAhC,EACD,CAEN,CAjIkB,OAmIjBI,gBAnIiB,CAmIE,SAACJ,eAAD,CAAoB,CACnC;AACA,GAAMK,CAAAA,oBAAoB,CAAG,MAAKzB,KAAL,CAAWqB,gBAAX,CAA4BK,KAA5B,EAA7B,CACA;AACAD,oBAAoB,CAACL,eAAe,CAAC,CAAjB,CAApB,CAA0C,CAA1C,CACA,MAAKL,QAAL,CAAc,CAACM,gBAAgB,CAAGI,oBAApB,CAAd,EACH,CAzIgB,OA2IjBE,iBA3IiB,CA2IG,SAACP,eAAD,CAAqB,CACvC;AACA,GAAIQ,CAAAA,oBAAoB,CAAG,MAAK5B,KAAL,CAAWO,iBAAX,CAA+B,CAA1D,CACA,MAAKQ,QAAL,CAAc,CAACR,iBAAiB,CAAEqB,oBAApB,CAAd,EACD,CA/IgB,OAkJjBC,qBAlJiB,CAkJO,SAACC,SAAD,CAAWC,CAAX,CAAiB,CACvC,GAAMC,CAAAA,eAAe,CAAG,MAAKhC,KAAL,CAAWI,WAAX,CAAuBsB,KAAvB,EAAxB,CACAM,eAAe,CAACD,CAAC,CAAC,CAAH,CAAf,CAAuBD,SAAvB,CACA,MAAKf,QAAL,CAAc,CAACX,WAAW,CAAE4B,eAAd,CAAd,EACF,CAtJiB,OAwJlBC,mBAxJkB,CAwJI,SAACC,aAAD,CAAmB,CACvC,MAAKnB,QAAL,CAAc,CAACd,QAAQ,CAAEiC,aAAX,CAAd,EACD,CA1JiB,OA4JlBC,iBA5JkB,CA4JE,SAACJ,CAAD,CAAO,CACxB,MAAKhB,QAAL,CAAc,CAACqB,+BAA+B,CAAEL,CAAlC,CAAd,EACA;AACF,CA/JiB,CAEf,MAAK/B,KAAL,CAAa,CACXI,WAAW,CAAEiC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADF,CAEXC,YAAY,CAAE,CAFH,CAGXhC,iBAAiB,CAAE,CAHR,CAIXc,gBAAgB,CAAEgB,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAJP,CAKXjC,KAAK,CAAE,IALI,CAMX+B,+BAA+B,CAAE,IANtB,CAOXI,aAAa,CAAE,IAPJ,CAQXC,0BAA0B,CAAEJ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CARjB,CASXrC,QAAQ,CAAE,EATC,CAUXyC,SAAS,CAAE,KAVA,CAWXC,yBAAyB,CAAE,KAXhB,CAYX3B,WAAW,CAAE,IAZF,CAAb,CAFe,aAgBhB,C,oFAEiBI,e,CAAiBwB,O,CAAQ,CAC3C,GAAMC,CAAAA,8BAA8B,CAAG,KAAK7C,KAAL,CAAWyC,0BAAX,CAAsCf,KAAtC,EAAvC,CACAmB,8BAA8B,CAACzB,eAAe,CAAC,CAAjB,CAA9B,CAAoDwB,OAApD,CACA,KAAK7B,QAAL,CAAc,CAAC0B,0BAA0B,CAAGI,8BAA9B,CAAd,EACA,C,4CAESzB,e,CAAgBU,S,CAAU,iBACnCgB,OAAO,CAACC,GAAR,CAAY3B,eAAe,CAAG,eAAlB,CAAmCU,SAA/C,EACA,KAAKkB,kBAAL,CAAwB5B,eAAxB,CAAwC,wBAAxC,EAEA,GAAGU,SAAS,EAAI,EAAb,EAAmBA,SAAS,EAAI,IAAnC,CACA,CACE,KAAKkB,kBAAL,CAAwB5B,eAAxB,CAAwC,iCAAxC,EACA,MAAO,MAAP,CACD,CACD,GAAG,KAAKpB,KAAL,CAAW2C,yBAAd,CACA,CACE,KAAKK,kBAAL,CAAwB5B,eAAxB,CAAwC,sCAAxC,EACA,MAAO,MAAP,CACD,CAED,KAAKL,QAAL,CAAc,CAAC4B,yBAAyB,CAAE,IAA5B,CAAd,EACAnC,KAAK,CAAC,8EAAgFsB,SAAjF,CAAL,CACGnB,IADH,CACQ,SAAAsC,GAAG,QAAIA,CAAAA,GAAG,CAACpC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACd;AACA,GAAGA,IAAI,EAAI,IAAX,CACA,CACE;AACA;AACA,MAAI,CAACkC,kBAAL,CAAwB5B,eAAxB,CAAwC,sBAAxC,EACA,MAAI,CAACL,QAAL,CAAc,CAACwB,YAAY,CAAEnB,eAAe,CAAC,CAA/B,CAAd,EACA,GAAGA,eAAe,CAAG,CAArB,CACA,CACE,MAAI,CAACI,gBAAL,CAAsBJ,eAAe,CAAC,CAAtC,EACD,CAHD,IAKA,CACE;AACA;AACA,MAAI,CAACL,QAAL,CAAc,CAAC2B,SAAS,CAAE,IAAZ,CAAd,EACA,MAAI,CAAC9C,oBAAL,GACD,CACF,CAjBD,IAmBA,CACE,MAAI,CAACoD,kBAAL,CAAwB5B,eAAxB,CAAwC,0BAAxC,EACD,CACD,MAAI,CAACL,QAAL,CAAc,CAAC4B,yBAAyB,CAAE,KAA5B,CAAd,EAEH,CA5BD,EA6BCO,KA7BD,CA6BQ,UACR,CACE,MAAI,CAACF,kBAAL,CAAwB5B,eAAxB,CAAwC,8BAAxC,EACD,CAhCD,EAiCD,C,6DAwFoB,iBAClB;AACD,KAAKL,QAAL,CAAc,CACZX,WAAW,CAAEiC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADD,CAEZC,YAAY,CAAE,CAFF,CAGZhC,iBAAiB,CAAE,CAHP,CAIZc,gBAAgB,CAAEgB,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAJN,CAKZjC,KAAK,CAAE,IALK,CAMZ+B,+BAA+B,CAAE,IANrB,CAOZI,aAAa,CAAE,IAPH,CAQZC,0BAA0B,CAAEJ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CARhB,CASZI,SAAS,CAAE,KATC,CAUZC,yBAAyB,CAAE,KAVf,CAWZ3B,WAAW,CAAE,IACb;AAZY,CAAd,EAeAR,KAAK,CAAC,6EAAD,CAAL,CACKG,IADL,CACU,SAAAsC,GAAG,QAAIA,CAAAA,GAAG,CAACpC,IAAJ,EAAJ,EADb,EAEKF,IAFL,CAEU,SAACG,IAAD,CAAU,CACd,MAAI,CAACC,QAAL,CAAc,CAAEV,KAAK,CAAES,IAAT,CAAe0B,aAAa,CAAE,KAA9B,CAAd,EACH,CAJH,EAKGU,KALH,CAKSJ,OAAO,CAACC,GALjB,EAMC,C,uCAGD,CACE;AACA;AACA,GAAII,CAAAA,YAAY,CAAG,KAAKnD,KAAL,CAAWK,KAA9B,CAEA;AACA;AACA;AACA,mBACI,2BAAK,SAAS,CAAC,0BAAf,eACI,2BAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE+C,UAAjC,gBADJ,cAII,2BAAK,KAAK,CAAEC,WAAZ,kBAJJ,cAOI,2BAAK,SAAS,CAAC,WAAf,CAA2B,KAAK,CAAEC,iBAAlC,4FAC8E,8BAD9E,yEAE4D,8BAF5D,8FAMK,KAAKtD,KAAL,CAAWwC,aAAX,EAA4B,KAAKxC,KAAL,CAAWC,QAAX,EAAuB,EAAnD,cAAwD,4CAAK,oBAAC,OAAD,MAAL,cAAe,oBAAC,QAAD,EAAU,cAAc,CAAE,KAAKgC,mBAA/B,EAAf,CAAxD,CAAsI,KAAKsB,WAAL,CAAiBJ,YAAjB,CAN3I,CAPJ,CAgBK,KAAKnD,KAAL,CAAWK,KAAX,EAAoB,IAApB,cAA2B,oBAAC,YAAD,EAAc,aAAa,CAAE,KAAKL,KAAL,CAAWK,KAAX,CAAiBmD,aAA9C,CAA6D,iBAAiB,CAAE,KAAKxD,KAAL,CAAWO,iBAA3F,CAA8G,SAAS,CAAE,KAAKP,KAAL,CAAW0C,SAApI,CAA+I,YAAY,CAAE,KAAKzB,YAAlK,EAA3B,cAA+M,8BAhBpN,CADJ,CAqBC,C,gDAEWwC,W,CACZ,CACI,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIC,CAAAA,CAAC,CAAGF,WAAR,CACA,GAAGE,CAAC,EAAI,IAAR,CACA,CACE;AAEA,IAAI,GAAI5B,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAG0B,WAAW,CAACpD,KAAZ,CAAkBuD,MAAlB,CAA2B,CAA9C,CAAiD7B,CAAC,EAAlD,CAAqD,CACjD2B,IAAI,CAACG,IAAL,CAAU,KAAKC,UAAL,CAAgB/B,CAAhB,CAAmB0B,WAAW,CAACpD,KAAZ,CAAkB0B,CAAC,CAAC,CAApB,CAAnB,CAAV,EACH,CACF,CAED,MAAO2B,CAAAA,IAAP,CACH,C,8CAEU3B,C,CAAGgC,I,CACd,CACI,oBACI;AACA,oBAAC,SAAD,EACI,KAAK,CAAEC,KADX,CAEI,IAAI,CAAED,IAFV,CAGI,GAAG,CAAEhC,CAHT,CAII,SAAS,CAAE,KAAK/B,KAAL,CAAWI,WAAX,CAAuB2B,CAAC,CAAC,CAAzB,CAJf,CAKI,OAAO,CAAE,KAAKZ,wBALlB,CAMI,aAAa,CAAE,KAAKQ,iBANxB,CAOI,eAAe,CAAE,KAAKE,qBAP1B,CAQI,uBAAuB,CAAE,KAAK7B,KAAL,CAAWuC,YARxC,CASI,gBAAgB,CAAE,KAAKvC,KAAL,CAAWqB,gBATjC,CAUI,YAAY,CAAE,KAAKG,gBAVvB,CAWI,iBAAiB,CAAE,KAAKxB,KAAL,CAAWO,iBAXlC,CAYI,WAAW,CAAE,KAAK4B,iBAZtB,CAaI,+BAA+B,CAAE,KAAKnC,KAAL,CAAWoC,+BAbhD,CAcI,0BAA0B,CAAE,KAAKpC,KAAL,CAAWyC,0BAd3C,EAFJ,EAmBH,C,uBAlQexD,KAAK,CAACE,S,EAqQ9B,QAAS8E,CAAAA,QAAT,EACA,CACEzD,KAAK,CAAC,0EAAD,CAAL,CACCG,IADD,CAEE,SAASC,QAAT,CAAmB,CACjB,GAAIA,QAAQ,CAACsD,MAAT,GAAoB,GAAxB,CAA6B,CAC3BpB,OAAO,CAACC,GAAR,CAAY,gDACVnC,QAAQ,CAACsD,MADX,EAEA,OACD,CAED;AACAtD,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAASG,IAAT,CAAe,CAClCgC,OAAO,CAACC,GAAR,CAAYjC,IAAZ,EACA,MAAOA,CAAAA,IAAP,CACD,CAHD,EAID,CAdH,EAgBCoC,KAhBD,CAgBO,SAASiB,GAAT,CAAc,CACnBrB,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BoB,GAA/B,EACD,CAlBD,EAmBD,CAED,QAASC,CAAAA,OAAT,EACA,CAEI,GAAIC,CAAAA,GAAG,CAAG,CACNC,KAAK,CAAE,EADD,CAAV,CAGA;AACAD,GAAG,CAACC,KAAJ,CAAUT,IAAV,CAAe,CAACU,EAAE,CAAE,CAAL,CAAQR,IAAI,CAAE,sBAAd,CAAf,EACAM,GAAG,CAACC,KAAJ,CAAUT,IAAV,CAAe,CAACU,EAAE,CAAE,CAAL,CAAQR,IAAI,CAAE,2BAAd,CAAf,EACAM,GAAG,CAACC,KAAJ,CAAUT,IAAV,CAAe,CAACU,EAAE,CAAE,CAAL,CAAQR,IAAI,CAAE,eAAd,CAAf,EACAM,GAAG,CAACC,KAAJ,CAAUT,IAAV,CAAe,CAACU,EAAE,CAAE,CAAL,CAAQR,IAAI,CAAE,qBAAd,CAAf,EACAM,GAAG,CAACC,KAAJ,CAAUT,IAAV,CAAe,CAACU,EAAE,CAAE,CAAL,CAAQR,IAAI,CAAE,iBAAd,CAAf,EACAM,GAAG,CAACC,KAAJ,CAAUT,IAAV,CAAe,CAACU,EAAE,CAAE,CAAL,CAAQR,IAAI,CAAE,kBAAd,CAAf,EACAM,GAAG,CAACC,KAAJ,CAAUT,IAAV,CAAe,CAACU,EAAE,CAAE,CAAL,CAAQR,IAAI,CAAE,wDAAd,CAAf,EAEA,GAAIlD,CAAAA,IAAI,CAAGX,IAAI,CAACC,SAAL,CAAekE,GAAf,CAAX,CAEA,MAAOxD,CAAAA,IAAP,CACH,CAED,GAAIyC,CAAAA,iBAAiB,CAAG,CACpB;AACAkB,KAAK,CAAE,OAFa,CAGpB;AACAC,UAAU,CAAE,OAJQ,CAKpBC,QAAQ,CAAE,MALU,CAMpB;AACAC,OAAO,CAAE,MAPW,CASpBC,SAAS,CAAE,QACX;AACA;AAXoB,CAAxB,CAcA,GAAIZ,CAAAA,KAAK,CAAG,CACRa,eAAe,CAAE,WADT,CAERL,KAAK,CAAE,UAFC,CAGR;AACAC,UAAU,CAAE,OAJJ,CAKRC,QAAQ,CAAE,MALF,CAMR;AACAC,OAAO,CAAE,MAPD,CAQRC,SAAS,CAAE,MARH,CAAZ,CAWE,GAAIvB,CAAAA,WAAW,CAAG,CAChB;AACAmB,KAAK,CAAE,MAFS,CAGhBC,UAAU,CAAE,QAHI,CAIhBC,QAAQ,CAAE,MAJM,CAKhBE,SAAS,CAAE,QALK,CAMhBE,GAAG,CAAE,KANW,CAAlB,CAUF,GAAI1B,CAAAA,UAAU,CAAG,CACb;AACAoB,KAAK,CAAE,QAFM,CAGbC,UAAU,CAAE,2BAHC,CAIbC,QAAQ,CAAE,MAJG,CAKbE,SAAS,CAAE,QALE,CAMbE,GAAG,CAAE,KANQ,CAAjB,CAUA,cAAepF,CAAAA,SAAf","sourcesContent":["import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\nimport ClueOuterList from './ClueOuterList';\nimport './GameBoard.css';\nimport ClueOuter from './ClueOuter';\nimport Spinner from './Loader';\nimport UserName from './UserName';\nimport ResultsModal from './ResultsModal';\n\nclass GameBoard extends React.Component\n{ \n    // const [currentRoundBeingPlayed, setCount] = useState(1);\n    constructor(props) {\n        super(props);\n        this.state = {\n          userGuesses: Array(7).fill(null),\n          currentRound: 1,\n          oxygenBottlesUsed: 0,\n          initializeTimers: Array(7).fill(null),\n          clues: null,\n          roundTheyWereOnWhenTimerExpired: null,\n          isLoadingPage: true,\n          wordLookupFeedbackMessages: Array(7).fill(null),\n          userName: \"\",\n          showModal: false,\n          dictionaryCheckInProgress: false,\n          scoringData: null\n        };\n      }\n\n     updateWordFeedback(thisRoundNumber, message){\n      const wordLookupFeedbackMessagesCopy = this.state.wordLookupFeedbackMessages.slice();\n      wordLookupFeedbackMessagesCopy[thisRoundNumber-1] = message;\n      this.setState({wordLookupFeedbackMessages : wordLookupFeedbackMessagesCopy})\n     }\n\n     checkWord(thisRoundNumber,userGuess){\n      console.log(thisRoundNumber + \" checkWord : \" +userGuess )\n      this.updateWordFeedback(thisRoundNumber,'Checking dictionary...');\n\n      if(userGuess == \"\" || userGuess == null)\n      {\n        this.updateWordFeedback(thisRoundNumber,'Enter word then Submit and Dive');\n        return false;\n      }\n      if(this.state.dictionaryCheckInProgress)\n      {\n        this.updateWordFeedback(thisRoundNumber,'Double-clickers will be left behind!');\n        return false;\n      }\n\n      this.setState({dictionaryCheckInProgress: true}); \n      fetch('https://deepseaworddotnetservice.azurewebsites.net/Entries/LookupWord?word=' + userGuess)\n        .then(res => res.json())\n        .then((data) => {\n          //this.setState({ clues: data })\n          if(data != null)\n          {\n            //console.log('word def:' + data.definition);\n            // readme: word was a real word.\n            this.updateWordFeedback(thisRoundNumber,'Found in dictionary.');\n            this.setState({currentRound: thisRoundNumber+1});\n            if(thisRoundNumber < 7)\n            {\n              this.handleDiverClick(thisRoundNumber+1);\n            }\n            else\n            {\n              //readme: kick-off the completion code.\n              //perform scoring and open lightbox to display response to that?\n              this.setState({showModal: true});\n              this.SendToScoringService();  \n            }\n          }\n          else\n          {\n            this.updateWordFeedback(thisRoundNumber,'NOT found - try another!');\n          }\n          this.setState({dictionaryCheckInProgress: false}); \n\n      })\n      .catch( ()=>\n      {\n        this.updateWordFeedback(thisRoundNumber,'Apparatus failure. Try again')\n      });\n    }\n\n    SendToScoringService = () => {\n              // gather up their state data\n              // do a fetch/Post of their data \n              // Simple POST request with a JSON body using fetch\n\n              // const requestOptions = {\n              //     method: 'POST',\n              //     headers: { 'Content-Type': 'application/json' },\n              //     body: JSON.stringify({ \n              //       userName: this.state.userName,\n              //       userGuesses: this.state.userGuesses,\n              //       clues: this.state.clues,\n              //       oxygenUsed: this.state.oxygenBottlesUsed,\n              //    })\n              // };\n\n              const formData = new FormData();\n              formData.append('userName', this.state.userName);\n              formData.append('userGuesses', JSON.stringify(this.state.userGuesses));\n              formData.append('GUID', JSON.stringify(this.state.clues.GUID));\n              formData.append('clues', JSON.stringify(this.state.clues.clues));\n              formData.append('oxygenUsed', JSON.stringify(this.state.oxygenBottlesUsed));\n\n              \n              fetch('http://localhost:5000/Entries/SubmitForScoring/', {\n                    method: 'POST',\n                    body: formData\n                  })\n                  .then(response => response.json())\n                  .then(data => {\n                    this.setState({scoringData: data});\n                  });\n\n              // throw up a light box with a spinner while they wait\n              // display their results\n    }\n\n    handleReplay = () => {\n      this.componentDidMount()\n      //this.render();\n    }\n\n      handleSubmitAndDiveClick = (thisRoundNumber) => {\n        //readme: checking the word is good before advancing\n\n          if(this.state.initializeTimers[0] == null)\n          {\n            alert(\"Please click the diver image to start the timer \\n  \");\n          }\n          else\n          {\n            this.checkWord(thisRoundNumber, this.state.userGuesses[thisRoundNumber-1]);\n          }\n\n    };\n\n      handleDiverClick = (thisRoundNumber) =>{\n          //alert('Clicked on diver' + thisRoundNumber);\n          const initializeTimersCopy = this.state.initializeTimers.slice();\n          // readme: timer has been initialized\n          initializeTimersCopy[thisRoundNumber-1] = 1;\n          this.setState({initializeTimers : initializeTimersCopy})\n      }\n\n      handleOxygenClick = (thisRoundNumber) => {\n        //readme: not sure if I'll want to count which round the oxygen was used in, might leave param there til i decide\n        let oxygenBottlesUsedNew = this.state.oxygenBottlesUsed + 1;\n        this.setState({oxygenBottlesUsed: oxygenBottlesUsedNew});\n      };\n      \n    //   readme: this is an example of 2 pieces of info being returned to the parent from a child so we can update the state\n      handleChangeUserGuess = (userGuess,i) => {\n        const userGuessesCopy = this.state.userGuesses.slice();\n        userGuessesCopy[i-1] = userGuess;\n        this.setState({userGuesses: userGuessesCopy});\n     }\n\n     handleEnterUserName = (theirUserName) => {\n       this.setState({userName: theirUserName});\n     }\n\n     handleTimerRanOut = (i) => {\n        this.setState({roundTheyWereOnWhenTimerExpired: i})\n        //todo: drown him!\n     }\n\n     componentDidMount() {\n       // readme: resets all state except username and then fetch a new word\n      this.setState({\n        userGuesses: Array(7).fill(null),\n        currentRound: 1,\n        oxygenBottlesUsed: 0,\n        initializeTimers: Array(7).fill(null),\n        clues: null,\n        roundTheyWereOnWhenTimerExpired: null,\n        isLoadingPage: true,\n        wordLookupFeedbackMessages: Array(7).fill(null),\n        showModal: false,\n        dictionaryCheckInProgress: false,\n        scoringData: null\n        //userName: \"\"\n      });\n        \n      fetch('https://deepseaworddotnetservice.azurewebsites.net/Entries/GetWordWithClues')\n          .then(res => res.json())\n          .then((data) => {\n            this.setState({ clues: data, isLoadingPage: false })\n        })\n        .catch(console.log)\n      }\n\n      render()\n      {\n        // let clues = GetJson();\n        // let parsedClues = JSON.parse(clues);\n        let parsedClues2 = this.state.clues; \n\n        // console.log(parsedClues);\n        // console.log(\" and \")\n        // console.log(parsedClues2);\n        return (\n            <div className=\"background center-screen\">\n                <div className='TitleBar' style={titleStyle}>\n                    DeepSeaWord                    \n                </div>\n                <div style={creditStyle}>\n                    by Chris Kerr                     \n                </div>\n                <div className='GameBoard' style={instructionsStyle}>\n                    In every round submit a word that meets that clue and all previous clues. <br/> \n                    Dont run out of oxygen! If the timer expires so do you! <br/> \n                    High scores require: speed, valid words, limited oxygen refills \n                    and finding that treasure!\n                    \n                    {this.state.isLoadingPage || this.state.userName == \"\" ? <div><Spinner/><UserName changeUserName={this.handleEnterUserName}/></div>  : this.renderClues(parsedClues2)}\n                </div>\n                \n                {this.state.clues != null ? <ResultsModal temporaryWord={this.state.clues.temporaryWord} oxygenBottlesUsed={this.state.oxygenBottlesUsed} showModal={this.state.showModal} handleReplay={this.handleReplay}/> : <br/>}\n   \n            </div>\n            )\n        }\n\n        renderClues(parsedClues)\n        {\n            let rows = [];\n            var x = parsedClues;\n            if(x != null)\n            {\n              //console.log(x.clues[0]);\n            \n              for(var i = 1; i < parsedClues.clues.length + 1; i++){\n                  rows.push(this.renderClue(i, parsedClues.clues[i-1]));  \n              }\n            }\n\n            return rows;\n        }\n\n        renderClue(i, clue)\n        {\n            return (\n                //readme: wonder at what point its an antipattern to pass so much down.\n                <ClueOuter \n                    style={style} \n                    clue={clue} \n                    key={i} \n                    userGuess={this.state.userGuesses[i-1]} \n                    onClick={this.handleSubmitAndDiveClick} \n                    onClickOxygen={this.handleOxygenClick} \n                    changeUserGuess={this.handleChangeUserGuess} \n                    currentRoundBeingPlayed={this.state.currentRound}\n                    initializeTimers={this.state.initializeTimers}\n                    onDiverClick={this.handleDiverClick}\n                    oxygenBottlesUsed={this.state.oxygenBottlesUsed}  \n                    timerRanOut={this.handleTimerRanOut}\n                    roundTheyWereOnWhenTimerExpired={this.state.roundTheyWereOnWhenTimerExpired}\n                    wordLookupFeedbackMessages={this.state.wordLookupFeedbackMessages}                  \n                    />   \n            );\n        }\n}\n\nfunction GetJson2()\n{\n  fetch('https://deepseaworddotnetcore.azurewebsites.net/Entries/GetWordWithClues')\n  .then(\n    function(response) {\n      if (response.status !== 200) {\n        console.log('Looks like there was a problem. Status Code: ' +\n          response.status);\n        return;\n      }\n\n      // Examine the text in the response\n      response.json().then(function(data) {\n        console.log(data);\n        return data;\n      });\n    }\n  )\n  .catch(function(err) {\n    console.log('Fetch Error :-S', err);\n  });\n}\n\nfunction GetJson()\n{\n\n    var obj = {\n        table: []\n    }\n    // PIPE\n    obj.table.push({id: 1, clue: \"Contains letter 'i'.\"});\n    obj.table.push({id: 2, clue: \"Has fewer than 5 letters.\"});\n    obj.table.push({id: 3, clue: \"Ends with 'e'\"});\n    obj.table.push({id: 4, clue: \"Syallable count : 1\"});\n    obj.table.push({id: 5, clue: \"Vowel count : 2\"});\n    obj.table.push({id: 6, clue: \"First letter 'P'\"});\n    obj.table.push({id: 7, clue: \"A cask usually containing two hogsheads or 126 gallons\"});\n\n    var json = JSON.stringify(obj);\n    \n    return json;\n}\n\nvar instructionsStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'white',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Arial',\n    fontSize: '12px',\n    // margin: '20px 200px 40px 200px',\n    padding: '20px',\n\n    textAlign: 'center',\n    // readme: better on mobile if no % here\n    // width: '60%'\n}\n\nvar style = {\n    backgroundColor: 'lightblue',\n    color: 'darkblue',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Arial',\n    fontSize: '12px',\n    // margin: '20px 200px 40px 200px',\n    padding: '20px',\n    textAlign: 'left'\n  }\n\n  var creditStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'gold',\n    fontFamily: 'Cochin',\n    fontSize: '11px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nvar titleStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'yellow',\n    fontFamily: 'Phosphate,Futura,Rockwell',\n    fontSize: '45px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}