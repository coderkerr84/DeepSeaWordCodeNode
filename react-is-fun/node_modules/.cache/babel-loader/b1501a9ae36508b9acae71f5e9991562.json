{"ast":null,"code":"import _slicedToArray from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component}from'react';import{View,Text,Button,StyleSheet}from'react';import{useEffect,useState}from\"react\";/*\n borrowed from here:\n https://www.digitalocean.com/community/tutorials/react-countdown-timer-react-hooks\n and consider wapping to this more beautiful one:\n https://css-tricks.com/how-to-create-an-animated-countdown-timer-with-html-css-and-javascript/\n \n*/function Timer(){var calculateTimeLeft=function calculateTimeLeft(){var year=new Date().getFullYear();var difference=+new Date(\"\".concat(year,\"-10-1\"))-+new Date();var timeLeft={};var countdownFromSeconds=60;if(difference>0){timeLeft={seconds:Math.floor(difference/1000%countdownFromSeconds)};}return timeLeft;};//readme: hooks?\nvar _useState=useState(calculateTimeLeft()),_useState2=_slicedToArray(_useState,2),timeLeft=_useState2[0],setTimeLeft=_useState2[1];// readme: this next line appears to be not needed\nvar _useState3=useState(new Date().getFullYear()),_useState4=_slicedToArray(_useState3,1),year=_useState4[0];useEffect(function(){setTimeout(function(){setTimeLeft(calculateTimeLeft());},1000);});var timerComponents=[];Object.keys(timeLeft).forEach(function(interval){if(!timeLeft[interval]){return;}timerComponents.push(/*#__PURE__*/React.createElement(\"span\",null,timeLeft[interval],\" \",\"s \"));});return/*#__PURE__*/React.createElement(\"span\",null,timerComponents.length?timerComponents:/*#__PURE__*/React.createElement(\"span\",null,\"Time's up!\"));}export default Timer;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/Timer.js"],"names":["React","Component","View","Text","Button","StyleSheet","useEffect","useState","Timer","calculateTimeLeft","year","Date","getFullYear","difference","timeLeft","countdownFromSeconds","seconds","Math","floor","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","length"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAAUC,SAAV,CAAqBC,QAArB,KAAqC,OAArC,CACA;;;;;;EAOA,QAASC,CAAAA,KAAT,EAAiB,CACb,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAIC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,WAAX,EAAX,CACA,GAAMC,CAAAA,UAAU,CAAG,CAAC,GAAIF,CAAAA,IAAJ,WAAYD,IAAZ,UAAD,CAA4B,CAAC,GAAIC,CAAAA,IAAJ,EAAhD,CACA,GAAIG,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMC,CAAAA,oBAAoB,CAAG,EAA7B,CACA,GAAIF,UAAU,CAAG,CAAjB,CAAoB,CAClBC,QAAQ,CAAG,CACTE,OAAO,CAAEC,IAAI,CAACC,KAAL,CAAYL,UAAU,CAAG,IAAd,CAAsBE,oBAAjC,CADA,CAAX,CAGD,CAED,MAAOD,CAAAA,QAAP,CACD,CAZD,CAaA;AAda,cAemBP,QAAQ,CAACE,iBAAiB,EAAlB,CAf3B,wCAeNK,QAfM,eAeIK,WAfJ,eAgBb;AAhBa,eAiBEZ,QAAQ,CAAC,GAAII,CAAAA,IAAJ,GAAWC,WAAX,EAAD,CAjBV,yCAiBNF,IAjBM,eAmBbJ,SAAS,CAAC,UAAM,CACdc,UAAU,CAAC,UAAM,CACfD,WAAW,CAACV,iBAAiB,EAAlB,CAAX,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CAJQ,CAAT,CAMA,GAAMY,CAAAA,eAAe,CAAG,EAAxB,CAEAC,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBU,OAAtB,CAA8B,SAACC,QAAD,CAAc,CAC1C,GAAI,CAACX,QAAQ,CAACW,QAAD,CAAb,CAAyB,CACvB,OACD,CAEDJ,eAAe,CAACK,IAAhB,cACE,gCACGZ,QAAQ,CAACW,QAAD,CADX,KACwB,IADxB,CADF,EAKD,CAVD,EAWA,mBACE,gCACGJ,eAAe,CAACM,MAAhB,CAAyBN,eAAzB,cAA2C,6CAD9C,CADF,CAKD,CAED,cAAeb,CAAAA,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { View,Text,Button,StyleSheet } from 'react';\nimport  { useEffect, useState } from \"react\";\n/*\n borrowed from here:\n https://www.digitalocean.com/community/tutorials/react-countdown-timer-react-hooks\n and consider wapping to this more beautiful one:\n https://css-tricks.com/how-to-create-an-animated-countdown-timer-with-html-css-and-javascript/\n \n*/\nfunction Timer() {\n    const calculateTimeLeft = () => {\n      let year = new Date().getFullYear();\n      const difference = +new Date(`${year}-10-1`) - +new Date();\n      let timeLeft = {};\n      const countdownFromSeconds = 60;\n      if (difference > 0) {\n        timeLeft = {\n          seconds: Math.floor((difference / 1000) % countdownFromSeconds),\n        };\n      }\n  \n      return timeLeft;\n    };\n    //readme: hooks?\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n    // readme: this next line appears to be not needed\n    const [year] = useState(new Date().getFullYear());\n  \n    useEffect(() => {\n      setTimeout(() => {\n        setTimeLeft(calculateTimeLeft());\n      }, 1000);\n    });\n  \n    const timerComponents = [];\n  \n    Object.keys(timeLeft).forEach((interval) => {\n      if (!timeLeft[interval]) {\n        return;\n      }\n  \n      timerComponents.push(\n        <span>\n          {timeLeft[interval]} {\"s \"}\n        </span>\n      );\n    });\n    return (\n      <span>\n        {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n      </span>\n    );\n  }\n  \n  export default Timer;"]},"metadata":{},"sourceType":"module"}