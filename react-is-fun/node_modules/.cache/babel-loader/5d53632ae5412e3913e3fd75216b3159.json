{"ast":null,"code":"var _jsxFileName = \"/Users/JMKerr/Code3/react-is-fun/src/GameBoard.js\";\nimport React, { useState, Component } from 'react';\nimport { render } from 'react-dom';\nimport ClueOuterList from './ClueOuterList';\nimport './GameBoard.css';\nimport ClueOuter from './ClueOuter';\n\nclass GameBoard extends React.Component {\n  // const [currentRoundBeingPlayed, setCount] = useState(1);\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitAndDiveClick = thisRoundNumber => {\n      this.setState({\n        currentRound: thisRoundNumber + 1\n      });\n\n      if (thisRoundNumber < 7) {\n        this.handleDiverClick(thisRoundNumber + 1);\n      } else {\n        //perform scoring and open lightbox to display response to that?\n        alert('You were searching for : ' + this.state.clues.temporaryWord + '\\n' + 'And used oxygen bottles :' + this.state.oxygenBottlesUsed);\n      }\n    };\n\n    this.handleDiverClick = thisRoundNumber => {\n      //alert('Clicked on diver' + thisRoundNumber);\n      const initializeTimersCopy = this.state.initializeTimers.slice();\n      initializeTimersCopy[thisRoundNumber - 1] = 1;\n      this.setState({\n        initializeTimers: initializeTimersCopy\n      });\n    };\n\n    this.handleOxygenClick = thisRoundNumber => {\n      //readme: not sure if I'll want to count which round the oxygen was used in, might leave param there til i decide\n      let oxygenBottlesUsedNew = this.state.oxygenBottlesUsed + 1;\n      this.setState({\n        oxygenBottlesUsed: oxygenBottlesUsedNew\n      });\n    };\n\n    this.handleChangeUserGuess = (userGuess, i) => {\n      const userGuessesCopy = this.state.userGuesses.slice();\n      userGuessesCopy[i - 1] = userGuess;\n      this.setState({\n        userGuesses: userGuessesCopy\n      });\n    };\n\n    this.timerRanOut = i => {\n      alert(\"round they were on when timer ran out : \" + i);\n    };\n\n    this.state = {\n      userGuesses: Array(7).fill(null),\n      currentRound: 1,\n      oxygenBottlesUsed: 0,\n      initializeTimers: Array(7).fill(null),\n      clues: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://deepseaworddotnetcore.azurewebsites.net/Entries/GetWordWithClues').then(res => res.json()).then(data => {\n      this.setState({\n        clues: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    // let clues = GetJson();\n    // let parsedClues = JSON.parse(clues);\n    let parsedClues2 = this.state.clues; // console.log(parsedClues);\n    // console.log(\" and \")\n    // console.log(parsedClues2);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background center-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TitleBar\",\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"DeepSeaWord\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: creditStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"by Chris Kerr\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"GameBoard\",\n      style: instructionsStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"In every round submit a word that meets that clue and all previous clues. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 95\n      }\n    }), \"Dont run out of oxygen! If the timer expires so do you! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 77\n      }\n    }), \"High scores require: speed, valid words, limited oxygen refills and finding that treasure!\", this.renderClues(parsedClues2)));\n  }\n\n  renderClues(parsedClues) {\n    let rows = [];\n    var x = parsedClues;\n\n    if (x != null) {\n      //console.log(x.clues[0]);\n      for (var i = 1; i < parsedClues.clues.length + 1; i++) {\n        rows.push(this.renderClue(i, parsedClues.clues[i - 1]));\n      }\n    }\n\n    return rows;\n  }\n\n  renderClue(i, clue) {\n    return (\n      /*#__PURE__*/\n      //readme: wonder at what point its an antipattern to pass so much down.\n      React.createElement(ClueOuter, {\n        style: style,\n        clue: clue,\n        key: i,\n        userGuess: this.state.userGuesses[i - 1],\n        onClick: this.handleSubmitAndDiveClick,\n        onClickOxygen: this.handleOxygenClick,\n        changeUserGuess: this.handleChangeUserGuess,\n        currentRoundBeingPlayed: this.state.currentRound,\n        initializeTimers: this.state.initializeTimers,\n        onDiverClick: this.handleDiverClick,\n        oxygenBottlesUsed: this.state.oxygenBottlesUsed,\n        timerRanOut: this.timerRanOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      })\n    );\n  }\n\n}\n\nfunction GetJson2() {\n  fetch('https://deepseaworddotnetcore.azurewebsites.net/Entries/GetWordWithClues').then(function (response) {\n    if (response.status !== 200) {\n      console.log('Looks like there was a problem. Status Code: ' + response.status);\n      return;\n    } // Examine the text in the response\n\n\n    response.json().then(function (data) {\n      console.log(data);\n      return data;\n    });\n  }).catch(function (err) {\n    console.log('Fetch Error :-S', err);\n  });\n}\n\nfunction GetJson() {\n  var obj = {\n    table: []\n  }; // PIPE\n\n  obj.table.push({\n    id: 1,\n    clue: \"Contains letter 'i'.\"\n  });\n  obj.table.push({\n    id: 2,\n    clue: \"Has fewer than 5 letters.\"\n  });\n  obj.table.push({\n    id: 3,\n    clue: \"Ends with 'e'\"\n  });\n  obj.table.push({\n    id: 4,\n    clue: \"Syallable count : 1\"\n  });\n  obj.table.push({\n    id: 5,\n    clue: \"Vowel count : 2\"\n  });\n  obj.table.push({\n    id: 6,\n    clue: \"First letter 'P'\"\n  });\n  obj.table.push({\n    id: 7,\n    clue: \"A cask usually containing two hogsheads or 126 gallons\"\n  });\n  var json = JSON.stringify(obj);\n  return json;\n}\n\nvar instructionsStyle = {\n  //backgroundColor: 'lightblue',\n  color: 'white',\n  // readme: hehe 'Arial', get it?\n  fontFamily: 'Arial',\n  fontSize: '12px',\n  // margin: '20px 200px 40px 200px',\n  padding: '20px',\n  textAlign: 'center',\n  width: '60%'\n};\nvar style = {\n  backgroundColor: 'lightblue',\n  color: 'darkblue',\n  // readme: hehe 'Arial', get it?\n  fontFamily: 'Arial',\n  fontSize: '12px',\n  // margin: '20px 200px 40px 200px',\n  padding: '20px',\n  textAlign: 'left'\n};\nvar creditStyle = {\n  //backgroundColor: 'lightblue',\n  color: 'gold',\n  fontFamily: 'Cochin',\n  fontSize: '11px',\n  textAlign: 'Center',\n  top: '0px'\n};\nvar titleStyle = {\n  //backgroundColor: 'lightblue',\n  color: 'yellow',\n  fontFamily: 'Phosphate',\n  fontSize: '45px',\n  textAlign: 'Center',\n  top: '0px'\n};\nexport default GameBoard;","map":{"version":3,"sources":["/Users/JMKerr/Code3/react-is-fun/src/GameBoard.js"],"names":["React","useState","Component","render","ClueOuterList","ClueOuter","GameBoard","constructor","props","handleSubmitAndDiveClick","thisRoundNumber","setState","currentRound","handleDiverClick","alert","state","clues","temporaryWord","oxygenBottlesUsed","initializeTimersCopy","initializeTimers","slice","handleOxygenClick","oxygenBottlesUsedNew","handleChangeUserGuess","userGuess","i","userGuessesCopy","userGuesses","timerRanOut","Array","fill","componentDidMount","fetch","then","res","json","data","catch","console","log","parsedClues2","titleStyle","creditStyle","instructionsStyle","renderClues","parsedClues","rows","x","length","push","renderClue","clue","style","GetJson2","response","status","err","GetJson","obj","table","id","JSON","stringify","color","fontFamily","fontSize","padding","textAlign","width","backgroundColor","top"],"mappings":"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","sourcesContent":["import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\nimport ClueOuterList from './ClueOuterList';\nimport './GameBoard.css';\nimport ClueOuter from './ClueOuter';\n\nclass GameBoard extends React.Component\n{ \n    // const [currentRoundBeingPlayed, setCount] = useState(1);\n    constructor(props) {\n        super(props);\n        this.state = {\n          userGuesses: Array(7).fill(null),\n          currentRound: 1,\n          oxygenBottlesUsed: 0,\n          initializeTimers: Array(7).fill(null),\n          clues: null\n        };\n      }\n      handleSubmitAndDiveClick = (thisRoundNumber) => {\n        this.setState({currentRound: thisRoundNumber+1});\n        if(thisRoundNumber < 7)\n        {\n          this.handleDiverClick(thisRoundNumber+1);\n        }\n        else\n        {\n          //perform scoring and open lightbox to display response to that?\n          alert('You were searching for : ' + this.state.clues.temporaryWord\n          + '\\n' + 'And used oxygen bottles :' + this.state.oxygenBottlesUsed);\n        }\n      };\n\n      handleDiverClick = (thisRoundNumber) =>{\n          //alert('Clicked on diver' + thisRoundNumber);\n          const initializeTimersCopy = this.state.initializeTimers.slice();\n          initializeTimersCopy[thisRoundNumber-1] = 1;\n          this.setState({initializeTimers : initializeTimersCopy})\n      }\n\n      handleOxygenClick = (thisRoundNumber) => {\n        //readme: not sure if I'll want to count which round the oxygen was used in, might leave param there til i decide\n          let oxygenBottlesUsedNew = this.state.oxygenBottlesUsed + 1;\n        this.setState({oxygenBottlesUsed: oxygenBottlesUsedNew});\n      };\n      \n    //   readme: this is an example of 2 pieces of info being returned to the parent from a child so we can update the state\n       handleChangeUserGuess = (userGuess,i) => {\n        const userGuessesCopy = this.state.userGuesses.slice();\n        userGuessesCopy[i-1] = userGuess;\n        this.setState({userGuesses: userGuessesCopy});\n     }\n\n     timerRanOut = (i) => {\n       alert(\"round they were on when timer ran out : \" + i);\n     }\n\n     componentDidMount() {\n      fetch('https://deepseaworddotnetcore.azurewebsites.net/Entries/GetWordWithClues')\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ clues: data })\n      })\n      .catch(console.log)\n      }\n\n      render()\n      {\n        // let clues = GetJson();\n        // let parsedClues = JSON.parse(clues);\n        let parsedClues2 = this.state.clues; \n\n        // console.log(parsedClues);\n        // console.log(\" and \")\n        // console.log(parsedClues2);\n        return (\n            <div className=\"background center-screen\">\n                <div className='TitleBar' style={titleStyle}>\n                    DeepSeaWord                    \n                </div>\n                <div style={creditStyle}>\n                    by Chris Kerr                     \n                </div>\n                <div className='GameBoard' style={instructionsStyle}>\n                    In every round submit a word that meets that clue and all previous clues. <br/> \n                    Dont run out of oxygen! If the timer expires so do you! <br/> \n                    High scores require: speed, valid words, limited oxygen refills \n                    and finding that treasure!\n                    {this.renderClues(parsedClues2)}\n                </div>\n            </div>\n            )\n        }\n\n        renderClues(parsedClues)\n        {\n            let rows = [];\n            var x = parsedClues;\n            if(x != null)\n            {\n              //console.log(x.clues[0]);\n            \n              for(var i = 1; i < parsedClues.clues.length + 1; i++){\n                  rows.push(this.renderClue(i, parsedClues.clues[i-1]));  \n              }\n            }\n\n            return rows;\n        }\n\n        renderClue(i, clue)\n        {\n            return (\n                //readme: wonder at what point its an antipattern to pass so much down.\n                <ClueOuter \n                    style={style} \n                    clue={clue} \n                    key={i} \n                    userGuess={this.state.userGuesses[i-1]} \n                    onClick={this.handleSubmitAndDiveClick} \n                    onClickOxygen={this.handleOxygenClick} \n                    changeUserGuess={this.handleChangeUserGuess} \n                    currentRoundBeingPlayed={this.state.currentRound}\n                    initializeTimers={this.state.initializeTimers}\n                    onDiverClick={this.handleDiverClick}\n                    oxygenBottlesUsed={this.state.oxygenBottlesUsed}  \n                    timerRanOut={this.timerRanOut}                  \n                    />   \n            );\n        }\n}\n\nfunction GetJson2()\n{\n  fetch('https://deepseaworddotnetcore.azurewebsites.net/Entries/GetWordWithClues')\n  .then(\n    function(response) {\n      if (response.status !== 200) {\n        console.log('Looks like there was a problem. Status Code: ' +\n          response.status);\n        return;\n      }\n\n      // Examine the text in the response\n      response.json().then(function(data) {\n        console.log(data);\n        return data;\n      });\n    }\n  )\n  .catch(function(err) {\n    console.log('Fetch Error :-S', err);\n  });\n}\n\nfunction GetJson()\n{\n\n    var obj = {\n        table: []\n    }\n    // PIPE\n    obj.table.push({id: 1, clue: \"Contains letter 'i'.\"});\n    obj.table.push({id: 2, clue: \"Has fewer than 5 letters.\"});\n    obj.table.push({id: 3, clue: \"Ends with 'e'\"});\n    obj.table.push({id: 4, clue: \"Syallable count : 1\"});\n    obj.table.push({id: 5, clue: \"Vowel count : 2\"});\n    obj.table.push({id: 6, clue: \"First letter 'P'\"});\n    obj.table.push({id: 7, clue: \"A cask usually containing two hogsheads or 126 gallons\"});\n\n    var json = JSON.stringify(obj);\n    \n    return json;\n}\n\nvar instructionsStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'white',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Arial',\n    fontSize: '12px',\n    // margin: '20px 200px 40px 200px',\n    padding: '20px',\n    textAlign: 'center',\n    width: '60%'\n}\n\nvar style = {\n    backgroundColor: 'lightblue',\n    color: 'darkblue',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Arial',\n    fontSize: '12px',\n    // margin: '20px 200px 40px 200px',\n    padding: '20px',\n    textAlign: 'left'\n  }\n\n  var creditStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'gold',\n    fontFamily: 'Cochin',\n    fontSize: '11px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nvar titleStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'yellow',\n    fontFamily: 'Phosphate',\n    fontSize: '45px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}