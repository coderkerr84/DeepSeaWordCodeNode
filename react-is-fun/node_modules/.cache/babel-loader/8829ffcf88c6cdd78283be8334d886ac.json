{"ast":null,"code":"var _jsxFileName = \"/Users/JMKerr/CodeNode2/react-is-fun/src/ResultsModal.js\";\nimport ReactModal from 'react-modal';\nimport React, { useState, Component } from 'react';\nimport Spinner from './Loader';\nimport './ResultsModal.css';\nimport ReactTooltip from 'react-tooltip';\n\nclass ResultsModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  } //scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n\n\n  render() {\n    console.log(\"ResultsModal\" + this.props.showModal);\n\n    if (this.props.showModal == false) {\n      return \"\";\n    }\n\n    if (this.props.scoreData == null) {\n      return /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.props.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        appElement: document.getElementById(\"root\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: spinnerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }\n      })));\n    }\n\n    if (this.props.isDead) {\n      return /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.props.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        appElement: document.getElementById(\"root\"),\n        style: {\n          content: {\n            color: 'red',\n            backgroundImage: 'url(/images/funeral.jpg)',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundColor: 'black',\n            overflow: 'scroll',\n            filter: 'drop-shadow(1px 2px 4px darkblue)'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"DeadSpan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"You perished in the seas while searching for \", /*#__PURE__*/React.createElement(\"span\", {\n        style: resultStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 62\n        }\n      }, this.props.scoreData.wordBeingSought), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }), \"Top Three Scores for \", \"'\" + this.props.scoreData.wordBeingSought + \"'\", \" :\", DisplayTopThree(this.props.scoreData.topThreeScores), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.props.handleReplay,\n        className: \"button\",\n        value: \"Replay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, \"Dive Again!\")));\n    }\n\n    const clueScoringRows = [];\n\n    for (let index = 0; index < 7; index++) {\n      const element = this.props.scoreData.clueScores[index];\n      clueScoringRows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, this.props.userGuesses[index]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[0] > 0 ? SuccessImage() : FailImage(index, 0)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[1] > 0 ? SuccessImage() : FailImage(index, 1)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[2] > 0 ? SuccessImage() : FailImage(index, 2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[3] > 0 ? SuccessImage() : FailImage(index, 3)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[4] > 0 ? SuccessImage() : FailImage(index, 4)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, element.scorePerClue[5] > 0 ? SuccessImage() : FailImage(index, 5)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"N/A\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactModal, {\n      isOpen: this.props.showModal,\n      contentLabel: \"Minimal Modal Example\",\n      appElement: document.getElementById(\"root\"),\n      style: {\n        content: {\n          color: 'darkblue',\n          backgroundColor: 'aliceblue',\n          overflow: 'scroll',\n          filter: 'drop-shadow(1px 2px 4px darkblue)'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, this.props.scoreData.isPerfectDive != null && this.props.scoreData.isPerfectDive == 1 ? PerfectDive() : \"\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), \"You \", this.props.scoreData.foundTreasure != null && this.props.scoreData.foundTreasure == 1 ? \"succesfully found \" : \"were searching for \", \" : \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 155\n      }\n    }, this.props.scoreData.wordBeingSought), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), \"You consumed oxygen bottles : \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 43\n      }\n    }, this.props.oxygenBottlesUsed), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }), \"Total Score: \", /*#__PURE__*/React.createElement(\"span\", {\n      style: resultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 26\n      }\n    }, \"$\", this.props.scoreData.totalScore, \"m\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), \"Top Three Scores for \", this.props.scoreData.wordBeingSought, \" :\", DisplayTopThree(this.props.scoreData.topThreeScores), \"How you scored against the clues:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: smallerFont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \" (hover over e.g 'Clue 2' to be reminded of that clue)\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[0].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \"Clue 1\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[1].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Clue 2\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[2].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"Clue 3\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[3].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Clue 4\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[4].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Clue 5\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[5].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Clue 6\"), /*#__PURE__*/React.createElement(\"th\", {\n      \"data-tip\": \"'\" + this.props.clues[6].clueText + \"'\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Clue 7\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, clueScoringRows)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.handleReplay,\n      className: \"button\",\n      value: \"Replay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Dive Again!\"), /*#__PURE__*/React.createElement(ReactTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    })));\n\n    function PerfectDive() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: biggerFont,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: blue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, \"Congratulations \"), /*#__PURE__*/React.createElement(\"span\", {\n        style: green,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, \"It's \"), /*#__PURE__*/React.createElement(\"span\", {\n        style: orange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, \"A \"), /*#__PURE__*/React.createElement(\"span\", {\n        style: violet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, \"*PERFECT* \"), /*#__PURE__*/React.createElement(\"span\", {\n        style: red,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, \"Dive! \"));\n    }\n\n    function SuccessImage() {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/images/Coin.png\",\n        width: \"25px\",\n        height: \"25px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      });\n    }\n\n    function FailImage(answerIndex, clueIndex) {\n      console.log(\"aI: \" + answerIndex + \" cI:\" + clueIndex);\n      let isThisRelevant = parseInt(clueIndex) <= parseInt(answerIndex);\n\n      if (!isThisRelevant) {\n        console.log(\"display N/A for aI: \" + answerIndex + \" cI:\" + clueIndex);\n        return \"N/A\";\n      } //readme: otherwise it was relevant - a clue they knew about and didn't meet so FAILED\n\n\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/images/Skull.jpg\",\n        width: \"25px\",\n        height: \"25px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      });\n    }\n\n    function DisplayTopThree(topThree) {\n      console.log(\"DisplayTopThree: \" + topThree[0].playerName);\n      return /*#__PURE__*/React.createElement(\"ol\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, topThree[0] != null && topThree[0] != undefined ? topThree[0].playerName : \"...no-one yet!\", /*#__PURE__*/React.createElement(\"span\", {\n        style: resultStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 108\n        }\n      }, topThree[0] != null && topThree[0] != undefined ? \" : $\" + topThree[0].totalPoints + \"m\" : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, topThree[1] != null && topThree[1] != undefined ? topThree[1].playerName : \"...no-one yet!\", /*#__PURE__*/React.createElement(\"span\", {\n        style: resultStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 108\n        }\n      }, topThree[1] != null && topThree[1] != undefined ? \" : $\" + topThree[1].totalPoints + \"m\" : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, topThree[2] != null && topThree[2] != undefined ? topThree[2].playerName : \"...no-one yet!\", /*#__PURE__*/React.createElement(\"span\", {\n        style: resultStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 108\n        }\n      }, topThree[2] != null && topThree[2] != undefined ? \" : $\" + topThree[2].totalPoints + \"m\" : \"\")));\n    }\n  }\n\n}\n\nvar smallerFont = {\n  fontSize: 'smaller'\n};\nvar biggerFont = {\n  fontSize: 'larger'\n};\nvar resultStyle = {\n  color: 'coral',\n  fontFamily: 'Arial',\n  fontSize: 'larger',\n  textAlign: 'left'\n};\nvar red = {\n  color: 'red'\n};\nvar violet = {\n  color: 'violet'\n};\nvar green = {\n  color: 'green'\n};\nvar orange = {\n  color: 'orange'\n};\nvar blue = {\n  color: 'blue'\n};\nvar spinnerStyle = {\n  margin: \"0 auto\"\n};\nexport default ResultsModal;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/ResultsModal.js"],"names":["ReactModal","React","useState","Component","Spinner","ReactTooltip","ResultsModal","constructor","state","render","console","log","props","showModal","scoreData","document","getElementById","spinnerStyle","isDead","content","color","backgroundImage","backgroundSize","backgroundPosition","backgroundColor","overflow","filter","resultStyle","wordBeingSought","DisplayTopThree","topThreeScores","handleReplay","clueScoringRows","index","element","clueScores","push","userGuesses","scorePerClue","SuccessImage","FailImage","isPerfectDive","PerfectDive","foundTreasure","oxygenBottlesUsed","totalScore","smallerFont","clues","clueText","biggerFont","blue","green","orange","violet","red","answerIndex","clueIndex","isThisRelevant","parseInt","topThree","playerName","undefined","totalPoints","fontSize","fontFamily","textAlign","margin"],"mappings":"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","sourcesContent":["import ReactModal from 'react-modal';\nimport React, {useState, Component} from 'react';\nimport Spinner from './Loader';\nimport './ResultsModal.css';\nimport ReactTooltip from 'react-tooltip';\n\nclass ResultsModal extends React.Component {\n    constructor () {\n      super();\n      this.state = {\n      };\n\n    }\n    //scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n\n    render () {\n      console.log(\"ResultsModal\" + this.props.showModal);\n      \n      if(this.props.showModal == false)\n      {\n        return \"\";\n      }\n\n      if(this.props.scoreData == null)\n      {\n        return (\n              <ReactModal \n              isOpen={this.props.showModal}\n              contentLabel=\"Minimal Modal Example\"\n              appElement={document.getElementById(\"root\")}\n              >\n              <div style={spinnerStyle}><Spinner/></div>\n              </ReactModal>\n        );\n      }\n\n      if(this.props.isDead)\n      {\n        return (\n              <ReactModal \n              isOpen={this.props.showModal}\n              contentLabel=\"Minimal Modal Example\"\n              appElement={document.getElementById(\"root\")}\n              style={{\n                content: {\n                  color: 'red',\n                   backgroundImage: 'url(/images/funeral.jpg)',\n                   backgroundSize: 'cover',\n                   backgroundPosition: 'center',\n                  backgroundColor: 'black',\n                  overflow: 'scroll',\n                  filter: 'drop-shadow(1px 2px 4px darkblue)'\n                }\n              }}\n              >\n              {/* <span className=\"DeadSpan\">Not all treasure hunters return home with loot...\n              <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n              </span> */}\n              <span className=\"DeadSpan\">\n                You perished in the seas while searching for <span style={resultStyle}>{this.props.scoreData.wordBeingSought}</span>\n                <br/>\n                Top Three Scores for {\"'\"+ this.props.scoreData.wordBeingSought + \"'\"} : \n                {DisplayTopThree(this.props.scoreData.topThreeScores)}\n                <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n              </span>\n              </ReactModal>\n        );\n      }\n\n      const clueScoringRows = []\n\n      for (let index = 0; index < 7; index++) {\n        const element = this.props.scoreData.clueScores[index];\n        clueScoringRows.push(\n        <tr>\n          <td>{this.props.userGuesses[index]}</td>\n          <td>{element.scorePerClue[0] > 0 ? SuccessImage() : FailImage(index, 0)}</td>\n          <td>{element.scorePerClue[1] > 0 ? SuccessImage() : FailImage(index, 1)}</td>\n          <td>{element.scorePerClue[2] > 0 ? SuccessImage() : FailImage(index, 2)}</td>\n          <td>{element.scorePerClue[3] > 0 ? SuccessImage() : FailImage(index, 3)}</td>\n          <td>{element.scorePerClue[4] > 0 ? SuccessImage() : FailImage(index, 4)}</td>\n          <td>{element.scorePerClue[5] > 0 ? SuccessImage() : FailImage(index, 5)}</td>\n          <td>{\"N/A\"}</td>\n        </tr>)\n      }\n\n      return (\n        <div>\n          \n          <ReactModal \n             isOpen={this.props.showModal}\n             contentLabel=\"Minimal Modal Example\"\n             appElement={document.getElementById(\"root\")}\n             style={{\n              content: {\n                color: 'darkblue',\n                backgroundColor: 'aliceblue',\n                overflow: 'scroll',\n                filter: 'drop-shadow(1px 2px 4px darkblue)'\n              }\n            }}\n            \n          >\n            {this.props.scoreData.isPerfectDive != null && this.props.scoreData.isPerfectDive == 1 ? PerfectDive() : \"\"}\n            <br/>  \n            You {this.props.scoreData.foundTreasure != null && this.props.scoreData.foundTreasure == 1 ? \"succesfully found \" : \"were searching for \" } : <span style={resultStyle}>{this.props.scoreData.wordBeingSought}</span>\n            <br/>\n            You consumed oxygen bottles : <span style={resultStyle}>{this.props.oxygenBottlesUsed}</span>\n            <br/>\n            Total Score: <span style={resultStyle}>${this.props.scoreData.totalScore}m</span>\n            <br/>\n            Top Three Scores for {this.props.scoreData.wordBeingSought} : \n            {DisplayTopThree(this.props.scoreData.topThreeScores)}\n\n            How you scored against the clues:\n            <br/>\n            <span style={smallerFont}> (hover over e.g 'Clue 2' to be reminded of that clue)</span>\n            <table>\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th data-tip={\"'\" + this.props.clues[0].clueText + \"'\"}>Clue 1</th>\n                    <th data-tip={\"'\" + this.props.clues[1].clueText + \"'\"}>Clue 2</th>\n                    <th data-tip={\"'\" + this.props.clues[2].clueText + \"'\"}>Clue 3</th>\n                    <th data-tip={\"'\" + this.props.clues[3].clueText + \"'\"}>Clue 4</th>\n                    <th data-tip={\"'\" + this.props.clues[4].clueText + \"'\"}>Clue 5</th>\n                    <th data-tip={\"'\" + this.props.clues[5].clueText + \"'\"}>Clue 6</th>\n                    <th data-tip={\"'\" + this.props.clues[6].clueText + \"'\"}>Clue 7</th>\n                  </tr>\n                </thead>\n              <tbody>\n                {clueScoringRows}\n              </tbody>\n            </table>\n            <br/>\n\n            <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n            <ReactTooltip />\n          </ReactModal>\n        </div>\n      );\n\n      function PerfectDive()\n      {\n        return(\n          <div style={biggerFont}>\n            <span style={blue}>Congratulations </span>\n            <span style={green}>It's </span>\n            <span style={orange}>A </span>\n            <span style={violet}>*PERFECT* </span>\n            <span style={red}>Dive! </span>\n          </div>            \n        ); \n\n      }\n      function SuccessImage()\n      {\n        return(\n            <img src=\"/images/Coin.png\" width=\"25px\" height=\"25px\"/>\n        );\n      }\n\n      function FailImage(answerIndex,clueIndex)\n      {\n        console.log(\"aI: \" + answerIndex + \" cI:\" +clueIndex);\n        let isThisRelevant = (parseInt(clueIndex) <= parseInt(answerIndex));\n        if(!isThisRelevant)\n        {\n          console.log(\"display N/A for aI: \" + answerIndex + \" cI:\" +clueIndex);\n          return \"N/A\";\n        }\n        //readme: otherwise it was relevant - a clue they knew about and didn't meet so FAILED\n        return(\n\n            <img src=\"/images/Skull.jpg\" width=\"25px\" height=\"25px\"/>\n          \n        );\n      }\n\n      function DisplayTopThree(topThree)\n      {\n        console.log(\"DisplayTopThree: \" + topThree[0].playerName);\n        return(\n          <ol>\n          <li>{topThree[0] != null && topThree[0] != undefined ? topThree[0].playerName : \"...no-one yet!\"}<span style={resultStyle}>{topThree[0] != null && topThree[0] != undefined ? \" : $\" + topThree[0].totalPoints + \"m\" : \"\"}</span></li>\n          <li>{topThree[1] != null && topThree[1] != undefined ? topThree[1].playerName : \"...no-one yet!\"}<span style={resultStyle}>{topThree[1] != null && topThree[1] != undefined  ? \" : $\" + topThree[1].totalPoints + \"m\" : \"\"}</span></li>\n          <li>{topThree[2] != null && topThree[2] != undefined ? topThree[2].playerName : \"...no-one yet!\"}<span style={resultStyle}>{topThree[2] != null && topThree[2] != undefined ? \" : $\" + topThree[2].totalPoints + \"m\" : \"\"}</span></li>\n          </ol>\n        );\n      }\n\n    }\n  }\n\nvar smallerFont = {\n  fontSize: 'smaller'\n}\n\nvar biggerFont = {\n  fontSize: 'larger'\n}\n\n  var resultStyle = {\n    color: 'coral',\n    fontFamily: 'Arial',\n    fontSize: 'larger',\n    textAlign: 'left'\n  }\n\n  var red = {\n    color: 'red'\n  }\n  var violet = {\n    color: 'violet'\n  }\n  var green = {\n    color: 'green'\n  }\n  var orange = {\n    color: 'orange'\n  }\n  var blue = {\n    color: 'blue'\n  }\n\n  var spinnerStyle = {\n    margin: \"0 auto\"\n  }\n\n  export default ResultsModal;"]},"metadata":{},"sourceType":"module"}