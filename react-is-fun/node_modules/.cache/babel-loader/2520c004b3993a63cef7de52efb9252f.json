{"ast":null,"code":"var _jsxFileName = \"/Users/JMKerr/CodeNode2/react-is-fun/src/ClueOuter.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Timer from './Timer';\nimport './ClueOuter.css';\nimport UserGuess from './UserGuess';\nimport ClueScore from './ClueScore';\nimport TimerCircle from './TimerCircle.js';\nimport Alert from 'react-bootstrap/Alert';\n\nclass ClueOuter extends React.Component {\n  render() {\n    let clue = this.props.clue;\n    let thisRoundId = clue.roundId;\n    let userGuess = this.props.userGuess;\n    let foundTreasureInThisRound = this.props.foundTreasureInRound == thisRoundId;\n    let sharkAppearsInThisRound = this.props.sharkAppearsInRound == thisRoundId;\n    let mineAppearsInThisRound = this.props.mineAppearsInRound == thisRoundId;\n    let squidAppearsInThisRound = this.props.squidAppearsInRound == thisRoundId; //console.log(this.props.foundTreasureInRound + \" ... \" + thisRoundId);\n\n    let treasureFoundClassName = foundTreasureInThisRound ? \" foundTreasure\" : \"\"; //console.log(treasureFoundClassName);\n\n    let isThisTheCurrentRound = this.props.currentRoundBeingPlayed == thisRoundId;\n    let diverClassName = isThisTheCurrentRound ? \"showBlock\" : \"hideBlock\";\n    let isDiverDead = this.props.roundTheyWereOnWhenTimerExpired != null;\n    let diverDisplay = DiverDisplayFunction(this.props.initializeTimers[clue.roundId - 1], this.props.roundTheyWereOnWhenTimerExpired, clue.roundId);\n    let sharkEncounterClassName = sharkAppearsInThisRound && !foundTreasureInThisRound ? \" sharkEncounter\" : \"\";\n    let mineEncounterClassName = mineAppearsInThisRound && !foundTreasureInThisRound && !sharkAppearsInThisRound ? \" mineEncounter\" : \"\";\n    let squidEncounterClassName = squidAppearsInThisRound && !foundTreasureInThisRound && !sharkAppearsInThisRound && !mineAppearsInThisRound ? \" squidEncounter \" : \"\";\n    let combinedClassNames = treasureFoundClassName + sharkEncounterClassName + mineEncounterClassName + squidEncounterClassName; // readme: this needs to come after all the above.\n\n    let clueOuterClassName = this.props.currentRoundBeingPlayed >= thisRoundId ? \"clueOuterInPlay clueOuter\" + combinedClassNames : \"clueOuterNotInPlay clueOuter\" + combinedClassNames;\n\n    function DiverDisplayFunction(initializedTimer, roundTheyWereOnWhenTimerExpired, roundId) {\n      //readme: if timer initialized for this round then clock has started so hide the diver...\n      if (initializedTimer != null) {\n        //readme: ...unless the timer has run out in which case display the diver on that round\n        //console.log('roundId:'+roundId+' roundExpired '+ roundTheyWereOnWhenTimerExpired + ' initializedTimer: ' + initializedTimer)\n        if (roundTheyWereOnWhenTimerExpired != null && roundId == roundTheyWereOnWhenTimerExpired) {\n          return '';\n        }\n\n        return 'none';\n      }\n\n      return '';\n    }\n\n    const OXYGEN_BOTTLES_AVAILABLE = 5; //console.log(\"lol :\" +isThisTheCurrentRound);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: clueOuterClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: roundStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, clue.roundId), /*#__PURE__*/React.createElement(\"div\", {\n      style: inlineBlock,\n      name: \"ClueOuterDiv\" + clue.roundId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: floatLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, ClueInner(clue, this.props.changeUserGuess, this.props.wordLookupFeedbackMessages[clue.roundId - 1], isThisTheCurrentRound, this.props.startTimer, this.props.squidAppearsInRound, this.props.currentRoundBeingPlayed)), /*#__PURE__*/React.createElement(TimerCircle, {\n      initializeTimers: this.props.initializeTimers,\n      style: this.props.roundTheyWereOnWhenTimerExpired == clue.roundId ? displayNone : floatLeft,\n      uniqueKey: clue.roundId,\n      haltTimer: clue.roundId < this.props.currentRoundBeingPlayed || this.props.resurfaceClicked || this.props.roundTheyWereOnWhenTimerExpired == clue.roundId,\n      oxygenBottlesBought: this.props.oxygenBottlesBought,\n      currentRoundBeingPlayed: this.props.currentRoundBeingPlayed,\n      timerRanOut: this.props.timerRanOut,\n      oxygenBottlesApplied: this.props.oxygenBottlesApplied,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: { ...floatLeft,\n        ...{\n          position: \"relative\"\n        }\n      },\n      className: diverClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: { ...diverSpanStyle,\n        ...{\n          display: diverDisplay\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, clue.roundId == 1 && !isDiverDead ? \"Enter a word\" : \"\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: { ...diverSpanStyle,\n        ...{\n          display: diverDisplay,\n          backgroundColor: \"rgb(255,255,255,0.60)\",\n          color: \"red\",\n          fontWeight: \"bold\",\n          top: \"0\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, isDiverDead ? \"Submit and Dive to recover body\" : \"\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/diver2.png\",\n      height: \"51px\",\n      style: { ...(isDiverDead ? diverStyleDead : diverStyleAlive),\n        ...{\n          display: diverDisplay,\n          paddingBottom: \"30px\"\n        }\n      },\n      onClick: event => this.props.onDiverClick(clue.roundId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: floatRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: buttonPadding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !isThisTheCurrentRound,\n      className: \"button\",\n      style: {\n        backgroundColor: \"coral\"\n      },\n      tabIndex: clue.roundId + \"1\",\n      onClick: event => this.props.onClick(clue.roundId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, clue.roundId == 7 ? \"Complete!\" : \"Submit And Dive\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: buttonPadding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !isThisTheCurrentRound,\n      className: \"button\",\n      style: {\n        backgroundColor: \"antiquewhite\"\n      },\n      onClick: event => this.props.onClickResurface(clue.roundId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Resurface\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: buttonPadding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !isThisTheCurrentRound || OXYGEN_BOTTLES_AVAILABLE - this.props.oxygenBottlesBought < 1 || sharkAppearsInThisRound,\n      className: \"button\",\n      onClick: event => this.props.onClickOxygen(clue.roundId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Refill O\", /*#__PURE__*/React.createElement(\"sub\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, \"2\"), \" (+10s)\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: displayBlock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"O\", /*#__PURE__*/React.createElement(\"sub\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 53\n      }\n    }, \"2\"), \" reserves: \", OXYGEN_BOTTLES_AVAILABLE - this.props.oxygenBottlesBought)))));\n  }\n\n} // readme: this was once a separate component but I was having to pass from parent to child to child and it felt messy\n\n\nfunction ClueInner(clue, onChange, wordLookupFeedbackMessage, isThisTheCurrentRound, startTimer, squidAppearsInRound, currentRoundBeingPlayed) {\n  // console.log(clue.roundId);   \n  let haveTheyReachedTheSquidLevelYet = currentRoundBeingPlayed == squidAppearsInRound;\n\n  if (haveTheyReachedTheSquidLevelYet && squidAppearsInRound > 0 && clue.roundId < squidAppearsInRound) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ClueInner\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"*\", /*#__PURE__*/React.createElement(\"label\", {\n      className: \"clueSquid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 24\n      }\n    }, clue.clueText), \"*\"), /*#__PURE__*/React.createElement(UserGuess, {\n      isThisTheCurrentRound: isThisTheCurrentRound,\n      changeUserGuess: onChange,\n      clueId: clue.roundId,\n      wordLookupFeedbackMessage: wordLookupFeedbackMessage,\n      startTimer: startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ClueInner\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"ClueInnerLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, clue.clueText), /*#__PURE__*/React.createElement(UserGuess, {\n    isThisTheCurrentRound: isThisTheCurrentRound,\n    changeUserGuess: onChange,\n    clueId: clue.roundId,\n    wordLookupFeedbackMessage: wordLookupFeedbackMessage,\n    startTimer: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar textAlignLeft = {\n  textAlign: 'left'\n}; // var diverFontSize={\n//     fontSize: 'xlarge'\n// }\n\nvar diverStyleAlive = {\n  display: 'block',\n  margin: 'auto',\n  transform: 'rotate(0deg)'\n};\nvar diverStyleDead = {\n  display: 'block',\n  margin: 'auto',\n  transform: 'rotate(180deg)',\n  filter: 'grayscale(1)'\n};\nvar diverSpanStyle = {\n  position: 'absolute',\n  left: '0',\n  right: '0',\n  bottom: '1%'\n};\nvar style = {\n  fontFamily: 'Courier,Arial',\n  // margin: '10px',\n  padding: '10px',\n  textAlignLast: 'center',\n  backgroundColor: 'rgb(255,255,255,0.70)'\n};\nvar roundStyle = {\n  backgroundColor: 'steelblue',\n  color: 'white',\n  fontFamily: 'Courier,Arial',\n  left: '10px',\n  width: '20px',\n  textAlign: 'center'\n};\nvar styleTimer = {\n  textAlign: 'center',\n  backgroundColor: 'skyblue',\n  width: '80px',\n  padding: '5px',\n  margin: 'auto',\n  borderRadius: '25px'\n};\nvar inlineBlock = {\n  display: 'inline-block',\n  width: '100%'\n};\nvar buttonPadding = {\n  padding: '6px'\n};\nvar floatRight = {\n  float: 'right',\n  width: '33%',\n  textAlign: 'center'\n};\nvar floatNone = {\n  float: 'none',\n  width: '33%'\n};\nvar floatLeft = {\n  float: 'left',\n  width: '33%'\n};\nvar displayBlock = {\n  display: 'block'\n};\nvar displayNone = {\n  display: 'none'\n};\nexport default ClueOuter;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/ClueOuter.js"],"names":["React","render","Timer","UserGuess","ClueScore","TimerCircle","Alert","ClueOuter","Component","clue","props","thisRoundId","roundId","userGuess","foundTreasureInThisRound","foundTreasureInRound","sharkAppearsInThisRound","sharkAppearsInRound","mineAppearsInThisRound","mineAppearsInRound","squidAppearsInThisRound","squidAppearsInRound","treasureFoundClassName","isThisTheCurrentRound","currentRoundBeingPlayed","diverClassName","isDiverDead","roundTheyWereOnWhenTimerExpired","diverDisplay","DiverDisplayFunction","initializeTimers","sharkEncounterClassName","mineEncounterClassName","squidEncounterClassName","combinedClassNames","clueOuterClassName","initializedTimer","OXYGEN_BOTTLES_AVAILABLE","roundStyle","inlineBlock","floatLeft","ClueInner","changeUserGuess","wordLookupFeedbackMessages","startTimer","displayNone","resurfaceClicked","oxygenBottlesBought","timerRanOut","oxygenBottlesApplied","position","diverSpanStyle","display","backgroundColor","color","fontWeight","top","diverStyleDead","diverStyleAlive","paddingBottom","event","onDiverClick","floatRight","buttonPadding","onClick","onClickResurface","onClickOxygen","displayBlock","onChange","wordLookupFeedbackMessage","haveTheyReachedTheSquidLevelYet","style","clueText","textAlignLeft","textAlign","margin","transform","filter","left","right","bottom","fontFamily","padding","textAlignLast","width","styleTimer","borderRadius","float","floatNone"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\nimport Timer from './Timer';\nimport './ClueOuter.css';\nimport UserGuess from './UserGuess'; \nimport ClueScore from './ClueScore';\nimport TimerCircle from './TimerCircle.js';\nimport Alert from 'react-bootstrap/Alert';\n\nclass ClueOuter extends React.Component\n{\n\n    render(){\n        let clue = this.props.clue;\n        let thisRoundId = clue.roundId;\n        let userGuess = this.props.userGuess;\n        let foundTreasureInThisRound = this.props.foundTreasureInRound == thisRoundId;\n        let sharkAppearsInThisRound = this.props.sharkAppearsInRound == thisRoundId;\n        let mineAppearsInThisRound = this.props.mineAppearsInRound == thisRoundId;\n        let squidAppearsInThisRound = this.props.squidAppearsInRound == thisRoundId;\n\n        //console.log(this.props.foundTreasureInRound + \" ... \" + thisRoundId);\n        let treasureFoundClassName = foundTreasureInThisRound ? \" foundTreasure\" : \"\";\n\n        //console.log(treasureFoundClassName);\n        let isThisTheCurrentRound = this.props.currentRoundBeingPlayed == thisRoundId;\n        let diverClassName = isThisTheCurrentRound ? \"showBlock\" : \"hideBlock\";\n        let isDiverDead = this.props.roundTheyWereOnWhenTimerExpired != null;\n        let diverDisplay = DiverDisplayFunction(this.props.initializeTimers[clue.roundId - 1],this.props.roundTheyWereOnWhenTimerExpired, clue.roundId);\n        \n        let sharkEncounterClassName = sharkAppearsInThisRound && !foundTreasureInThisRound ? \" sharkEncounter\" : \"\" ;\n        let mineEncounterClassName = mineAppearsInThisRound && !foundTreasureInThisRound && !sharkAppearsInThisRound ? \" mineEncounter\" : \"\" ;\n        let squidEncounterClassName = squidAppearsInThisRound && !foundTreasureInThisRound && !sharkAppearsInThisRound && !mineAppearsInThisRound ? \" squidEncounter \" : \"\" ;\n        let combinedClassNames = treasureFoundClassName + sharkEncounterClassName + mineEncounterClassName + squidEncounterClassName;\n        // readme: this needs to come after all the above.\n        let clueOuterClassName = this.props.currentRoundBeingPlayed >= thisRoundId ? \"clueOuterInPlay clueOuter\" + combinedClassNames : \"clueOuterNotInPlay clueOuter\" + combinedClassNames;\n\n        function DiverDisplayFunction(initializedTimer, roundTheyWereOnWhenTimerExpired, roundId){\n            //readme: if timer initialized for this round then clock has started so hide the diver...\n            if(initializedTimer != null){\n                //readme: ...unless the timer has run out in which case display the diver on that round\n                //console.log('roundId:'+roundId+' roundExpired '+ roundTheyWereOnWhenTimerExpired + ' initializedTimer: ' + initializedTimer)\n                if(roundTheyWereOnWhenTimerExpired != null && roundId == roundTheyWereOnWhenTimerExpired){\n                    return '';\n                }\n                return  'none'\n            }\n            return '';\n        }\n        const OXYGEN_BOTTLES_AVAILABLE = 5;\n        //console.log(\"lol :\" +isThisTheCurrentRound);\n        return(\n        \n        <div className={clueOuterClassName}>\n            <div style={roundStyle}>\n                {clue.roundId}\n            </div>\n  \n            {/* readme: this below probably should be another Component */}\n            <div style={inlineBlock} name={\"ClueOuterDiv\" + clue.roundId}>\n                <div style={floatLeft}>\n                    {ClueInner(clue, this.props.changeUserGuess, this.props.wordLookupFeedbackMessages[clue.roundId-1], isThisTheCurrentRound, this.props.startTimer, this.props.squidAppearsInRound, this.props.currentRoundBeingPlayed)}\n                </div>\n                <TimerCircle \n                    initializeTimers={this.props.initializeTimers} \n                    style={this.props.roundTheyWereOnWhenTimerExpired == clue.roundId ? displayNone : floatLeft} \n                    uniqueKey={clue.roundId}\n                    haltTimer={clue.roundId < this.props.currentRoundBeingPlayed || this.props.resurfaceClicked || this.props.roundTheyWereOnWhenTimerExpired == clue.roundId}\n                    oxygenBottlesBought={this.props.oxygenBottlesBought}\n                    currentRoundBeingPlayed={this.props.currentRoundBeingPlayed}\n                    timerRanOut={this.props.timerRanOut}\n                    oxygenBottlesApplied={this.props.oxygenBottlesApplied}\n                    /> \n                <div style={{...floatLeft,...{position:\"relative\"}}} className={diverClassName}>\n                    <span style={{...diverSpanStyle,...{display:diverDisplay}}}>{clue.roundId == 1 && !isDiverDead ? \"Enter a word\" : \"\"}</span>\n                    <span style={{...diverSpanStyle,...{display:diverDisplay, backgroundColor:\"rgb(255,255,255,0.60)\", color: \"red\", fontWeight: \"bold\", top : \"0\"}}}>{isDiverDead ? \"Submit and Dive to recover body\" : \"\"}</span>\n                    <img src=\"images/diver2.png\" height=\"51px\" style={{...isDiverDead ? diverStyleDead : diverStyleAlive,...{display:diverDisplay,paddingBottom:\"30px\"}}} onClick={(event) => this.props.onDiverClick(clue.roundId)}>\n                    </img>                    \n                </div>\n                <div style={floatRight}>\n                    <div style={buttonPadding}>\n                        <button disabled={!isThisTheCurrentRound} className=\"button\" style={{backgroundColor:\"coral\"}} tabIndex={clue.roundId + \"1\"}  onClick={(event) => this.props.onClick(clue.roundId)}>\n                            {clue.roundId == 7 ? \"Complete!\" : \"Submit And Dive\"}\n                        </button>\n                    </div>\n                    <div style={buttonPadding}>\n                        <button disabled={!isThisTheCurrentRound}  className=\"button\" style={{backgroundColor:\"antiquewhite\"}} onClick={(event) =>  this.props.onClickResurface(clue.roundId)}>\n                                Resurface\n                        </button>\n                    </div>\n                    <div style={buttonPadding}>\n                        <button disabled={!isThisTheCurrentRound || (OXYGEN_BOTTLES_AVAILABLE - this.props.oxygenBottlesBought) < 1 || sharkAppearsInThisRound} className=\"button\" onClick={(event) => this.props.onClickOxygen(clue.roundId)}>\n                                Refill O<sub>2</sub> (+10s)\n                        </button>\n                        <span style={displayBlock}>O<sub>2</sub> reserves: {(OXYGEN_BOTTLES_AVAILABLE - this.props.oxygenBottlesBought)}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\n// readme: this was once a separate component but I was having to pass from parent to child to child and it felt messy\nfunction ClueInner(clue, onChange, wordLookupFeedbackMessage, isThisTheCurrentRound, startTimer, squidAppearsInRound, currentRoundBeingPlayed){\n    // console.log(clue.roundId);   \n    let haveTheyReachedTheSquidLevelYet = currentRoundBeingPlayed == squidAppearsInRound;\n\n    if(haveTheyReachedTheSquidLevelYet && squidAppearsInRound > 0 && clue.roundId < squidAppearsInRound)\n    {\n        return (\n            <div className='ClueInner' style={style}>\n                <span>*<label className='clueSquid'>{clue.clueText}</label>*</span>\n                \n                <UserGuess \n                    isThisTheCurrentRound={isThisTheCurrentRound} \n                    changeUserGuess={onChange} \n                    clueId={clue.roundId} \n                    wordLookupFeedbackMessage={wordLookupFeedbackMessage}\n                    startTimer={startTimer}\n                />  \n             \n            </div>\n        );\n    }\n\n    return (\n        <div className='ClueInner' style={style}>\n            <label className='ClueInnerLabel'>{clue.clueText}</label>\n            \n            <UserGuess \n                isThisTheCurrentRound={isThisTheCurrentRound} \n                changeUserGuess={onChange} \n                clueId={clue.roundId} \n                wordLookupFeedbackMessage={wordLookupFeedbackMessage}\n                startTimer={startTimer}\n            />  \n         \n        </div>\n    );\n}\nvar textAlignLeft ={\n    textAlign: 'left'\n}\n// var diverFontSize={\n//     fontSize: 'xlarge'\n// }\n\nvar diverStyleAlive ={\n    display: 'block',\n    margin: 'auto',\n    transform: 'rotate(0deg)'\n}\nvar diverStyleDead ={\n    display: 'block',\n    margin: 'auto',\n    transform: 'rotate(180deg)',\n    filter: 'grayscale(1)'\n}\nvar diverSpanStyle={\n    position: 'absolute',\n    left: '0',\n    right: '0',\n    bottom: '1%'\n}\nvar style = {\n    fontFamily: 'Courier,Arial',\n    // margin: '10px',\n    padding: '10px',\n    textAlignLast: 'center',\n    backgroundColor: 'rgb(255,255,255,0.70)',\n  }\nvar roundStyle = {\n    backgroundColor: 'steelblue',\n    color: 'white',\n    fontFamily: 'Courier,Arial',\n    left: '10px',\n    width: '20px',\n    textAlign: 'center'\n  }\n\n  var styleTimer = {\n    textAlign: 'center',\n    backgroundColor : 'skyblue',\n    width: '80px',\n    padding: '5px',\n    margin: 'auto',\n    borderRadius: '25px'\n  }\n\n  var inlineBlock = {\n    display: 'inline-block',\n    width: '100%'\n  }\n\nvar buttonPadding = {\n    padding: '6px'\n}\n\n  var floatRight = {\n    float: 'right',\n    width: '33%',\n    textAlign: 'center'\n  }\n\n  var floatNone = {\n      float: 'none',\n      width: '33%'\n  }\n\n  var floatLeft = {\n    float: 'left',\n    width: '33%'\n  }\n\n  var displayBlock={\n    display: 'block'\n  }\n\n  var displayNone ={\n      display: 'none'\n  }\n\nexport default ClueOuter;\n"]},"metadata":{},"sourceType":"module"}