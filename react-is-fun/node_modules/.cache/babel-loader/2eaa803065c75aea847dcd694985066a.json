{"ast":null,"code":"var _jsxFileName = \"/Users/JMKerr/CodeNode2/react-is-fun/src/UserGuess.js\";\nimport React, { useState, Component } from 'react';\nimport { render } from 'react-dom';\n\nclass UserGuess extends React.Component {\n  //const [count, setCount] = useState(0);\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"UserGuess\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      disabled: !this.props.isThisTheCurrentRound,\n      style: {\n        width: '85px',\n        height: '30px',\n        fontSize: 'larger',\n        padding: 'initial'\n      },\n      type: \"text\",\n      maxLength: \"20\",\n      tabIndex: this.props.clueId + \"0\",\n      onKeyUp: event => this.props.changeUserGuess(event.target.value, this.props.clueId, event.key),\n      onBlur: event => this.props.changeUserGuess(event.target.value, this.props.clueId, '1'),\n      onFocus: event => this.props.startTimer(this.props.clueId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, this.props.wordLookupFeedbackMessage));\n  }\n\n}\n\nvar style = {\n  fontFamily: 'Arial',\n  margin: '5px 5px 0px 0px',\n  padding: '1px'\n};\nexport default UserGuess;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/UserGuess.js"],"names":["React","useState","Component","render","UserGuess","style","props","isThisTheCurrentRound","width","height","fontSize","padding","clueId","event","changeUserGuess","target","value","key","startTimer","wordLookupFeedbackMessage","fontFamily","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACE,SAA9B,CACA;AACI;AACJC,EAAAA,MAAM,GACN;AACI,wBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAEE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,QAAQ,EAAE,CAAC,KAAKC,KAAL,CAAWC,qBAD1B;AAEI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,MAAP;AAAcC,QAAAA,MAAM,EAAC,MAArB;AAA6BC,QAAAA,QAAQ,EAAC,QAAtC;AAAgDC,QAAAA,OAAO,EAAC;AAAxD,OAFX;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,SAAS,EAAC,IAJd;AAKI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,MAAX,GAAoB,GALlC;AAMI,MAAA,OAAO,EAAGC,KAAD,IAAW,KAAKP,KAAL,CAAWQ,eAAX,CAA2BD,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA+C,KAAKV,KAAL,CAAWM,MAA1D,EAAkEC,KAAK,CAACI,GAAxE,CANxB;AAOI,MAAA,MAAM,EAAGJ,KAAD,IAAW,KAAKP,KAAL,CAAWQ,eAAX,CAA2BD,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA+C,KAAKV,KAAL,CAAWM,MAA1D,EAAkE,GAAlE,CAPvB;AAQI,MAAA,OAAO,EAAGC,KAAD,IAAW,KAAKP,KAAL,CAAWY,UAAX,CAAsB,KAAKZ,KAAL,CAAWM,MAAjC,CARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKN,KAAL,CAAWa,yBAAjB,CAZJ,CAFJ;AAiBC;;AArBL;;AAuBA,IAAId,KAAK,GAAG;AACRe,EAAAA,UAAU,EAAE,OADJ;AAERC,EAAAA,MAAM,EAAE,iBAFA;AAGRV,EAAAA,OAAO,EAAE;AAHD,CAAZ;AAKA,eAAeP,SAAf","sourcesContent":["import React, {useState, Component} from 'react';\nimport {render} from 'react-dom';\n\nclass UserGuess extends React.Component\n{\n    //const [count, setCount] = useState(0);\nrender()\n{\n    return (\n        \n        <div className='UserGuess' style={style}>\n            <input \n                disabled={!this.props.isThisTheCurrentRound} \n                style={{width:'85px',height:'30px', fontSize:'larger', padding:'initial'}} \n                type='text' \n                maxLength='20' \n                tabIndex={this.props.clueId + \"0\"} \n                onKeyUp={(event) => this.props.changeUserGuess(event.target.value, this.props.clueId, event.key)} \n                onBlur={(event) => this.props.changeUserGuess(event.target.value, this.props.clueId, '1')}\n                onFocus={(event) => this.props.startTimer(this.props.clueId)}\n            >\n            </input>\n            <div>{this.props.wordLookupFeedbackMessage}</div>\n        </div>  \n    )\n    }\n}\nvar style = {\n    fontFamily: 'Arial',\n    margin: '5px 5px 0px 0px',\n    padding: '1px'\n  }\nexport default UserGuess;\n"]},"metadata":{},"sourceType":"module"}