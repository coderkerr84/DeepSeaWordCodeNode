{"ast":null,"code":"import _classCallCheck from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import ReactModal from'react-modal';import React,{useState,Component}from'react';import Spinner from'./Loader';import'./ResultsModal.css';import ReactTooltip from'react-tooltip';import UIfx from'uifx';import perfectSfx from'./sounds/perfect.mp3';import sadSfx from'./sounds/sad.mp3';var perfectSound=new UIfx(perfectSfx);perfectSound.setVolume(0.9);var sadSound=new UIfx(sadSfx);sadSound.setVolume(0.4);function DisplayLeaderboard(){var leadDiv=document.getElementById(\"LeaderboardDiv\");leadDiv.style.display=\"block\";var rulesDiv=document.getElementById(\"RulesDiv\");rulesDiv.style.display=\"none\";document.getElementById(\"RulesSpan\").className=\"fontSmaller\";document.getElementById(\"LeaderboardSpan\").className=\"fontBigger\";}function DisplayRules(){var leadDiv=document.getElementById(\"LeaderboardDiv\");leadDiv.style.display=\"none\";var rulesDiv=document.getElementById(\"RulesDiv\");rulesDiv.style.display=\"block\";document.getElementById(\"RulesSpan\").className=\"fontBigger\";document.getElementById(\"LeaderboardSpan\").className=\"fontSmaller\";}var ResultsModal=/*#__PURE__*/function(_React$Component){_inherits(ResultsModal,_React$Component);var _super=_createSuper(ResultsModal);function ResultsModal(){var _this;_classCallCheck(this,ResultsModal);_this=_super.call(this);_this.state={};return _this;}//scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n_createClass(ResultsModal,[{key:\"render\",value:function render(){//console.log(\"ResultsModal\" + this.props.showModal);\nif(this.props.showModal==false){return\"\";}if(this.props.highScoreData!=null){var highScoringRows=[];for(var index=0;index<this.props.highScoreData.length;index++){var element=this.props.highScoreData[index];highScoringRows.push(/*#__PURE__*/React.createElement(\"tr\",{key:element.playerName},/*#__PURE__*/React.createElement(\"td\",null,element.playerName),/*#__PURE__*/React.createElement(\"td\",null,element.timesPlayed),/*#__PURE__*/React.createElement(\"td\",null,element.perfectDives),/*#__PURE__*/React.createElement(\"td\",null,(element.foundTreasure/element.timesPlayed).toFixed(2)*100,\"%\"),/*#__PURE__*/React.createElement(\"td\",null,(element.oxygenTanksUsed/element.timesPlayed).toFixed(2)),/*#__PURE__*/React.createElement(\"td\",null,\"$\",element.averagePointsPerDive,\"m\"),/*#__PURE__*/React.createElement(\"td\",null,element.longestStreak),/*#__PURE__*/React.createElement(\"td\",null,element.currentStreak),/*#__PURE__*/React.createElement(\"td\",null,\"$\",element.totalPoints,\"m\")));}return/*#__PURE__*/React.createElement(ReactModal,{isOpen:this.props.showModal,contentLabel:\"Minimal Modal Example\",appElement:document.getElementById(\"root\")},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{id:\"LeaderboardSpan\",className:\"fontBigger\"},/*#__PURE__*/React.createElement(\"a\",{href:\"#\",onClick:function onClick(){return DisplayLeaderboard();}},\"Leaderboard\")),/*#__PURE__*/React.createElement(\"span\",null,\" / \"),/*#__PURE__*/React.createElement(\"span\",{id:\"RulesSpan\",className:\"fontSmaller\"},/*#__PURE__*/React.createElement(\"a\",{href:\"#\",onClick:function onClick(){return DisplayRules();}},\"Rules\"))),/*#__PURE__*/React.createElement(\"div\",{id:\"LeaderboardDiv\"},/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"Who\"},\"Player Name\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"Number of Times Played\"},\"# Dives Taken\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"Number of Maximum Scores\"},\"# Perfect Dives\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"FoundTreasure/TimesPlayed * 100\"},\"% Treasure Found\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"TanksOfOxygenUsed/TimesPlayed\"},\"Oxygen Reliance\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"TotalPoints/TimesPlayed\"},\"Avg Points Per Dive\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"Consecutive dives found treasure\"},\"Longest Streak\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"Consecutive dives found treasure\"},\"Current Streak\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"Total Points\"},\"Total Points\"))),/*#__PURE__*/React.createElement(\"tbody\",null,highScoringRows))),/*#__PURE__*/React.createElement(\"div\",{id:\"RulesDiv\",style:{display:\"none\"}},/*#__PURE__*/React.createElement(\"h1\",null,\"Dive School (Rules)\"),\"You are diving for a hidden Treasure Word - a series of 6 clues will reveal information about the word's make-up leading you ever closer to it,\",/*#__PURE__*/React.createElement(\"br\",null),\"until the 7th clue will provide you with the dictionary's definition of the word.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"The Treasure Word is always a noun, so guess those if you can, but any valid word will earn 1 point-per-clue-it-satisfies.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"Even if you successfully guess the Treasure Word before the end, there are still points on the table for you to claim by entering\",/*#__PURE__*/React.createElement(\"br\",null),\"other words that meet as many clues as possible.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"There might be plenty more fish in the sea but you'll only play each noun \",/*#__PURE__*/React.createElement(\"span\",{style:boldFont},\"once\"),\" - avoid drowning and scoring zero\",/*#__PURE__*/React.createElement(\"br\",null),\"by using the oxygen to buy more time, or Resurface to \\\"bank\\\" i.e, end your turn and receive points for the words you've already submitted.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:(boldFont,red)},\"Sharks!\"),\" randomly appear. While struggling with them you cannot refill oxygen tanks!\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:(boldFont,blue)},\"Mines!\"),\" randomly appear. Take great care to ensure your next answer is a valid dictionary word as the invalid-word buzzer will trigger the mine!\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:boldFont},\"Squid!\"),\" randomly appear. They'll squirt ink to cover up the previous clues - hope you've memorized them!\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"A Perfect Dive is achieved by scoring the maximum 38 points. This score can be reached by :\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Getting 1pt for every clue that (each of) your submitted word satisfies. Max = 27pts \"),/*#__PURE__*/React.createElement(\"li\",null,\" +2pts bonus if you got all 27pts\"),/*#__PURE__*/React.createElement(\"li\",null,\" +3pts if you found the Treasure word\"),/*#__PURE__*/React.createElement(\"li\",null,\" +1pts for using no oxygen\"),/*#__PURE__*/React.createElement(\"li\",null,\" +1pts for every unused oxygen tank (up to 5)\")),\"There's treasure to be found - suit-up and lets dive in!\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.handleReplay,className:\"button\",value:\"Replay\"},\"Dive Again!\"),/*#__PURE__*/React.createElement(ReactTooltip,null));}if(this.props.scoreData==null&&this.props.highScoreData==null){return/*#__PURE__*/React.createElement(ReactModal,{isOpen:this.props.showModal,contentLabel:\"Minimal Modal Example\",appElement:document.getElementById(\"root\")},/*#__PURE__*/React.createElement(\"div\",{style:spinnerStyle},/*#__PURE__*/React.createElement(Spinner,null)));}if(this.props.isDead){sadSound.play();return/*#__PURE__*/React.createElement(ReactModal,{isOpen:this.props.showModal,contentLabel:\"Minimal Modal Example\",appElement:document.getElementById(\"root\"),style:{content:{color:'red',backgroundImage:'url(/images/funeral.jpg)',backgroundSize:'cover',backgroundPosition:'center',backgroundColor:'black',overflow:'scroll',filter:'drop-shadow(1px 2px 4px darkblue)'}}},/*#__PURE__*/React.createElement(\"span\",{className:\"DeadSpan\"},\"You perished in the seas while searching for \",/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},this.props.scoreData.wordBeingSought),/*#__PURE__*/React.createElement(\"br\",null),\"Top Three Scores for \",\"'\"+this.props.scoreData.wordBeingSought+\"'\",\" :\",DisplayTopThree(this.props.scoreData.ores),/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.handleReplay,className:\"button\",value:\"Replay\"},\"Dive Again!\")));}var clueScoringRows=[];for(var _index=0;_index<7;_index++){var _element=this.props.scoreData.clueScores[_index];clueScoringRows.push(/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,this.props.userGuesses[_index]),/*#__PURE__*/React.createElement(\"td\",null,_element.scorePerClue[0]>0?SuccessImage():FailImage(_index,0)),/*#__PURE__*/React.createElement(\"td\",null,_element.scorePerClue[1]>0?SuccessImage():FailImage(_index,1)),/*#__PURE__*/React.createElement(\"td\",null,_element.scorePerClue[2]>0?SuccessImage():FailImage(_index,2)),/*#__PURE__*/React.createElement(\"td\",null,_element.scorePerClue[3]>0?SuccessImage():FailImage(_index,3)),/*#__PURE__*/React.createElement(\"td\",null,_element.scorePerClue[4]>0?SuccessImage():FailImage(_index,4)),/*#__PURE__*/React.createElement(\"td\",null,_element.scorePerClue[5]>0?SuccessImage():FailImage(_index,5)),/*#__PURE__*/React.createElement(\"td\",null,\"N/A\")));}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ReactModal,{isOpen:this.props.showModal,contentLabel:\"Minimal Modal Example\",appElement:document.getElementById(\"root\"),style:{content:{color:'darkblue',backgroundColor:'aliceblue',overflow:'scroll',filter:'drop-shadow(1px 2px 4px darkblue)'}}},this.props.scoreData.isPerfectDive!=null&&this.props.scoreData.isPerfectDive==1?PerfectDive():\"\",/*#__PURE__*/React.createElement(\"br\",null),\"You \",this.props.scoreData.foundTreasure!=null&&this.props.scoreData.foundTreasure==1?\"successfully found \":\"were searching for \",\" the Treasure Word : \",/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},this.props.scoreData.wordBeingSought),/*#__PURE__*/React.createElement(\"br\",null),\"You consumed oxygen bottles : \",/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},this.props.oxygenBottlesUsed),/*#__PURE__*/React.createElement(\"br\",null),\"Current Streak : \",DisplayPlayerHighScore(this.props.scoreData.playerHighScore),/*#__PURE__*/React.createElement(\"br\",null),\"Total Score: \",/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},\"$\",this.props.scoreData.totalScore,\"m\"),/*#__PURE__*/React.createElement(\"br\",null),\"Top Scores for \",this.props.scoreData.wordBeingSought,\" :\",DisplayTopThree(this.props.scoreData.topThreeScores),/*#__PURE__*/React.createElement(\"br\",null),\"How you scored against the clues:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:smallerFont},\" (hover over e.g 'Clue 2' to be reminded of that clue)\"),/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"'\"+this.props.clues[0].clueText+\"'\"},\"Clue 1\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"'\"+this.props.clues[1].clueText+\"'\"},\"Clue 2\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"'\"+this.props.clues[2].clueText+\"'\"},\"Clue 3\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"'\"+this.props.clues[3].clueText+\"'\"},\"Clue 4\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"'\"+this.props.clues[4].clueText+\"'\"},\"Clue 5\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"'\"+this.props.clues[5].clueText+\"'\"},\"Clue 6\"),/*#__PURE__*/React.createElement(\"th\",{\"data-tip\":\"'\"+this.props.clues[6].clueText+\"'\"},\"Clue 7\"))),/*#__PURE__*/React.createElement(\"tbody\",null,clueScoringRows)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.handleReplay,className:\"button\",value:\"Replay\"},\"Dive Again!\"),/*#__PURE__*/React.createElement(ReactTooltip,null)));function PerfectDive(){perfectSound.play();return/*#__PURE__*/React.createElement(\"div\",{style:biggerFont},/*#__PURE__*/React.createElement(\"span\",{style:blue},\"CON\"),/*#__PURE__*/React.createElement(\"span\",{style:orange},\"GRAT\"),/*#__PURE__*/React.createElement(\"span\",{style:violet},\"ULAT\"),/*#__PURE__*/React.createElement(\"span\",{style:red},\"IONS! \"),/*#__PURE__*/React.createElement(\"span\",{style:green},\"IT'S \"),/*#__PURE__*/React.createElement(\"span\",{style:orange},\"A \"),/*#__PURE__*/React.createElement(\"span\",{style:violet},\"*PERFECT* \"),/*#__PURE__*/React.createElement(\"span\",{style:red},\"DIVE! \"));}function SuccessImage(){return/*#__PURE__*/React.createElement(\"img\",{src:\"/images/Coin.png\",width:\"25px\",height:\"25px\"});}function FailImage(answerIndex,clueIndex){//console.log(\"aI: \" + answerIndex + \" cI:\" +clueIndex);\nvar isThisRelevant=parseInt(clueIndex)<=parseInt(answerIndex);if(!isThisRelevant){//console.log(\"display N/A for aI: \" + answerIndex + \" cI:\" +clueIndex);\nreturn\"N/A\";}//readme: otherwise it was relevant - a clue they knew about and didn't meet so FAILED\nreturn/*#__PURE__*/React.createElement(\"img\",{src:\"/images/Skull.jpg\",width:\"25px\",height:\"25px\"});}function DisplayTopThree(topThree){//console.log(\"DisplayTopThree: \" + topThree[0].playerName);\nreturn/*#__PURE__*/React.createElement(\"ol\",null,/*#__PURE__*/React.createElement(\"li\",null,topThree[0]!=null&&topThree[0]!=undefined?topThree[0].playerName:\"...no-one yet\",/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},topThree[0]!=null&&topThree[0]!=undefined?\" : $\"+topThree[0].totalPoints+\"m\":\"\")),/*#__PURE__*/React.createElement(\"li\",null,topThree[1]!=null&&topThree[1]!=undefined?topThree[1].playerName:\"...no-one yet\",/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},topThree[1]!=null&&topThree[1]!=undefined?\" : $\"+topThree[1].totalPoints+\"m\":\"\")),/*#__PURE__*/React.createElement(\"li\",null,topThree[2]!=null&&topThree[2]!=undefined?topThree[2].playerName:\"...no-one yet\",/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},topThree[2]!=null&&topThree[2]!=undefined?\" : $\"+topThree[2].totalPoints+\"m\":\"\")));}function DisplayPlayerHighScore(playerHighScore){return/*#__PURE__*/React.createElement(\"span\",{style:resultStyle},playerHighScore[0].currentStreak,\"  consec. treasures found\");}}}]);return ResultsModal;}(React.Component);var smallerFont={fontSize:'smaller'};var boldFont={fontWeight:'bold'};var biggerFont={fontSize:'larger'};var resultStyle={color:'coral',fontFamily:'Arial',fontSize:'larger',textAlign:'left'};var red={color:'red'};var violet={color:'violet'};var green={color:'green'};var orange={color:'orange'};var blue={color:'blue'};var spinnerStyle={margin:\"0 auto\"};export default ResultsModal;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/ResultsModal.js"],"names":["ReactModal","React","useState","Component","Spinner","ReactTooltip","UIfx","perfectSfx","sadSfx","perfectSound","setVolume","sadSound","DisplayLeaderboard","leadDiv","document","getElementById","style","display","rulesDiv","className","DisplayRules","ResultsModal","state","props","showModal","highScoreData","highScoringRows","index","length","element","push","playerName","timesPlayed","perfectDives","foundTreasure","toFixed","oxygenTanksUsed","averagePointsPerDive","longestStreak","currentStreak","totalPoints","boldFont","red","blue","handleReplay","scoreData","spinnerStyle","isDead","play","content","color","backgroundImage","backgroundSize","backgroundPosition","backgroundColor","overflow","filter","resultStyle","wordBeingSought","DisplayTopThree","ores","clueScoringRows","clueScores","userGuesses","scorePerClue","SuccessImage","FailImage","isPerfectDive","PerfectDive","oxygenBottlesUsed","DisplayPlayerHighScore","playerHighScore","totalScore","topThreeScores","smallerFont","clues","clueText","biggerFont","orange","violet","green","answerIndex","clueIndex","isThisRelevant","parseInt","topThree","undefined","fontSize","fontWeight","fontFamily","textAlign","margin"],"mappings":"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","sourcesContent":["import ReactModal from 'react-modal';\nimport React, {useState, Component} from 'react';\nimport Spinner from './Loader';\nimport './ResultsModal.css';\nimport ReactTooltip from 'react-tooltip';\nimport UIfx from 'uifx';\nimport perfectSfx from './sounds/perfect.mp3'; \nimport sadSfx from './sounds/sad.mp3'; \n\nconst perfectSound = new UIfx(perfectSfx);\nperfectSound.setVolume(0.9);\nconst sadSound = new UIfx(sadSfx);\nsadSound.setVolume(0.4);\n\nfunction DisplayLeaderboard()\n{\n  var leadDiv = document.getElementById(\"LeaderboardDiv\");\n  leadDiv.style.display = \"block\";\n\n  var rulesDiv = document.getElementById(\"RulesDiv\");\n  rulesDiv.style.display = \"none\";\n\n  document.getElementById(\"RulesSpan\").className = \"fontSmaller\";\n  document.getElementById(\"LeaderboardSpan\").className = \"fontBigger\";\n}\n\nfunction DisplayRules()\n{\n  var leadDiv = document.getElementById(\"LeaderboardDiv\");\n  leadDiv.style.display = \"none\";\n\n  var rulesDiv = document.getElementById(\"RulesDiv\");\n  rulesDiv.style.display = \"block\";\n\n  document.getElementById(\"RulesSpan\").className = \"fontBigger\";\n  document.getElementById(\"LeaderboardSpan\").className = \"fontSmaller\";\n}\n\nclass ResultsModal extends React.Component {\n    constructor () {\n      super();\n      this.state = {\n      };\n\n    }\n    //scoreData={scoreData.TotalScore} scoreDataDetail={scoreData.ClueScores}\n\n    render () {\n      //console.log(\"ResultsModal\" + this.props.showModal);\n      \n      if(this.props.showModal == false)\n      {\n        return \"\";\n      }\n\n      if(this.props.highScoreData != null)\n      {\n        const highScoringRows = []\n        for (let index = 0; index < this.props.highScoreData.length; index++) {\n          const element = this.props.highScoreData[index];\n          highScoringRows.push(\n          <tr key={element.playerName}>\n            <td>{element.playerName}</td>\n            <td>{element.timesPlayed}</td>\n            <td>{element.perfectDives}</td>\n            <td>{(element.foundTreasure / element.timesPlayed).toFixed(2) * 100}%</td>\n            <td>{(element.oxygenTanksUsed / element.timesPlayed).toFixed(2)}</td>\n            <td>${element.averagePointsPerDive}m</td>\n            <td>{element.longestStreak}</td>\n            <td>{element.currentStreak}</td>\n            <td>${element.totalPoints}m</td>\n          </tr>)\n        }\n\n        return (\n          <ReactModal \n          isOpen={this.props.showModal}\n          contentLabel=\"Minimal Modal Example\"\n          appElement={document.getElementById(\"root\")}\n          >\n            <div>\n              <span id=\"LeaderboardSpan\" className=\"fontBigger\"><a href=\"#\" onClick={()=>DisplayLeaderboard()}>Leaderboard</a></span>\n              <span> / </span>\n              <span id=\"RulesSpan\" className=\"fontSmaller\"><a href=\"#\" onClick={()=>DisplayRules()}>Rules</a></span>\n            </div>\n            <div id=\"LeaderboardDiv\">\n              <table>\n                  <thead>\n                    <tr>\n                      <th data-tip={\"Who\"}>Player Name</th>\n                      <th data-tip={\"Number of Times Played\"}># Dives Taken</th>\n                      <th data-tip={\"Number of Maximum Scores\"}># Perfect Dives</th>\n                      <th data-tip={\"FoundTreasure/TimesPlayed * 100\"}>% Treasure Found</th>\n                      <th data-tip={\"TanksOfOxygenUsed/TimesPlayed\"}>Oxygen Reliance</th>\n                      <th data-tip={\"TotalPoints/TimesPlayed\"}>Avg Points Per Dive</th>\n                      <th data-tip={\"Consecutive dives found treasure\"}>Longest Streak</th>\n                      <th data-tip={\"Consecutive dives found treasure\"}>Current Streak</th>\n                      <th data-tip={\"Total Points\"}>Total Points</th>\n                    </tr>\n                  </thead>\n                <tbody>\n                  {highScoringRows}\n                </tbody>\n              </table>\n            </div>\n            <div id=\"RulesDiv\" style={{display:\"none\"}}>\n              <h1>Dive School (Rules)</h1>\n              You are diving for a hidden Treasure Word - a series of 6 clues will reveal information about the word's make-up leading you ever closer to it, \n              <br/>\n              until the 7th clue will provide you with the dictionary's definition of the word.\n              <br/><br/>\n              The Treasure Word is always a noun, so guess those if you can, but any valid word will earn 1 point-per-clue-it-satisfies.\n              <br/><br/>\n              Even if you successfully guess the Treasure Word before the end, there are still points on the table for you to claim by entering<br/>\n              other words that meet as many clues as possible.\n              <br/><br/>\n              There might be plenty more fish in the sea but you'll only play each noun <span style={boldFont}>once</span> - avoid drowning and scoring zero<br/>\n              by using the oxygen to buy more time, or Resurface to \"bank\" i.e, end your turn and receive points for the words you've already submitted.\n              <br/><br/>\n              <span style={boldFont,red}>Sharks!</span> randomly appear. While struggling with them you cannot refill oxygen tanks!\n              <br/><br/>\n              <span style={boldFont,blue}>Mines!</span> randomly appear. Take great care to ensure your next answer is a valid dictionary word as the invalid-word buzzer will trigger the mine!\n              <br/><br/>\n              <span style={boldFont}>Squid!</span> randomly appear. They'll squirt ink to cover up the previous clues - hope you've memorized them!\n              <br/><br/>\n              A Perfect Dive is achieved by scoring the maximum 38 points.\n              This score can be reached by :\n              <ul>\n                <li>Getting 1pt for every clue that (each of) your submitted word satisfies. Max = 27pts </li>\n                <li> +2pts bonus if you got all 27pts</li>\n                <li> +3pts if you found the Treasure word</li>\n                <li> +1pts for using no oxygen</li>\n                <li> +1pts for every unused oxygen tank (up to 5)</li>\n              </ul>\n              There's treasure to be found - suit-up and lets dive in!\n              <br/><br/>\n            </div>\n            <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n            <ReactTooltip />\n          </ReactModal>\n        );\n      }\n\n      if(this.props.scoreData == null && this.props.highScoreData == null)\n      {\n        return (\n              <ReactModal \n              isOpen={this.props.showModal}\n              contentLabel=\"Minimal Modal Example\"\n              appElement={document.getElementById(\"root\")}\n              >\n              <div style={spinnerStyle}><Spinner/></div>\n              </ReactModal>\n        );\n      }\n\n      if(this.props.isDead)\n      {\n        sadSound.play();\n        return (\n              <ReactModal \n              isOpen={this.props.showModal}\n              contentLabel=\"Minimal Modal Example\"\n              appElement={document.getElementById(\"root\")}\n              style={{\n                content: {\n                  color: 'red',\n                   backgroundImage: 'url(/images/funeral.jpg)',\n                   backgroundSize: 'cover',\n                   backgroundPosition: 'center',\n                  backgroundColor: 'black',\n                  overflow: 'scroll',\n                  filter: 'drop-shadow(1px 2px 4px darkblue)'\n                }\n              }}\n              >\n              {/* <span className=\"DeadSpan\">Not all treasure hunters return home with loot...\n              <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n              </span> */}\n              <span className=\"DeadSpan\">\n                You perished in the seas while searching for <span style={resultStyle}>{this.props.scoreData.wordBeingSought}</span>\n                <br/>\n                Top Three Scores for {\"'\"+ this.props.scoreData.wordBeingSought + \"'\"} : \n                {DisplayTopThree(this.props.scoreData.ores)}\n                <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n              </span>\n              </ReactModal>\n        );\n      }\n\n      const clueScoringRows = []\n\n      for (let index = 0; index < 7; index++) {\n        const element = this.props.scoreData.clueScores[index];\n        clueScoringRows.push(\n        <tr>\n          <td>{this.props.userGuesses[index]}</td>\n          <td>{element.scorePerClue[0] > 0 ? SuccessImage() : FailImage(index, 0)}</td>\n          <td>{element.scorePerClue[1] > 0 ? SuccessImage() : FailImage(index, 1)}</td>\n          <td>{element.scorePerClue[2] > 0 ? SuccessImage() : FailImage(index, 2)}</td>\n          <td>{element.scorePerClue[3] > 0 ? SuccessImage() : FailImage(index, 3)}</td>\n          <td>{element.scorePerClue[4] > 0 ? SuccessImage() : FailImage(index, 4)}</td>\n          <td>{element.scorePerClue[5] > 0 ? SuccessImage() : FailImage(index, 5)}</td>\n          <td>{\"N/A\"}</td>\n        </tr>)\n      }\n\n      return (\n        <div>\n          \n          <ReactModal \n             isOpen={this.props.showModal}\n             contentLabel=\"Minimal Modal Example\"\n             appElement={document.getElementById(\"root\")}\n             style={{\n              content: {\n                color: 'darkblue',\n                backgroundColor: 'aliceblue',\n                overflow: 'scroll',\n                filter: 'drop-shadow(1px 2px 4px darkblue)'\n              }\n            }}\n            \n          >\n            {this.props.scoreData.isPerfectDive != null && this.props.scoreData.isPerfectDive == 1 ? PerfectDive() : \"\"}\n            <br/>  \n            You {this.props.scoreData.foundTreasure != null && this.props.scoreData.foundTreasure == 1 ? \"successfully found \" : \"were searching for \" } the Treasure Word : <span style={resultStyle}>{this.props.scoreData.wordBeingSought}</span>\n            <br/>\n            You consumed oxygen bottles : <span style={resultStyle}>{this.props.oxygenBottlesUsed}</span>\n            <br/>\n            Current Streak : {DisplayPlayerHighScore(this.props.scoreData.playerHighScore)}\n            <br/>\n            Total Score: <span style={resultStyle}>${this.props.scoreData.totalScore}m</span>\n            <br/>\n            Top Scores for {this.props.scoreData.wordBeingSought} : \n            {DisplayTopThree(this.props.scoreData.topThreeScores)}\n            <br/>\n            How you scored against the clues:\n            <br/>\n            <span style={smallerFont}> (hover over e.g 'Clue 2' to be reminded of that clue)</span>\n            <table>\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th data-tip={\"'\" + this.props.clues[0].clueText + \"'\"}>Clue 1</th>\n                    <th data-tip={\"'\" + this.props.clues[1].clueText + \"'\"}>Clue 2</th>\n                    <th data-tip={\"'\" + this.props.clues[2].clueText + \"'\"}>Clue 3</th>\n                    <th data-tip={\"'\" + this.props.clues[3].clueText + \"'\"}>Clue 4</th>\n                    <th data-tip={\"'\" + this.props.clues[4].clueText + \"'\"}>Clue 5</th>\n                    <th data-tip={\"'\" + this.props.clues[5].clueText + \"'\"}>Clue 6</th>\n                    <th data-tip={\"'\" + this.props.clues[6].clueText + \"'\"}>Clue 7</th>\n                  </tr>\n                </thead>\n              <tbody>\n                {clueScoringRows}\n              </tbody>\n            </table>\n            <br/>\n\n            <button onClick={this.props.handleReplay} className=\"button\" value=\"Replay\">Dive Again!</button>\n            <ReactTooltip />\n          </ReactModal>\n        </div>\n      );\n\n      function PerfectDive()\n      {\n        perfectSound.play();\n        return(\n          <div style={biggerFont}>\n            <span style={blue}>CON</span><span style={orange}>GRAT</span><span style={violet}>ULAT</span><span style={red}>IONS! </span>\n            <span style={green}>IT'S </span>\n            <span style={orange}>A </span>\n            <span style={violet}>*PERFECT* </span>\n            <span style={red}>DIVE! </span>\n          </div>            \n        ); \n\n      }\n      function SuccessImage()\n      {\n        return(\n            <img src=\"/images/Coin.png\" width=\"25px\" height=\"25px\"/>\n        );\n      }\n\n      function FailImage(answerIndex,clueIndex)\n      {\n        //console.log(\"aI: \" + answerIndex + \" cI:\" +clueIndex);\n        let isThisRelevant = (parseInt(clueIndex) <= parseInt(answerIndex));\n        if(!isThisRelevant)\n        {\n          //console.log(\"display N/A for aI: \" + answerIndex + \" cI:\" +clueIndex);\n          return \"N/A\";\n        }\n        //readme: otherwise it was relevant - a clue they knew about and didn't meet so FAILED\n        return(\n\n            <img src=\"/images/Skull.jpg\" width=\"25px\" height=\"25px\"/>\n          \n        );\n      }\n\n      function DisplayTopThree(topThree)\n      {\n        //console.log(\"DisplayTopThree: \" + topThree[0].playerName);\n        return(\n          <ol>\n          <li>{topThree[0] != null && topThree[0] != undefined ? topThree[0].playerName : \"...no-one yet\"}<span style={resultStyle}>{topThree[0] != null && topThree[0] != undefined ? \" : $\" + topThree[0].totalPoints + \"m\" : \"\"}</span></li>\n          <li>{topThree[1] != null && topThree[1] != undefined ? topThree[1].playerName : \"...no-one yet\"}<span style={resultStyle}>{topThree[1] != null && topThree[1] != undefined  ? \" : $\" + topThree[1].totalPoints + \"m\" : \"\"}</span></li>\n          <li>{topThree[2] != null && topThree[2] != undefined ? topThree[2].playerName : \"...no-one yet\"}<span style={resultStyle}>{topThree[2] != null && topThree[2] != undefined ? \" : $\" + topThree[2].totalPoints + \"m\" : \"\"}</span></li>\n          </ol>\n        );\n      }\n      function DisplayPlayerHighScore(playerHighScore)\n      {\n        return(\n          <span style={resultStyle}>{playerHighScore[0].currentStreak}  consec. treasures found</span>\n        );\n      }\n\n    }\n  }\n\nvar smallerFont = {\n  fontSize: 'smaller'\n}\n\nvar boldFont = {\n  fontWeight: 'bold'\n}\n\nvar biggerFont = {\n  fontSize: 'larger'\n}\n\n  var resultStyle = {\n    color: 'coral',\n    fontFamily: 'Arial',\n    fontSize: 'larger',\n    textAlign: 'left'\n  }\n\n  var red = {\n    color: 'red'\n  }\n  var violet = {\n    color: 'violet'\n  }\n  var green = {\n    color: 'green'\n  }\n  var orange = {\n    color: 'orange'\n  }\n  var blue = {\n    color: 'blue'\n  }\n\n  var spinnerStyle = {\n    margin: \"0 auto\"\n  }\n\n  export default ResultsModal;"]},"metadata":{},"sourceType":"module"}