{"ast":null,"code":"var _jsxFileName = \"/Users/JMKerr/Code/react-is-fun/src/Timer.js\";\nimport React, { Component } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react';\nimport { useEffect, useState } from \"react\";\n/*\n borrowed from here:\n https://www.digitalocean.com/community/tutorials/react-countdown-timer-react-hooks\n and consider wapping to this more beautiful one:\n https://css-tricks.com/how-to-create-an-animated-countdown-timer-with-html-css-and-javascript/\n \n*/\n\nfunction Timer() {\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    const difference = +new Date(`${year}-10-1`) - +new Date();\n    let timeLeft = {};\n    const countdownFromSeconds = 60;\n\n    if (difference > 0) {\n      timeLeft = {\n        seconds: Math.floor(difference / 1000 % countdownFromSeconds)\n      };\n    }\n\n    return timeLeft;\n  }; //readme: hooks?\n\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft()); // readme: this next line appears to be not needed\n\n  const [year] = useState(new Date().getFullYear());\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push( /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, timeLeft[interval], \" \", \"s \"));\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, timerComponents.length ? timerComponents : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 53\n    }\n  }, \"Time's up!\"));\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/JMKerr/Code/react-is-fun/src/Timer.js"],"names":["React","Component","View","Text","Button","StyleSheet","useEffect","useState","Timer","calculateTimeLeft","year","Date","getFullYear","difference","timeLeft","countdownFromSeconds","seconds","Math","floor","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAcC,IAAd,EAAmBC,MAAnB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAUC,SAAV,EAAqBC,QAArB,QAAqC,OAArC;AACA;;;;;;;;AAOA,SAASC,KAAT,GAAiB;AACb,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAX;AACA,UAAMC,UAAU,GAAG,CAAC,IAAIF,IAAJ,CAAU,GAAED,IAAK,OAAjB,CAAD,GAA4B,CAAC,IAAIC,IAAJ,EAAhD;AACA,QAAIG,QAAQ,GAAG,EAAf;AACA,UAAMC,oBAAoB,GAAG,EAA7B;;AACA,QAAIF,UAAU,GAAG,CAAjB,EAAoB;AAClBC,MAAAA,QAAQ,GAAG;AACTE,QAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAYL,UAAU,GAAG,IAAd,GAAsBE,oBAAjC;AADA,OAAX;AAGD;;AAED,WAAOD,QAAP;AACD,GAZD,CADa,CAcb;;;AACA,QAAM,CAACA,QAAD,EAAWK,WAAX,IAA0BZ,QAAQ,CAACE,iBAAiB,EAAlB,CAAxC,CAfa,CAgBb;;AACA,QAAM,CAACC,IAAD,IAASH,QAAQ,CAAC,IAAII,IAAJ,GAAWC,WAAX,EAAD,CAAvB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,WAAW,CAACV,iBAAiB,EAAlB,CAAX;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,CAAT;AAMA,QAAMY,eAAe,GAAG,EAAxB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBU,OAAtB,CAA+BC,QAAD,IAAc;AAC1C,QAAI,CAACX,QAAQ,CAACW,QAAD,CAAb,EAAyB;AACvB;AACD;;AAEDJ,IAAAA,eAAe,CAACK,IAAhB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,QAAQ,CAACW,QAAD,CADX,OACwB,IADxB,CADF;AAKD,GAVD;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,eAAe,CAACM,MAAhB,GAAyBN,eAAzB,gBAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD9C,CADF;AAKD;;AAED,eAAeb,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { View,Text,Button,StyleSheet } from 'react';\nimport  { useEffect, useState } from \"react\";\n/*\n borrowed from here:\n https://www.digitalocean.com/community/tutorials/react-countdown-timer-react-hooks\n and consider wapping to this more beautiful one:\n https://css-tricks.com/how-to-create-an-animated-countdown-timer-with-html-css-and-javascript/\n \n*/\nfunction Timer() {\n    const calculateTimeLeft = () => {\n      let year = new Date().getFullYear();\n      const difference = +new Date(`${year}-10-1`) - +new Date();\n      let timeLeft = {};\n      const countdownFromSeconds = 60;\n      if (difference > 0) {\n        timeLeft = {\n          seconds: Math.floor((difference / 1000) % countdownFromSeconds),\n        };\n      }\n  \n      return timeLeft;\n    };\n    //readme: hooks?\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n    // readme: this next line appears to be not needed\n    const [year] = useState(new Date().getFullYear());\n  \n    useEffect(() => {\n      setTimeout(() => {\n        setTimeLeft(calculateTimeLeft());\n      }, 1000);\n    });\n  \n    const timerComponents = [];\n  \n    Object.keys(timeLeft).forEach((interval) => {\n      if (!timeLeft[interval]) {\n        return;\n      }\n  \n      timerComponents.push(\n        <span>\n          {timeLeft[interval]} {\"s \"}\n        </span>\n      );\n    });\n    return (\n      <span>\n        {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n      </span>\n    );\n  }\n  \n  export default Timer;"]},"metadata":{},"sourceType":"module"}