{"ast":null,"code":"import _classCallCheck from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/JMKerr/CodeNode2/react-is-fun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{render}from'react-dom';import'./GameBoard.css';import ClueOuter from'./ClueOuter';import Spinner from'./Loader';import UserName from'./UserName';import ResultsModal from'./ResultsModal';import okaySfx from'./sounds/okay.mp3';import waterSfx from'./sounds/water.mp3';import treasureSfx from'./sounds/treasure.mp3';import gaspSfx from'./sounds/gasp.mp3';import rejectedSfx from'./sounds/rejected.mp3';import bombSfx from'./sounds/bomb.mp3';import sharkSfx from'./sounds/jaws.mp3';import squirtSfx from'./sounds/squirt.mp3';import UIfx from'uifx';var okaySound=new UIfx(okaySfx);okaySound.setVolume(0.4);var waterSound=new UIfx(waterSfx);waterSound.setVolume(0.6);var treasureSound=new UIfx(treasureSfx);treasureSound.setVolume(1.0);var gaspSound=new UIfx(gaspSfx);gaspSound.setVolume(0.5);var rejectedSound=new UIfx(rejectedSfx);rejectedSound.setVolume(0.7);var bombSound=new UIfx(bombSfx);bombSound.setVolume(0.9);var sharkSound=new UIfx(sharkSfx);sharkSound.setVolume(0.3);var squirtSound=new UIfx(squirtSfx);squirtSound.setVolume(0.7);function getRandomInt(min,max){var num=Math.floor(Math.random()*Math.floor(max));console.log(\"getRandomInt: \"+min+\" and \"+max);console.log(\"num :\"+num);if(num>=min&&num<=max){return num;}return 0;}var GameBoard=/*#__PURE__*/function(_React$Component){_inherits(GameBoard,_React$Component);var _super=_createSuper(GameBoard);// localhost:5000 | deepseaword.com\n// const [currentRoundBeingPlayed, setCount] = useState(1);\nfunction GameBoard(props){var _this;_classCallCheck(this,GameBoard);_this=_super.call(this,props);_this.addressOfService=\"deepseaword.com\";_this.SendToScoringService=function(){_this.setState({scoreLoading:true});var clueInfo=Array(7).fill(null);clueInfo=_this.state.clues.clues.map(function(item){return item.significantClueInfo;});var formData=new FormData();formData.append('GUID',_this.state.clues.guid);formData.append('userName',_this.state.userName);//readme: replace 14 lines these with LOOPS!\nformData.append('userGuesses[0]',_this.state.userGuesses[0]!=null?_this.state.userGuesses[0]:'realnull');formData.append('userGuesses[1]',_this.state.userGuesses[1]!=null?_this.state.userGuesses[1]:'realnull');formData.append('userGuesses[2]',_this.state.userGuesses[2]!=null?_this.state.userGuesses[2]:'realnull');formData.append('userGuesses[3]',_this.state.userGuesses[3]!=null?_this.state.userGuesses[3]:'realnull');formData.append('userGuesses[4]',_this.state.userGuesses[4]!=null?_this.state.userGuesses[4]:'realnull');formData.append('userGuesses[5]',_this.state.userGuesses[5]!=null?_this.state.userGuesses[5]:'realnull');formData.append('userGuesses[6]',_this.state.userGuesses[6]!=null?_this.state.userGuesses[6]:'realnull');formData.append('clueInfo[0]',clueInfo[0]);formData.append('clueInfo[1]',clueInfo[1]);formData.append('clueInfo[2]',clueInfo[2]);formData.append('clueInfo[3]',clueInfo[3]);formData.append('clueInfo[4]',clueInfo[4]);formData.append('clueInfo[5]',clueInfo[5]);formData.append('clueInfo[6]',clueInfo[6]);formData.append('oxygenUsed',_this.state.oxygenBottlesBought);formData.append('isDead',_this.state.roundTheyWereOnWhenTimerExpired!=null);//http://deepseaworddotnetservice.azurewebsites.net\nfetch('http://'+_this.addressOfService+'/Entries/SubmitForScoring/',{method:'POST',body:formData}).then(function(response){return response.json();}).then(function(data){_this.setState({scoreLoading:false,scoreData:data});});};_this.handleReplay=function(){document.body.scrollTop=0;document.documentElement.scrollTop=0;_this.componentDidMount();_this.fetchNewWord();//this.render();\n};_this.handleSoundOkay=function(){okaySound.play();};_this.handleResurfaceClick=function(thisRoundNumber){_this.setState({resurfaceClicked:true});_this.setState({showModal:true});_this.SendToScoringService();};_this.handleSubmitAndDiveClick=function(thisRoundNumber){//readme: checking the word is good before advancing\nconsole.log(_this.state.mineAppearsInRound);if(_this.state.initializeTimers[0]==null){alert(\"Please click the diver image to start the timer \\n  \");}else if(_this.state.roundTheyWereOnWhenTimerExpired!=null){_this.setState({showModal:true});_this.SendToScoringService();}else{_this.checkWord(thisRoundNumber,_this.state.userGuesses[thisRoundNumber-1]);}};_this.handleDiverClick=function(thisRoundNumber){_this.progressToNextRound(thisRoundNumber);};_this.startTimer=function(thisRoundNumber){if(thisRoundNumber===1&&_this.state.gameStarted==0){_this.progressToNextRound(thisRoundNumber);}};_this.handleOxygenClick=function(thisRoundNumber){gaspSound.play();//readme: not sure if I'll want to count which round the oxygen was used in, might leave param there til i decide\nvar oxygenBottlesBoughtNew=_this.state.oxygenBottlesBought+1;_this.setState({oxygenBottlesBought:oxygenBottlesBoughtNew});};_this.handleChangeUserGuess=function(userGuess,i,key){console.log(\"key was :\"+key);var userGuessesCopy=_this.state.userGuesses.slice();userGuessesCopy[i-1]=userGuess.trim().toUpperCase();_this.setState({userGuesses:userGuessesCopy});if(key==\"Enter\"){// readme: they pressed enter, assume they want to trigger a SubmitAndDive\n_this.handleSubmitAndDiveClick(i);}};_this.handleEnterUserName=function(theirUserName,key){//console.log(\"key was :\" + key);\nif(key==\"Enter\"&&theirUserName.trim().length>0){_this.setState({userName:theirUserName});_this.fetchNewWord(theirUserName.trim());}};_this.handleHighScoreDisplay=function(){_this.setState({showModal:true});fetch('http://'+_this.addressOfService+'/Entries/GetHighScores').then(function(res){return res.json();}).then(function(data){_this.setState({highScoreData:data});}).catch(console.log);};_this.handleHighScoreHide=function(){_this.setState({showModal:false,highScoreMode:0});};_this.handleTimerRanOut=function(i){_this.setState({roundTheyWereOnWhenTimerExpired:i});//todo: drown him!\n};_this.state={userGuesses:Array(7).fill(null),currentRound:1,oxygenBottlesBought:0,oxygenBottlesApplied:0,initializeTimers:Array(7).fill(null),clues:null,roundTheyWereOnWhenTimerExpired:null,isLoadingPage:true,wordLookupFeedbackMessages:Array(7).fill(null),userName:\"\",showModal:false,dictionaryCheckInProgress:false,scoreData:null,scoreLoading:false,resurfaceClicked:false,highScoreData:null,foundTreasureInRound:null,sharkAppearsInRound:getRandomInt(1,4),squidAppearsInRound:getRandomInt(5,7),mineAppearsInRound:getRandomInt(6,8),gameStarted:0,isDemoMode:0};return _this;}_createClass(GameBoard,[{key:\"updateWordFeedback\",value:function updateWordFeedback(thisRoundNumber,message){var wordLookupFeedbackMessagesCopy=this.state.wordLookupFeedbackMessages.slice();wordLookupFeedbackMessagesCopy[thisRoundNumber-1]=message;this.setState({wordLookupFeedbackMessages:wordLookupFeedbackMessagesCopy});}// readme: very important function!\n},{key:\"checkWord\",value:function checkWord(thisRoundNumber,userGuess){var _this2=this;//console.log(thisRoundNumber + \" checkWord : \" +userGuess )\nthis.updateWordFeedback(thisRoundNumber,'Checking dictionary...');userGuess=userGuess.trim().toUpperCase();if(userGuess==\"\"||userGuess==null){this.updateWordFeedback(thisRoundNumber,'Enter word then Submit and Dive');rejectedSound.play();return false;}// readme : they have already used this word on prev round\n// and the +1 because the array is indexed at 0.\nif(this.state.userGuesses.indexOf(userGuess)>-1&&parseInt(this.state.userGuesses.indexOf(userGuess)+1)<thisRoundNumber){this.updateWordFeedback(thisRoundNumber,'Can\\'t use that word again!');rejectedSound.play();return false;}if(this.state.dictionaryCheckInProgress){this.updateWordFeedback(thisRoundNumber,'Double-clickers will be left behind!');rejectedSound.play();return false;}this.setState({dictionaryCheckInProgress:true});//https://deepseaworddotnetservice.azurewebsites.net/Entries\nfetch('http://'+this.addressOfService+'/Entries/LookupWord?word='+userGuess+'&playerName='+this.state.userName).then(function(res){return res.json();}).then(function(data){//this.setState({ clues: data })\nif(data!=null){console.log('word def:'+data.definition);// readme: word was a real word.\n_this2.updateWordFeedback(thisRoundNumber,'Found in dictionary.');//console.log(userGuess.trim().toUpperCase() + \" ? \" + this.state.clues.temporaryWord.trim().toUpperCase());\nif(userGuess.trim().toUpperCase()==_this2.state.clues.temporaryWord.trim().toUpperCase()){treasureSound.play();_this2.setState({foundTreasureInRound:thisRoundNumber});_this2.updateWordFeedback(thisRoundNumber,'Great! Keep going - valid words earn $$');}else{okaySound.play();//this.handleSoundOkay();\n}_this2.setState({currentRound:thisRoundNumber+1});if(thisRoundNumber<7){_this2.handleDiverClick(thisRoundNumber+1);}else{//readme: kick-off the completion code.\n//perform scoring and open lightbox to display response to that?\n_this2.setState({showModal:true});_this2.SendToScoringService();}}else{if(_this2.state.mineAppearsInRound==thisRoundNumber){bombSound.play();_this2.updateWordFeedback(thisRoundNumber,'NOT found - mine exploded!');_this2.setState({roundTheyWereOnWhenTimerExpired:thisRoundNumber});}else{_this2.updateWordFeedback(thisRoundNumber,'NOT found - try another!');rejectedSound.play();}}_this2.setState({dictionaryCheckInProgress:false});}).catch(function(error){console.log(error);_this2.updateWordFeedback(thisRoundNumber,'Apparatus failure. Try again');});}},{key:\"progressToNextRound\",value:function progressToNextRound(thisRoundNumber){//console.log(\"url :\" + window.location.search);\nthis.setState({gameStarted:1});if(thisRoundNumber===1)waterSound.play();//console.log(\"thisROundNum : \" + thisRoundNumber + \" sk : \" + this.state.sharkAppearsInRound);\nif(thisRoundNumber===this.state.sharkAppearsInRound)sharkSound.play();if(thisRoundNumber===this.state.squidAppearsInRound)squirtSound.play();//alert('Clicked on diver' + thisRoundNumber);\nvar initializeTimersCopy=this.state.initializeTimers.slice();// readme: timer has been initialized\ninitializeTimersCopy[thisRoundNumber-1]=1;this.setState({initializeTimers:initializeTimersCopy});}},{key:\"fetchNewWord\",value:function fetchNewWord(theirUserName){var _this3=this;var userName=this.state.userName;if(userName.length==0)userName=theirUserName;fetch('http://'+this.addressOfService+'/Entries/GetWordWithClues?userName='+userName).then(function(res){return res.json();}).then(function(data){_this3.setState({clues:data,isLoadingPage:false});if(data.isFirstTime){_this3.setupDemoMode();}}).catch(console.log);}},{key:\"setupDemoMode\",value:function setupDemoMode(){// readme: first time playing? send them on demo mode.\n// can also put ths shark, jellyfish and bomb to def show .\nthis.setState({sharkAppearsInRound:3,mineAppearsInRound:7,squidAppearsInRound:6,isDemoMode:1});}},{key:\"componentDidMount\",value:function componentDidMount(){// readme: resets all state except username and then fetch a new word\nthis.setState({userGuesses:Array(7).fill(null),currentRound:1,oxygenBottlesBought:0,oxygenBottlesApplied:0,initializeTimers:Array(7).fill(null),clues:null,roundTheyWereOnWhenTimerExpired:null,isLoadingPage:true,wordLookupFeedbackMessages:Array(7).fill(null),showModal:false,dictionaryCheckInProgress:false,scoreData:null,scoreLoading:false,resurfaceClicked:false,highScoreData:null,foundTreasureInRound:null,sharkAppearsInRound:getRandomInt(1,4),squidAppearsInRound:getRandomInt(5,7),mineAppearsInRound:getRandomInt(6,8),gameStarted:0,isDemoMode:0//userName: \"\"\n});}},{key:\"render\",value:function render(){// let clues = GetJson();\n// let parsedClues = JSON.parse(clues);\nvar parsedClues=this.state.clues;// console.log(parsedClues);\n// console.log(\" and \")\n// console.log(parsedClues2);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"background center-screen\"},/*#__PURE__*/React.createElement(\"div\",{className:\"TitleBar\",style:titleStyle},\"DeepSeaWord\"),/*#__PURE__*/React.createElement(\"div\",{style:creditStyle},\"by Chris Kerr\"),/*#__PURE__*/React.createElement(\"div\",{className:\"GameBoard\",style:instructionsStyle},/*#__PURE__*/React.createElement(\"a\",{href:\"#\",style:{color:\"gold\",fontWeight:\"bold\",textAlign:\"left\",paddingRight:\"15px\"},onClick:this.handleHighScoreDisplay},\"High Scores\"),\"\\xA0\",/*#__PURE__*/React.createElement(\"a\",{href:\"#\",style:{color:\"coral\",fontWeight:\"bold\",textAlign:\"right\",paddingLeft:\"15px\"},onClick:this.handleHighScoreDisplay},\"Dive School\"),this.state.isLoadingPage||this.state.userName==\"\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Spinner,null),/*#__PURE__*/React.createElement(UserName,{userName:this.state.userName,changeUserName:this.handleEnterUserName})):this.renderClues(parsedClues),this.renderScore()));}},{key:\"renderScore\",value:function renderScore(){console.log(\"renderScore(scoreData)\");if(this.state.clues==null){return/*#__PURE__*/React.createElement(ResultsModal,{highScoreData:this.state.highScoreData,isDead:this.state.roundTheyWereOnWhenTimerExpired!=null,scoreData:this.state.scoreData,userGuesses:this.state.userGuesses,oxygenBottlesUsed:this.state.oxygenBottlesBought,showModal:this.state.showModal,handleReplay:this.handleReplay});}return/*#__PURE__*/React.createElement(ResultsModal,{highScoreData:this.state.highScoreData,isDead:this.state.roundTheyWereOnWhenTimerExpired!=null,clues:this.state.clues.clues,scoreData:this.state.scoreData,userGuesses:this.state.userGuesses,oxygenBottlesUsed:this.state.oxygenBottlesBought,showModal:this.state.showModal,handleReplay:this.handleReplay});}},{key:\"renderClues\",value:function renderClues(parsedClues){var rows=[];var x=parsedClues;if(x!=null){//console.log(x.clues[0]);\nfor(var i=1;i<parsedClues.clues.length+1;i++){rows.push(this.renderClue(i,parsedClues.clues[i-1]));}}return rows;}},{key:\"renderClue\",value:function renderClue(i,clue){return/*#__PURE__*/ (//readme: wonder at what point its an antipattern to pass so much down.\nReact.createElement(ClueOuter,{style:style,clue:clue,key:i,userGuess:this.state.userGuesses[i-1],onClick:this.handleSubmitAndDiveClick,onClickResurface:this.handleResurfaceClick,onClickOxygen:this.handleOxygenClick,changeUserGuess:this.handleChangeUserGuess,currentRoundBeingPlayed:this.state.currentRound,initializeTimers:this.state.initializeTimers,onDiverClick:this.handleDiverClick,oxygenBottlesBought:this.state.oxygenBottlesBought,oxygenBottlesApplied:this.state.oxygenBottlesApplied,timerRanOut:this.handleTimerRanOut,roundTheyWereOnWhenTimerExpired:this.state.roundTheyWereOnWhenTimerExpired,wordLookupFeedbackMessages:this.state.wordLookupFeedbackMessages,resurfaceClicked:this.state.resurfaceClicked,foundTreasureInRound:this.state.foundTreasureInRound,sharkAppearsInRound:this.state.sharkAppearsInRound,mineAppearsInRound:this.state.mineAppearsInRound,squidAppearsInRound:this.state.squidAppearsInRound,startTimer:this.startTimer,isDemoMode:this.state.isDemoMode,playerName:this.state.userName}));}}]);return GameBoard;}(React.Component);var instructionsStyle={//backgroundColor: 'lightblue',\ncolor:'white',// readme: hehe 'Arial', get it?\nfontFamily:'Courier,Helvetica,Arial',fontSize:'13px',// margin: '20px 200px 40px 200px',\npadding:'2px',minWidth:'50%',textAlign:'center'// readme: better on mobile if no % here\n// width: '60%'\n};var style={backgroundColor:'lightblue',color:'darkblue',// readme: hehe 'Arial', get it?\nfontFamily:'Courier,Helvetica,Arial',fontSize:'12px',// margin: '20px 200px 40px 200px',\npadding:'20px',textAlign:'left'};var creditStyle={//backgroundColor: 'lightblue',\ncolor:'gold',fontFamily:'Cochin',fontSize:'11px',textAlign:'Center',top:'0px'};var titleStyle={//backgroundColor: 'lightblue',\ncolor:'yellow',fontFamily:'Phosphate,Impact,Helvetica,Arial',fontSize:'45px',textAlign:'Center',top:'0px'};export default GameBoard;","map":{"version":3,"sources":["/Users/JMKerr/CodeNode2/react-is-fun/src/GameBoard.js"],"names":["React","render","ClueOuter","Spinner","UserName","ResultsModal","okaySfx","waterSfx","treasureSfx","gaspSfx","rejectedSfx","bombSfx","sharkSfx","squirtSfx","UIfx","okaySound","setVolume","waterSound","treasureSound","gaspSound","rejectedSound","bombSound","sharkSound","squirtSound","getRandomInt","min","max","num","Math","floor","random","console","log","GameBoard","props","addressOfService","SendToScoringService","setState","scoreLoading","clueInfo","Array","fill","state","clues","map","item","significantClueInfo","formData","FormData","append","guid","userName","userGuesses","oxygenBottlesBought","roundTheyWereOnWhenTimerExpired","fetch","method","body","then","response","json","data","scoreData","handleReplay","document","scrollTop","documentElement","componentDidMount","fetchNewWord","handleSoundOkay","play","handleResurfaceClick","thisRoundNumber","resurfaceClicked","showModal","handleSubmitAndDiveClick","mineAppearsInRound","initializeTimers","alert","checkWord","handleDiverClick","progressToNextRound","startTimer","gameStarted","handleOxygenClick","oxygenBottlesBoughtNew","handleChangeUserGuess","userGuess","i","key","userGuessesCopy","slice","trim","toUpperCase","handleEnterUserName","theirUserName","length","handleHighScoreDisplay","res","highScoreData","catch","handleHighScoreHide","highScoreMode","handleTimerRanOut","currentRound","oxygenBottlesApplied","isLoadingPage","wordLookupFeedbackMessages","dictionaryCheckInProgress","foundTreasureInRound","sharkAppearsInRound","squidAppearsInRound","isDemoMode","message","wordLookupFeedbackMessagesCopy","updateWordFeedback","indexOf","parseInt","definition","temporaryWord","error","initializeTimersCopy","isFirstTime","setupDemoMode","parsedClues","titleStyle","creditStyle","instructionsStyle","color","fontWeight","textAlign","paddingRight","paddingLeft","renderClues","renderScore","rows","x","push","renderClue","clue","style","Component","fontFamily","fontSize","padding","minWidth","backgroundColor","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\nimport './GameBoard.css';\nimport ClueOuter from './ClueOuter';\nimport Spinner from './Loader';\nimport UserName from './UserName';\nimport ResultsModal from './ResultsModal';\nimport okaySfx from './sounds/okay.mp3'; \nimport waterSfx from './sounds/water.mp3'; \nimport treasureSfx from './sounds/treasure.mp3'; \nimport gaspSfx from './sounds/gasp.mp3'; \nimport rejectedSfx from './sounds/rejected.mp3';\nimport bombSfx from './sounds/bomb.mp3';\nimport sharkSfx from './sounds/jaws.mp3';\nimport squirtSfx from './sounds/squirt.mp3'; \nimport UIfx from 'uifx';\n\nconst okaySound = new UIfx(okaySfx);\nokaySound.setVolume(0.4);\nconst waterSound = new UIfx(waterSfx);\nwaterSound.setVolume(0.6);\nconst treasureSound = new UIfx(treasureSfx);\ntreasureSound.setVolume(1.0);\nconst gaspSound = new UIfx(gaspSfx);\ngaspSound.setVolume(0.5);\nconst rejectedSound = new UIfx(rejectedSfx);\nrejectedSound.setVolume(0.7);\nconst bombSound = new UIfx(bombSfx);\nbombSound.setVolume(0.9);\nconst sharkSound = new UIfx(sharkSfx);\nsharkSound.setVolume(0.3);\nconst squirtSound = new UIfx(squirtSfx);\nsquirtSound.setVolume(0.7);\n\nfunction getRandomInt(min, max) {\n  var num = Math.floor(Math.random() * Math.floor(max));\n  console.log(\"getRandomInt: \" + min + \" and \" + max);\n  console.log(\"num :\" + num);\n  if(num >= min && num <= max)\n  {\n    return num;\n  }\n  return 0;\n}\n\nclass GameBoard extends React.Component\n{\n    addressOfService = \"deepseaword.com\"; // localhost:5000 | deepseaword.com\n    // const [currentRoundBeingPlayed, setCount] = useState(1);\n    constructor(props) {\n        super(props);\n        this.state = {\n          userGuesses: Array(7).fill(null),\n          currentRound: 1,\n          oxygenBottlesBought: 0,\n          oxygenBottlesApplied: 0,\n          initializeTimers: Array(7).fill(null),\n          clues: null,\n          roundTheyWereOnWhenTimerExpired: null,\n          isLoadingPage: true,\n          wordLookupFeedbackMessages: Array(7).fill(null),\n          userName: \"\",\n          showModal: false,\n          dictionaryCheckInProgress: false,\n          scoreData: null,\n          scoreLoading: false,\n          resurfaceClicked: false,\n          highScoreData: null,\n          foundTreasureInRound: null,\n          sharkAppearsInRound: getRandomInt(1,4),\n          squidAppearsInRound: getRandomInt(5,7),\n          mineAppearsInRound: getRandomInt(6,8),\n          gameStarted: 0,\n          isDemoMode: 0\n        };\n      }\n\n     updateWordFeedback(thisRoundNumber, message){\n      const wordLookupFeedbackMessagesCopy = this.state.wordLookupFeedbackMessages.slice();\n      wordLookupFeedbackMessagesCopy[thisRoundNumber-1] = message;\n      this.setState({wordLookupFeedbackMessages : wordLookupFeedbackMessagesCopy})\n     }\n    \n     // readme: very important function!\n     checkWord(thisRoundNumber,userGuess){\n      //console.log(thisRoundNumber + \" checkWord : \" +userGuess )\n      this.updateWordFeedback(thisRoundNumber,'Checking dictionary...');\n      userGuess = userGuess.trim().toUpperCase();\n\n      if(userGuess == \"\" || userGuess == null)\n      {\n        this.updateWordFeedback(thisRoundNumber,'Enter word then Submit and Dive');\n        rejectedSound.play();\n        return false;\n      }\n\n      // readme : they have already used this word on prev round\n      // and the +1 because the array is indexed at 0.\n      if(this.state.userGuesses.indexOf(userGuess) > -1 && parseInt(this.state.userGuesses.indexOf(userGuess) + 1) < thisRoundNumber)\n      {\n        this.updateWordFeedback(thisRoundNumber,'Can\\'t use that word again!');\n        rejectedSound.play();\n        return false;\n      }\n\n      if(this.state.dictionaryCheckInProgress)\n      {\n        this.updateWordFeedback(thisRoundNumber,'Double-clickers will be left behind!');\n        rejectedSound.play();\n        return false;\n      }\n\n      this.setState({dictionaryCheckInProgress: true}); \n      //https://deepseaworddotnetservice.azurewebsites.net/Entries\n      fetch('http://' + this.addressOfService + '/Entries/LookupWord?word=' + userGuess + '&playerName=' + this.state.userName)\n        .then(res => res.json())\n        .then((data) => {\n          //this.setState({ clues: data })\n          if(data != null)\n          {\n            console.log('word def:' + data.definition);\n            // readme: word was a real word.\n            this.updateWordFeedback(thisRoundNumber,'Found in dictionary.');\n            //console.log(userGuess.trim().toUpperCase() + \" ? \" + this.state.clues.temporaryWord.trim().toUpperCase());\n            if(userGuess.trim().toUpperCase() == this.state.clues.temporaryWord.trim().toUpperCase())\n            {\n              treasureSound.play();\n              this.setState({foundTreasureInRound:thisRoundNumber })\n              this.updateWordFeedback(thisRoundNumber,'Great! Keep going - valid words earn $$');\n            }\n            else\n            {\n              okaySound.play();\n              //this.handleSoundOkay();\n            }\n            this.setState({currentRound: thisRoundNumber+1});\n\n            if(thisRoundNumber < 7)\n            {\n              this.handleDiverClick(thisRoundNumber+1);\n            }\n            else\n            {\n              //readme: kick-off the completion code.\n              //perform scoring and open lightbox to display response to that?\n              this.setState({showModal: true});\n              this.SendToScoringService();  \n            }\n          }\n          else\n          {\n            if(this.state.mineAppearsInRound == thisRoundNumber){\n              bombSound.play();\n              this.updateWordFeedback(thisRoundNumber,'NOT found - mine exploded!');\n              this.setState({roundTheyWereOnWhenTimerExpired: thisRoundNumber}); \n            }\n            else{\n              this.updateWordFeedback(thisRoundNumber,'NOT found - try another!');\n              rejectedSound.play();\n            }     \n          }\n\n          this.setState({dictionaryCheckInProgress: false}); \n\n      })\n      .catch( (error)=>\n      {\n        console.log(error);\n        this.updateWordFeedback(thisRoundNumber,'Apparatus failure. Try again')\n      });\n    }\n\n    SendToScoringService = () => {\n\n              this.setState({scoreLoading: true});\n              let clueInfo = Array(7).fill(null);\n              clueInfo = this.state.clues.clues.map(item => item.significantClueInfo)\n\n              const formData = new FormData();\n\n              formData.append('GUID', this.state.clues.guid);\n              formData.append('userName', this.state.userName);\n              //readme: replace 14 lines these with LOOPS!\n              formData.append('userGuesses[0]', (this.state.userGuesses[0] != null ? this.state.userGuesses[0] : 'realnull' ));\n              formData.append('userGuesses[1]', (this.state.userGuesses[1] != null ? this.state.userGuesses[1] : 'realnull' ));\n              formData.append('userGuesses[2]', (this.state.userGuesses[2] != null ? this.state.userGuesses[2] : 'realnull' ));\n              formData.append('userGuesses[3]', (this.state.userGuesses[3] != null ? this.state.userGuesses[3] : 'realnull' ));\n              formData.append('userGuesses[4]', (this.state.userGuesses[4] != null ? this.state.userGuesses[4] : 'realnull' ));\n              formData.append('userGuesses[5]', (this.state.userGuesses[5] != null ? this.state.userGuesses[5] : 'realnull' ));\n              formData.append('userGuesses[6]', (this.state.userGuesses[6] != null ? this.state.userGuesses[6] : 'realnull' ));\n              formData.append('clueInfo[0]', clueInfo[0]);\n              formData.append('clueInfo[1]', clueInfo[1]);\n              formData.append('clueInfo[2]', clueInfo[2]);\n              formData.append('clueInfo[3]', clueInfo[3]);\n              formData.append('clueInfo[4]', clueInfo[4]);\n              formData.append('clueInfo[5]', clueInfo[5]);\n              formData.append('clueInfo[6]', clueInfo[6]);\n              formData.append('oxygenUsed', this.state.oxygenBottlesBought);\n              formData.append('isDead', this.state.roundTheyWereOnWhenTimerExpired != null)\n\n              //http://deepseaworddotnetservice.azurewebsites.net\n              fetch('http://' + this.addressOfService + '/Entries/SubmitForScoring/', {\n                    method: 'POST',\n                    body: formData\n                  })\n                  .then(response => response.json())\n                  .then(data => {\n\n                    this.setState({scoreLoading: false, scoreData: data});\n\n                  });\n\n    }\n\n    handleReplay = () => {\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n      this.componentDidMount();\n      this.fetchNewWord();\n      //this.render();\n    }\n\n    handleSoundOkay = () => {\n      okaySound.play()\n    }\n\n    handleResurfaceClick = (thisRoundNumber) =>{\n      this.setState({resurfaceClicked: true});\n      this.setState({showModal: true});\n      this.SendToScoringService();  \n    }\n\n    handleSubmitAndDiveClick = (thisRoundNumber) => {\n      //readme: checking the word is good before advancing\n        console.log(this.state.mineAppearsInRound);\n        if(this.state.initializeTimers[0] == null)\n        {\n          alert(\"Please click the diver image to start the timer \\n  \");\n        }\n        else if(this.state.roundTheyWereOnWhenTimerExpired != null)\n        {\n          this.setState({showModal: true});\n          this.SendToScoringService();  \n        }\n        else\n        {\n          this.checkWord(thisRoundNumber, this.state.userGuesses[thisRoundNumber-1]);\n        }\n    };\n\n      // readme: is really a \"move to next round\" function - believed to only be possible to trigger once per round\n      // so doesn't have any protection to prevent multiple calls to it.\n      handleDiverClick = (thisRoundNumber) =>{\n        this.progressToNextRound(thisRoundNumber);\n      }\n\n      // readme: basically init the first timer, triggered by OnFocus on first word, so might (accidentally) be triggered many times\n      // hence need for \"gameStarted\" to ensure only first time does something.\n      startTimer = (thisRoundNumber) =>{\n        if(thisRoundNumber===1 && this.state.gameStarted == 0) {\n          this.progressToNextRound(thisRoundNumber);\n        }\n      }\n\n      progressToNextRound(thisRoundNumber){\n        //console.log(\"url :\" + window.location.search);\n        this.setState({gameStarted : 1})\n        if(thisRoundNumber===1) waterSound.play();\n        //console.log(\"thisROundNum : \" + thisRoundNumber + \" sk : \" + this.state.sharkAppearsInRound);\n        if(thisRoundNumber === this.state.sharkAppearsInRound) sharkSound.play();\n        if(thisRoundNumber === this.state.squidAppearsInRound) squirtSound.play();\n          //alert('Clicked on diver' + thisRoundNumber);\n          const initializeTimersCopy = this.state.initializeTimers.slice();\n          // readme: timer has been initialized\n          initializeTimersCopy[thisRoundNumber-1] = 1;\n          this.setState({initializeTimers : initializeTimersCopy})\n          \n      }\n\n      handleOxygenClick = (thisRoundNumber) => {\n        gaspSound.play();\n        //readme: not sure if I'll want to count which round the oxygen was used in, might leave param there til i decide\n        let oxygenBottlesBoughtNew = this.state.oxygenBottlesBought + 1;\n        this.setState({oxygenBottlesBought: oxygenBottlesBoughtNew});\n      };\n      \n    //readme: this is an example of 2 pieces of info being returned to the parent from a child so we can update the state\n      handleChangeUserGuess = (userGuess,i, key) => {\n        console.log(\"key was :\" + key);\n\n        const userGuessesCopy = this.state.userGuesses.slice();\n        userGuessesCopy[i-1] = userGuess.trim().toUpperCase();\n        this.setState({userGuesses: userGuessesCopy});\n          \n        if(key == \"Enter\")\n        {\n          // readme: they pressed enter, assume they want to trigger a SubmitAndDive\n          this.handleSubmitAndDiveClick(i);\n        }\n     }\n\n     handleEnterUserName = (theirUserName, key) => {\n       //console.log(\"key was :\" + key);\n       if(key == \"Enter\" && theirUserName.trim().length > 0)\n       {\n        this.setState({userName: theirUserName});\n        this.fetchNewWord(theirUserName.trim());\n       }\n     }\n\n      fetchNewWord(theirUserName){\n        var userName = this.state.userName;\n        if(userName.length == 0) userName = theirUserName;\n\n        fetch('http://' + this.addressOfService + '/Entries/GetWordWithClues?userName=' + userName)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ clues: data, isLoadingPage: false })\n          if(data.isFirstTime)\n          {\n            this.setupDemoMode();\n          }\n        })\n        .catch(console.log)\n     }\n\n     setupDemoMode() {\n           // readme: first time playing? send them on demo mode.\n            // can also put ths shark, jellyfish and bomb to def show .\n            this.setState({sharkAppearsInRound: 3, mineAppearsInRound:7, squidAppearsInRound:6, isDemoMode:1});\n     }\n\n     handleHighScoreDisplay = () =>{\n      this.setState({showModal: true});\n\n          fetch('http://' + this.addressOfService + '/Entries/GetHighScores')\n          .then(res => res.json())\n          .then((data) => {\n            this.setState({ highScoreData: data})\n        })\n        .catch(console.log)\n     }\n\n     handleHighScoreHide = () =>{\n      this.setState({showModal: false, highScoreMode: 0});\n     }\n\n     handleTimerRanOut = (i) => {\n        this.setState({roundTheyWereOnWhenTimerExpired: i})\n        //todo: drown him!\n     }\n\n     componentDidMount() {\n       // readme: resets all state except username and then fetch a new word\n      this.setState({\n        userGuesses: Array(7).fill(null),\n        currentRound: 1,\n        oxygenBottlesBought: 0,\n        oxygenBottlesApplied: 0,\n        initializeTimers: Array(7).fill(null),\n        clues: null,\n        roundTheyWereOnWhenTimerExpired: null,\n        isLoadingPage: true,\n        wordLookupFeedbackMessages: Array(7).fill(null),\n        showModal: false,\n        dictionaryCheckInProgress: false,\n        scoreData: null,\n        scoreLoading: false,\n        resurfaceClicked: false,\n        highScoreData: null,\n        foundTreasureInRound : null,\n        sharkAppearsInRound: getRandomInt(1,4),\n        squidAppearsInRound: getRandomInt(5,7),\n        mineAppearsInRound: getRandomInt(6,8),\n        gameStarted: 0,\n        isDemoMode: 0\n        //userName: \"\"\n      });\n    }\n\n\n      render()\n      {\n        // let clues = GetJson();\n        // let parsedClues = JSON.parse(clues);\n        let parsedClues = this.state.clues; \n        // console.log(parsedClues);\n        // console.log(\" and \")\n        // console.log(parsedClues2);\n        return (\n            <div className=\"background center-screen\">\n                <div className='TitleBar' style={titleStyle}>\n                    DeepSeaWord                  \n                </div>\n                <div style={creditStyle}>\n                    by Chris Kerr               \n                </div>\n                <div className='GameBoard' style={instructionsStyle}>\n                    <a href=\"#\" style={{color:\"gold\", fontWeight: \"bold\", textAlign:\"left\", paddingRight:\"15px\"}} onClick={this.handleHighScoreDisplay} >High Scores</a>\n                    &nbsp;\n                    <a href=\"#\" style={{color:\"coral\", fontWeight: \"bold\", textAlign:\"right\", paddingLeft:\"15px\"}} onClick={this.handleHighScoreDisplay} >Dive School</a>\n                    {this.state.isLoadingPage || this.state.userName == \"\" ? <div><Spinner/><UserName userName={this.state.userName} changeUserName={this.handleEnterUserName}/></div>  : this.renderClues(parsedClues)}\n                    {this.renderScore()}\n                </div>\n   \n            </div>\n            )\n        }\n        renderScore()\n        {\n          console.log(\"renderScore(scoreData)\");\n          \n          if (this.state.clues == null)\n          {            \n            return(\n                \n              <ResultsModal highScoreData={this.state.highScoreData} isDead={this.state.roundTheyWereOnWhenTimerExpired != null} scoreData={this.state.scoreData} userGuesses={this.state.userGuesses} oxygenBottlesUsed={this.state.oxygenBottlesBought} showModal={this.state.showModal} handleReplay={this.handleReplay}/>\n          \n            );\n          }\n\n          return(\n              \n                  <ResultsModal highScoreData={this.state.highScoreData} isDead={this.state.roundTheyWereOnWhenTimerExpired != null} clues={this.state.clues.clues} scoreData={this.state.scoreData} userGuesses={this.state.userGuesses} oxygenBottlesUsed={this.state.oxygenBottlesBought} showModal={this.state.showModal} handleReplay={this.handleReplay}/>\n              \n          );\n        }\n\n        renderClues(parsedClues)\n        {\n            let rows = [];\n            var x = parsedClues;\n            if(x != null)\n            {\n              //console.log(x.clues[0]);\n            \n              for(var i = 1; i < parsedClues.clues.length + 1; i++){\n                  rows.push(this.renderClue(i, parsedClues.clues[i-1]));  \n              }\n            }\n\n            return rows;\n        }\n\n        renderClue(i, clue)\n        {\n            return (\n                //readme: wonder at what point its an antipattern to pass so much down.\n                <ClueOuter \n                    style={style} \n                    clue={clue} \n                    key={i} \n                    userGuess={this.state.userGuesses[i-1]} \n                    onClick={this.handleSubmitAndDiveClick} \n                    onClickResurface={this.handleResurfaceClick} \n                    onClickOxygen={this.handleOxygenClick} \n                    changeUserGuess={this.handleChangeUserGuess} \n                    currentRoundBeingPlayed={this.state.currentRound}\n                    initializeTimers={this.state.initializeTimers}\n                    onDiverClick={this.handleDiverClick}\n                    oxygenBottlesBought={this.state.oxygenBottlesBought} \n                    oxygenBottlesApplied={this.state.oxygenBottlesApplied}\n                    timerRanOut={this.handleTimerRanOut}\n                    roundTheyWereOnWhenTimerExpired={this.state.roundTheyWereOnWhenTimerExpired}\n                    wordLookupFeedbackMessages={this.state.wordLookupFeedbackMessages}    \n                    resurfaceClicked={this.state.resurfaceClicked}       \n                    foundTreasureInRound={this.state.foundTreasureInRound}   \n                    sharkAppearsInRound={this.state.sharkAppearsInRound}\n                    mineAppearsInRound={this.state.mineAppearsInRound}  \n                    squidAppearsInRound={this.state.squidAppearsInRound}  \n                    startTimer={this.startTimer}\n                    isDemoMode={this.state.isDemoMode}\n                    playerName={this.state.userName}\n                    />   \n            );\n        }\n}\n\nvar instructionsStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'white',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Courier,Helvetica,Arial',\n    fontSize: '13px',\n    // margin: '20px 200px 40px 200px',\n    padding: '2px',\n    minWidth: '50%',\n    textAlign: 'center',\n    // readme: better on mobile if no % here\n    // width: '60%'\n}\n\nvar style = {\n    backgroundColor: 'lightblue',\n    color: 'darkblue',\n    // readme: hehe 'Arial', get it?\n    fontFamily: 'Courier,Helvetica,Arial',\n    fontSize: '12px',\n    // margin: '20px 200px 40px 200px',\n    padding: '20px',\n    textAlign: 'left'\n  }\n\n  var creditStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'gold',\n    fontFamily: 'Cochin',\n    fontSize: '11px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nvar titleStyle = {\n    //backgroundColor: 'lightblue',\n    color: 'yellow',\n    fontFamily: 'Phosphate,Impact,Helvetica,Arial',\n    fontSize: '45px',\n    textAlign: 'Center',\n    top: '0px'\n  }\n\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}